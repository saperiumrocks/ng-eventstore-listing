{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ng-eventstore-listing/utils/helpers.ts","ng://ng-eventstore-listing/services/jquery.service.ts","ng://ng-eventstore-listing/enums/filter-operator.ts","ng://ng-eventstore-listing/enums/sort-direction.ts","ng://ng-eventstore-listing/enums/group-boolean-operator.ts","ng://ng-eventstore-listing/services/script.service.ts","ng://ng-eventstore-listing/services/push.service.ts","ng://ng-eventstore-listing/services/playback.service.ts","ng://ng-eventstore-listing/services/playback-list.service.ts","ng://ng-eventstore-listing/ng-eventstore-listing.component.ts","ng://ng-eventstore-listing/directives/template.directive.ts","ng://ng-eventstore-listing/components/item-template-holder/item-template-holder.component.ts","ng://ng-eventstore-listing/services/socket.io.service.ts","ng://ng-eventstore-listing/ng-eventstore-listing.module.ts","ng://ng-eventstore-listing/components/template-components/item-template/item-template.component.ts","ng://ng-eventstore-listing/components/template-components/header-footer-template/header-footer-template.component.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__read","o","m","ar","error","Helpers","Math","random","toString","substr","Date","now","JQ_TOKEN","InjectionToken","jQueryFactory","jQuery","FilterOperator","SortDirection","GroupBooleanOperator","ScriptService","scripts","init","scriptStore","promises","forEach","script","_this","name","loaded","src","meta","load","all","_a","_i","loadScript","status","document","querySelectorAll","script_1","createElement","type","readyState","onreadystatechange","onload","onerror","console","log","getElementsByTagName","appendChild","getScript","scriptName","Injectable","PushService","subscriptions","socketUrl","ioPush","io.connect","on","eventObj","_processEvent","_forOwn","sub","subscriptionQuery","query","offset","emit","token","self","queryKey","context","aggregate","aggregateId","keys","clientToken","isNaN","streamRevision","cb","undefined","owner","monitorTags","tag","_meta","reason_1","eventType","stateType","eventSource","monitor","callback","subscribe","pushToken","subscriptionQuery_1","subscriptionToken","catchUpEvents","event","unsubscribe","pushTokens","socketTokens","clientSubscription","_clone","PlaybackService","pushService","_playbackRegistry","_conditionalSubscriptionRegistry","_customPlaybackRegistry","unregisterForPlayback","playbackTokens","map","playbackToken","pushSubscriptionId","rowId","registerForPlayback","stateFunctions","playbackList","streamRevisionFunction","conditionFunction","rowIdFunction","item","playbackSubscriptionId","aggregateId_1","get","rowData","isConditionTrue","err","owner2","registration","thisScriptName","fromEvent_1","payload","fromEvent","eventName","thisPlaybackScript","window","playbackFunction","playbackInterface","state","targetQuery","getPlaybackList","playbackListName","Error","_updateConditionalSubscriptions","customPlaybackConfiguration","row","getState","data","Array","isArray","registerCustomPlaybacks","customPlaybackConfigurations","resetCustomPlaybacks","conditionalSubscription","subQuery","PlaybackListService","http","playbackListBaseUrl","startIndex","limit","filters","sort","previousKey","nextKey","url","encodeURIComponent","JSON","stringify","getPlaybackListCsv","responseType","HttpClient","NgEventstoreListingComponent","$","changeDetectorRef","scriptService","playbackService","playbackListService","updateEmitter","EventEmitter","getLookupsEmitter","showModalEmitter","deleteEmitter","playbackListLoadedEmitter","newItemNotifyEmitter","removedItemNotifyEmitter","getPlaybackLIstErrorEmitter","lookups","itemSubscriptionConfigurations","pageIndex","responseBasePath","emptyListDisplayText","csvFileName","enableLoadingOverlay","minHeightCss","loadingOffset","debugging","_initialized","_isLoading","_getPlaybackListSubject","Subject","_exportPlaybackListSubject","_playbackSubscriptionTokens","_playbackList","rowIndex","_dataList","findIndex","toJS","add","revision","newItem","update","oldData","newData","newEntry","Immutable.fromJS","set","detectChanges","delete","_id","_stateFunctions","id","index","setState","markForCheck","paramIndex","decorator","ngOnInit","ngOnChanges","changes","_previousPageIndex","previousValue","currentValue","requestPlaybackList","_loadScripts","_initializeRequests","ngOnDestroy","_resetSubscriptions","trackByFn","_getPlaybackListSubscription","pipe","debounceTime","switchMap","params","res","rows","_dataCount","_dataTotalCount","count","_previousKey","_nextKey","_initSubscriptions","_initCustomPlaybackConfigurations","totalItems","dataCount","hideLoadingOverlay","_exportPlaybackListSubscription","playbackListRequest","rxMap","response","fileNameOverride","_b","csv","Blob","moment_","fileName","format","saveAs","_getPlaybackList","playbackListRequestParams","showLoadingOverlay","itemsPerPage","pageDelta","itemSubscriptionConfiguration","replace","playbackScriptName","condition","playbackSubscriptionToken","listSubscriptionConfiguration","_c","_isEmpty","_onUpdate","_onGetLookups","_onShowModal","_onDelete","exportCSV","overrideParams","exportPlaybackListRequestParams","css","removeClass","hide","show","loadingTopBoundSelector","_fixLoadingOverlayPosition","windowY","pageYOffset","pageHeaderSectionBottomY","top","addClass","innerHeight","pageHeaderHeight","Inject","args","ChangeDetectorRef","Output","Input","Component","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","TemplateDirective","viewContainerRef","ViewContainerRef","Directive","ItemTemplateHolderComponent","componentFactoryResolver","ngAfterViewInit","loadComponent","initialChanges","componentRef","instance","componentFactory","resolveComponentFactory","itemComponentClass","itemHost","clear","createComponent","onUpdateEmitter","onGetLookupsEmitter","onShowModalEmitter","onDeleteEmitter","ComponentFactoryResolver","ViewChild","SocketIoService","getSocketInstance","NgEventstoreListingModule","NgModule","declarations","imports","CommonModule","exports","providers","provide","useFactory","Éµ0$1","ItemTemplateComponent","_formGroup","FormGroup","_formGroupKeys","registerChangeFunction","changeFn","_changeFn","onUpdate","propertyName","actionData","actionEventEmitterData","idPropertyName","onGetLookups","lookupName","onShowModal","modalName","onDelete","registerFormGroup","formGroup","dataChanges","isFirstChange","dataObj_1","newValue","setValue","onlySelf","createFormControl","initialValue","validators","formControl","FormControl","addControl","HeaderFooterTemplateComponent","actionEmitter","pageChangedEmitter","filterEmitter","onPageChanged","updatePageValues","onFilter","onAction","action","pageStart","pageEnd","min","actualItemCount","totalItemCount"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export const Helpers = {\n  generateToken: () => {\n    return Math.random().toString(36).substr(2, 9) + '-' + Date.now().toString();\n  }\n};\n","import { InjectionToken } from '@angular/core';\n\nexport let JQ_TOKEN = new InjectionToken('jQuery');\n\ndeclare let jQuery: Object;\nexport function jQueryFactory() {\n  return jQuery;\n}\n\n","export enum FilterOperator {\n  range = 'range',\n  dateRange = 'dateRange',\n  is = 'is',\n  any = 'any',\n  contains = 'contains',\n  endsWith = 'endsWith',\n  startsWith = 'startsWith',\n  arrayContains = 'arrayContains',\n  exists = 'exists',\n  notExists = 'notExists'\n}\n","export enum SortDirection {\n  ASC = 'ASC',\n  DESC = 'DESC',\n}\n","export enum GroupBooleanOperator {\n  and = 'and',\n  or = 'or'\n}\n","import { Injectable } from '@angular/core';\nimport { Script } from '../models';\n\ndeclare var document: any;\n\n@Injectable()\nexport class ScriptService {\n  private scripts: any = {};\n\n  constructor() {}\n\n  async init(scriptStore: Script[]) {\n    const promises = [];\n    scriptStore.forEach((script: Script) => {\n      // console.log('SCRIPT STORE LOGGING');\n      this.scripts[script.name] = {\n        loaded: false,\n        src: script.src,\n        meta: script.meta,\n      };\n      promises.push(this.load(script.name));\n    });\n\n    return await Promise.all(promises);\n  }\n\n  async load(...scripts: string[]): Promise<any> {\n    const promises: any[] = [];\n    scripts.forEach((script) => promises.push(this.loadScript(script)));\n    return await Promise.all(promises);\n  }\n\n  loadScript(name: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      // resolve if already loaded\n      if (this.scripts[name].loaded) {\n        // console.log('LOADED');\n        resolve({\n          script: name,\n          loaded: true,\n          status: 'Already Loaded',\n          meta: this.scripts[name].meta,\n        });\n      } else {\n        const existingScript = document.querySelectorAll(`head script[src=\"${this.scripts[name].src}\"]`);\n        if (existingScript.length === 0) {\n          // load script\n          const script = document.createElement('script');\n          script.type = 'text/javascript';\n          script.src = this.scripts[name].src;\n          if (script.readyState) {\n            // IE\n            script.onreadystatechange = () => {\n              // console.log('ON READYSTATECHANGE');\n              if (\n                script.readyState === 'loaded' ||\n                script.readyState === 'complete'\n              ) {\n                script.onreadystatechange = null;\n                this.scripts[name].loaded = true;\n                resolve({\n                  script: name,\n                  loaded: true,\n                  status: 'Loaded',\n                  meta: this.scripts[name].meta,\n                });\n              }\n            };\n          } else {\n            // Others\n            // console.log('ONLOAD');\n            script.onload = () => {\n              this.scripts[name].loaded = true;\n              resolve({\n                script: name,\n                loaded: true,\n                status: 'Loaded',\n                meta: this.scripts[name].meta,\n              });\n            };\n          }\n          script.onerror = (error: any) =>\n          console.log('ON ERROR', error);\n            resolve({\n              script: name,\n              loaded: false,\n              status: 'Loaded',\n              meta: this.scripts[name].meta,\n            });\n          document.getElementsByTagName('head')[0].appendChild(script);\n        } else {\n          // console.log('Script already exists');\n          resolve();\n        }\n      }\n    });\n  }\n\n  getScript(scriptName: string) {\n    return this.scripts[scriptName];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Helpers } from '../utils/helpers.js';\nimport _forOwn from 'lodash-es/forOwn';\nimport _clone from 'lodash-es/clone';\nimport * as io from 'socket.io-client';\n\n@Injectable()\nexport class PushService {\n  private ioPush: any;\n  private subscriptions: any = {};\n  constructor() { }\n\n  init(socketUrl: string) {\n    if (!this.ioPush) {\n      this.ioPush = io.connect(`${socketUrl}/events`);\n\n      this.ioPush.on('message', (eventObj) => {\n        this._processEvent(eventObj);\n      });\n\n      this.ioPush.on('reconnect', () => {\n        // console.log('TEST RECONNECTION');\n        // this.ioPush.emit('resubscribe', () => {\n          // console.log(this.subscriptions);\n          _forOwn(this.subscriptions, (sub) => {\n            const subscriptionQuery = Object.assign(sub.query, {\n              offset: sub.offset,\n            });\n\n            this.ioPush.emit('subscribe', subscriptionQuery, (token: string) => {\n              if (token) {\n                // console.log('Reconnected:', token, subscriptionQuery);\n                sub.token = token;\n              } else {\n                console.error('Reconnect error for query', subscriptionQuery);\n              }\n            });\n          });\n        // });\n      });\n    }\n  }\n\n  _processEvent(eventObj: any) {\n    const self = this;\n    // console.log('got message from push server: ', eventObj);\n    const queryKey = `${eventObj.context}.${eventObj.aggregate}.${eventObj.aggregateId}`;\n    const clientTokens = Object.keys(self.subscriptions);\n    // redirect to mapped subscription/token callback\n    clientTokens.forEach((clientToken) => {\n      const sub = self.subscriptions[clientToken];\n      if (sub) {\n        const subQueryKey = `${sub.query.context}.${sub.query.aggregate}.${sub.query.aggregateId}`;\n        if (subQueryKey === queryKey) {\n          // update next offset (from stream revision) for this subscription, so for reconnecting\n          if (!isNaN(eventObj.streamRevision)) {\n            sub.offset = eventObj.streamRevision + 1;\n          }\n          if (typeof sub.cb === 'function') {\n            sub.cb(undefined, eventObj, sub.owner, clientToken);\n          }\n\n          // iterate on monitors meta tags\n          const tags = Object.keys(sub.monitorTags);\n          tags.forEach((tag) => {\n            // check for state/eventSource._meta or event._meta\n            if (eventObj._meta && eventObj._meta.tag === tag) {\n              let reason = 'N/A';\n              if (typeof eventObj.eventType === 'string') {\n                reason = eventObj.eventType;\n              } else if (typeof eventObj.stateType === 'string') {\n                reason = eventObj.stateType;\n                if (\n                  eventObj.eventSource &&\n                  typeof eventObj.eventSource.eventType === 'string'\n                ) {\n                  reason += ` <- ${eventObj.eventSource.eventType}`;\n                }\n              }\n              // iterate on the monitors\n              const monitors = sub.monitorTags[tag];\n              monitors.forEach((monitor) => {\n                monitor.callback(reason, eventObj._meta);\n              });\n            }\n          });\n        }\n      }\n    });\n  }\n\n  subscribe(query, offset, owner, cb) {\n    // await this.waitForSocketConnection();\n    const pushToken = Helpers.generateToken();\n    // map new subscription, then try to subscribe to server asap\n    this.subscriptions[pushToken] = {\n      query: query,\n      offset: offset,\n      owner: owner,\n      cb: cb,\n      monitorTags: {},\n    };\n\n    const sub = this.subscriptions[pushToken];\n    if (sub && !sub.token) {\n      // build up proper subscribe request query\n      const subscriptionQuery = Object.assign(sub.query, {\n        offset: sub.offset,\n      });\n\n      this.ioPush.emit('subscribe', subscriptionQuery, ({ subscriptionToken, catchUpEvents }) => {\n        if (subscriptionToken) {\n          // console.log('Server Subscribed:', token, subscriptionQuery);\n          sub.token = subscriptionToken;\n        } else {\n          console.error('Subscribe error for query', subscriptionQuery);\n        }\n\n        if (catchUpEvents && catchUpEvents.length > 0) {\n          catchUpEvents.forEach((event) => {\n            cb(undefined, event, owner, pushToken);\n          });\n        }\n      });\n    }\n\n    return pushToken;\n  }\n\n  unsubscribe(pushTokens: string[]): Promise<void> {\n    const socketTokens = [];\n\n    pushTokens.forEach((pushToken) => {\n      if (this.subscriptions[pushToken]) {\n        const clientSubscription = _clone(this.subscriptions[pushToken]);\n        delete this.subscriptions[pushToken];\n\n        const sub = clientSubscription;\n        if (sub && sub.token) {\n          socketTokens.push(sub.token);\n        }\n      }\n    });\n\n    return new Promise((resolve, reject) => {\n      this.ioPush.emit('unsubscribe', socketTokens, () => {\n        resolve();\n      });\n    });\n  }\n}\n","import _clone from 'lodash-es/clone';\nimport { Helpers } from './../utils/helpers';\nimport { Injectable } from '@angular/core';\nimport { PushService } from './push.service';\nimport {\n  StateFunctions,\n  PlaybackList,\n  PlaybackRegistry,\n  Query,\n  ConditionalSubscriptionRegistry,\n  CustomPlaybackConfiguration\n} from '../models';\nimport { CustomPlaybackRegistry } from '../models/custom-playback-registry';\n\n@Injectable()\nexport class PlaybackService {\n  _playbackRegistry: PlaybackRegistry = {};\n  _conditionalSubscriptionRegistry: ConditionalSubscriptionRegistry = {};\n  _customPlaybackRegistry: CustomPlaybackRegistry = {};\n\n  constructor(\n    private pushService: PushService\n  ) {}\n\n  init(socketUrl: string) {\n    this.pushService.init(socketUrl);\n  }\n\n  async unregisterForPlayback(playbackTokens: string[]) {\n    // unregister from playback registry\n    const pushTokens = playbackTokens.map((playbackToken) => {\n      return this._playbackRegistry[playbackToken].pushSubscriptionId;\n    });\n\n    playbackTokens.forEach(async (token) => {\n      const rowId = this._playbackRegistry[token].rowId;\n\n      // console.log('BEFORE');\n      // console.log(this._conditionalSubscriptionRegistry);\n\n      if (rowId) {\n        delete this._conditionalSubscriptionRegistry[rowId];\n      }\n\n      // console.log('AFTER');\n      // console.log(this._conditionalSubscriptionRegistry);\n\n      // unsubscribe from push\n      delete this._playbackRegistry[token];\n    });\n\n    await this.pushService.unsubscribe(pushTokens);\n  }\n\n  async registerForPlayback(\n    owner: object,\n    scriptName: string,\n    query: Query,\n    stateFunctions: StateFunctions,\n    playbackList: PlaybackList,\n    streamRevisionFunction: (item: any) => number = (item) => 0,\n    rowId?: string,\n    conditionFunction?: (item: any) => boolean,\n    rowIdFunction?: (item: any) => string\n  ) {\n    const playbackSubscriptionId = Helpers.generateToken();\n\n    let rowData;\n    if (rowId) {\n      const aggregateId = rowId ? rowId : query.aggregateId;\n      rowData = await new Promise((resolve, reject) => {\n        playbackList.get(aggregateId, (error, item) => {\n          if (error) {\n            reject(error);\n          }\n          resolve(item);\n        });\n      });\n    }\n\n    let streamRevision;\n    let isConditionTrue;\n\n    if (rowData) {\n      streamRevision = streamRevisionFunction(rowData);\n      isConditionTrue = conditionFunction ? (conditionFunction(rowData) ? true : false) : undefined;\n    }\n\n    let pushSubscriptionId;\n    if (isConditionTrue === true || conditionFunction === undefined) {\n      pushSubscriptionId = await this.pushService.subscribe(\n        query,\n        streamRevision,\n        this,\n        async (err, eventObj, owner2) => {\n          // owner is playbackservice\n          const self = owner2 as PlaybackService;\n\n          // console.log(self._playbackRegistry);\n\n          const registration = self._playbackRegistry[playbackSubscriptionId];\n\n          if (registration) {\n            if (eventObj.aggregate === 'states') {\n              const thisScriptName = registration.scriptName;\n              const fromEvent = eventObj.payload._meta.fromEvent;\n              const eventName = fromEvent.payload.name;\n              const thisPlaybackScript = window[thisScriptName];\n              const playbackFunction = thisPlaybackScript.playbackInterface[eventName];\n\n              if (playbackFunction) {\n                if (registration.rowId) {\n                  eventObj.aggregateId = registration.rowId;\n                }\n                const state = eventObj.payload;\n                const funcs = {\n                  emit: (targetQuery, payload, done) => {\n                    done();\n                  },\n                  getPlaybackList: (\n                    playbackListName: string,\n                    callback: (err, playbackList: PlaybackList) => void\n                  ) => {\n                    if (registration.playbackList) {\n                      callback(null, registration.playbackList);\n                    } else {\n                      callback(\n                        new Error(\n                          'PlaybackList does not exist in this registration'\n                        ),\n                        null\n                      );\n                    }\n                  },\n                };\n\n                const doneCallback = () => {\n                  registration.playbackList.get(eventObj.aggregateId, (error, item) => {\n                    self._updateConditionalSubscriptions(eventObj.aggregateId, item);\n                  });\n                };\n\n                playbackFunction(state, fromEvent, funcs, doneCallback);\n\n                // Run custom playbackEvents if they exist\n                if (this._customPlaybackRegistry[eventName]) {\n                  this._customPlaybackRegistry[eventName].forEach((customPlaybackConfiguration: CustomPlaybackConfiguration) => {\n                    customPlaybackConfiguration.playbackFunction(fromEvent);\n                  });\n                }\n              }\n            } else {\n              const thisScriptName = registration.scriptName;\n              const thisPlaybackScript = window[thisScriptName];\n              const playbackFunction = thisPlaybackScript.playbackInterface[eventObj.payload.name];\n\n              if (playbackFunction) {\n                // Override aggregateId to handle other subscriptions\n                if (registration.rowId) {\n                  eventObj.aggregateId = registration.rowId;\n                }\n                const row = stateFunctions.getState(eventObj.aggregateId);\n                const state = row.data;\n                const funcs = {\n                  emit: (targetQuery, payload, done) => {\n                    done();\n                  },\n                  getPlaybackList: (\n                    playbackListName: string,\n                    callback: (err, playbackList: PlaybackList) => void\n                  ) => {\n                    if (registration.playbackList) {\n                      callback(null, registration.playbackList);\n                    } else {\n                      callback(\n                        new Error(\n                          'PlaybackList does not exist in this registration'\n                        ),\n                        null\n                      );\n                    }\n                  },\n                };\n\n                const doneCallback = () => {\n                  registration.playbackList.get(eventObj.aggregateId, (error, item) => {\n                    self._updateConditionalSubscriptions(eventObj.aggregateId, item);\n                  });\n                };\n\n                playbackFunction(state, eventObj, funcs, doneCallback);\n                // Run custom playbackEvents if they exist\n                if (this._customPlaybackRegistry[eventObj.payload.name]) {\n                  this._customPlaybackRegistry[eventObj.payload.name].forEach(\n                    (customPlaybackConfiguration: CustomPlaybackConfiguration) => {\n                      customPlaybackConfiguration.playbackFunction(eventObj);\n                    });\n                }\n              }\n            }\n          }\n        }\n      );\n    }\n\n    // If condition exists, register in conditional registry\n    if (conditionFunction) {\n      if (this._conditionalSubscriptionRegistry[rowId] && Array.isArray(this._conditionalSubscriptionRegistry[rowId])) {\n        this._conditionalSubscriptionRegistry[rowId].push({\n          playbackList: playbackList,\n          scriptName: scriptName,\n          owner: owner,\n          stateFunctions: stateFunctions,\n          query: query,\n          streamRevisionFunction: streamRevisionFunction,\n          conditionFunction: conditionFunction,\n          pushSubscriptionId: pushSubscriptionId,\n          playbackSubscriptionId: playbackSubscriptionId,\n          rowIdFunction: rowIdFunction\n        });\n      } else {\n        this._conditionalSubscriptionRegistry[rowId] = [{\n          playbackList: playbackList,\n          scriptName: scriptName,\n          owner: owner,\n          stateFunctions: stateFunctions,\n          query: query,\n          streamRevisionFunction: streamRevisionFunction,\n          conditionFunction: conditionFunction,\n          pushSubscriptionId: pushSubscriptionId,\n          playbackSubscriptionId: playbackSubscriptionId,\n          rowIdFunction: rowIdFunction\n        }];\n      }\n    }\n\n    this._playbackRegistry[playbackSubscriptionId] = {\n      owner: owner,\n      pushSubscriptionId: pushSubscriptionId,\n      playbackList: playbackList,\n      scriptName: scriptName,\n      rowId: rowId\n    };\n\n    return playbackSubscriptionId;\n  }\n\n  registerCustomPlaybacks(customPlaybackConfigurations: CustomPlaybackConfiguration[]) {\n    customPlaybackConfigurations.forEach((customPlaybackConfiguration: CustomPlaybackConfiguration) => {\n      if (!this._customPlaybackRegistry[customPlaybackConfiguration.eventName]) {\n        this._customPlaybackRegistry[customPlaybackConfiguration.eventName] = [];\n      }\n      this._customPlaybackRegistry[customPlaybackConfiguration.eventName].push(customPlaybackConfiguration);\n    });\n  }\n\n  resetCustomPlaybacks() {\n    this._customPlaybackRegistry = {};\n  }\n\n  _updateConditionalSubscriptions(rowId, rowData) {\n    const conditionalSubscriptions = this._conditionalSubscriptionRegistry[rowId] || [];\n    conditionalSubscriptions.forEach(async (conditionalSubscription) => {\n      if (!conditionalSubscription.pushSubscriptionId && conditionalSubscription.conditionFunction(rowData)) {\n        const offset = conditionalSubscription.streamRevisionFunction(rowData);\n\n        const subQuery = _clone(conditionalSubscription.query);\n\n        if (conditionalSubscription.rowIdFunction) {\n          subQuery.aggregateId = conditionalSubscription.rowIdFunction(rowData);\n        }\n\n        const pushSubscriptionId = this.pushService.subscribe(\n          subQuery,\n          offset,\n          this,\n          async (err, eventObj, owner2) => {\n            // owner is playbackservice\n            const self = owner2 as PlaybackService;\n            const registration = self._playbackRegistry[conditionalSubscription.playbackSubscriptionId];\n\n            if (eventObj.aggregate === 'states') {\n              const thisScriptName = registration.scriptName;\n              const fromEvent = eventObj.payload._meta.fromEvent;\n              const eventName = fromEvent.payload.name;\n              const thisPlaybackScript = window[thisScriptName];\n              const playbackFunction = thisPlaybackScript.playbackInterface[eventName];\n\n              if (playbackFunction) {\n                const state = eventObj.payload;\n                const funcs = {\n                  emit: (targetQuery, payload, done) => {\n                    done();\n                  },\n                  getPlaybackList: (\n                    playbackListName: string,\n                    callback: (err, playbackList: PlaybackList) => void\n                  ) => {\n                    if (registration.playbackList) {\n                      callback(null, registration.playbackList);\n                    } else {\n                      callback(\n                        new Error(\n                          'PlaybackList does not exist in this registration'\n                        ),\n                        null\n                      );\n                    }\n                  },\n                };\n\n                const doneCallback = () => {\n                };\n                playbackFunction(state, fromEvent, funcs, doneCallback);\n              }\n            } else {\n\n              const thisScriptName = registration.scriptName;\n              const thisPlaybackScript = window[thisScriptName];\n              const playbackFunction = thisPlaybackScript.playbackInterface[eventObj.payload.name];\n\n              if (playbackFunction) {\n                // Override aggregateId to handle other subscriptions\n                if (registration.rowId) {\n                  eventObj.aggregateId = registration.rowId;\n                }\n                const row = conditionalSubscription.stateFunctions.getState(eventObj.aggregateId);\n                const state = row.data;\n                const funcs = {\n                  emit: (targetQuery, payload, done) => {\n                    done();\n                  },\n                  getPlaybackList: (\n                    playbackListName: string,\n                    callback: (err, playbackList: PlaybackList) => void\n                  ) => {\n                    if (registration.playbackList) {\n                      callback(null, registration.playbackList);\n                    } else {\n                      callback(\n                        new Error(\n                          'PlaybackList does not exist in this registration'\n                        ),\n                        null\n                      );\n                    }\n                  },\n                };\n\n                const doneCallback = () => {\n                  // stateFunctions.setState(row.rowId, row);\n                };\n\n                playbackFunction(state, eventObj, funcs, doneCallback);\n              }\n            }\n          }\n        );\n\n        // just use the subscriptionId to map the push subscription to the playback\n        this._playbackRegistry[conditionalSubscription.playbackSubscriptionId] = {\n          owner: conditionalSubscription.owner,\n          pushSubscriptionId: pushSubscriptionId,\n          playbackList: conditionalSubscription.playbackList,\n          scriptName: conditionalSubscription.scriptName,\n          rowId: rowId\n        };\n\n        conditionalSubscription.pushSubscriptionId = pushSubscriptionId;\n\n        // console.log('subscribed to playback: ', pushSubscriptionId, conditionalSubscription.query);\n        return pushSubscriptionId;\n      } else if (!conditionalSubscription.conditionFunction(rowData) && conditionalSubscription.pushSubscriptionId) {\n        this.pushService.unsubscribe([conditionalSubscription.pushSubscriptionId]).then(() => {\n          delete this._playbackRegistry[conditionalSubscription.playbackSubscriptionId];\n          conditionalSubscription.pushSubscriptionId = undefined;\n        });\n      }\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Filter, Sort, PlaybackListResponse } from '../models';\n\n@Injectable()\nexport class PlaybackListService {\n  constructor(private http: HttpClient) {}\n\n  getPlaybackList(\n    playbackListBaseUrl: string,\n    playbackListName: string,\n    startIndex: number,\n    limit: number,\n    filters?: Filter[],\n    sort?: Sort[],\n    previousKey?: string,\n    nextKey?: string\n  ): Observable<PlaybackListResponse> {\n    let url = `${playbackListBaseUrl}/playback-list/${playbackListName}?startIndex=${startIndex}&limit=${limit}`;\n\n    if (filters) {\n      url += `&filters=${encodeURIComponent(JSON.stringify(filters))}`;\n    }\n\n    if (sort) {\n      url += `&sort=${JSON.stringify(sort)}`;\n    }\n\n    if (previousKey) {\n      url += '&previousKey=' + previousKey;\n    }\n\n    if (nextKey) {\n        url += '&nextKey=' + nextKey;\n    }\n\n    return this.http.get<PlaybackListResponse>(url);\n  }\n\n  getPlaybackListCsv(\n    playbackListBaseUrl: string,\n    playbackListName: string,\n    startIndex: number,\n    limit: number,\n    filters?: Filter[],\n    sort?: Sort[],\n    type?: string\n  ): Observable<any> {\n    let url = `${playbackListBaseUrl}/playback-list/${playbackListName}/export?startIndex=${startIndex}&limit=${limit}`;\n\n    if (filters) {\n      url += `&filters=${JSON.stringify(filters)}`;\n    }\n\n    if (sort) {\n      url += `&sort=${JSON.stringify(sort)}`;\n    }\n\n    if (type) {\n      url += `&type=${type}`;\n    }\n    return this.http.get<PlaybackListResponse>(url, <any>{ responseType: 'text/csv'});\n  }\n}\n","import { Helpers } from './utils/helpers';\nimport {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  OnDestroy,\n  Inject\n} from '@angular/core';\n\nimport { switchMap, debounceTime ,  map as rxMap } from 'rxjs/operators';\nimport { Subscription ,  Subject } from 'rxjs';\nimport { JQ_TOKEN } from './services/jquery.service';\n\nimport {\n  SubscriptionConfiguration,\n  Script,\n  PlaybackList,\n  RowItem,\n  Filter,\n  Query,\n  Sort,\n  PlaybackListRequest,\n  CustomPlaybackConfiguration,\n  PlaybackListResponse\n} from './models';\n\n\nimport { ScriptService } from './services/script.service';\nimport { PlaybackService } from './services/playback.service';\nimport { PlaybackListService } from './services/playback-list.service';\n\nimport * as Immutable from 'immutable';\nimport _defaultsDeep from 'lodash-es/defaultsDeep';\nimport _isEmpty from 'lodash-es/isEmpty';\nimport _isEqual from 'lodash-es/isEqual';\nimport _cloneDeep from 'lodash-es/cloneDeep';\nimport _clone from 'lodash-es/clone';\nimport _uniq from 'lodash-es/uniq';\nimport _merge from 'lodash-es/defaults';\nimport * as moment_ from 'moment-mini-ts';\n\nimport saveAs from 'file-saver';\n\n@Component({\n  selector: 'lib-ng-eventstore-listing',\n  templateUrl: './ng-eventstore-listing.component.html',\n  styleUrls: [\n    './ng-eventstore-listing.component.css'\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgEventstoreListingComponent\n  implements OnInit, OnChanges, OnDestroy {\n  @Output() updateEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() getLookupsEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() showModalEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() deleteEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() playbackListLoadedEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() newItemNotifyEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() removedItemNotifyEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() getPlaybackLIstErrorEmitter: EventEmitter<any> = new EventEmitter();\n\n  @Input() itemComponentClass: any;\n  @Input() lookups = {};\n  @Input() socketUrl: string;\n  @Input() playbackListBaseUrl: string;\n  @Input() scriptStore: Script[];\n  @Input() itemSubscriptionConfigurations: SubscriptionConfiguration[] = [];\n  @Input() listSubscriptionConfiguration: SubscriptionConfiguration;\n  @Input() playbackListName: string;\n  @Input() filters: Filter[] = null;\n  @Input() sort: Sort[] = null;\n  @Input() pageIndex = 1;\n  @Input() itemsPerPage: number;\n  @Input() responseBasePath = 'data';\n  @Input() emptyListDisplayText = 'No Results';\n  @Input() csvFileName = '';\n  @Input() customPlaybackConfigurations: CustomPlaybackConfiguration[];\n  @Input() enableLoadingOverlay = true;\n  @Input() loadingTopBoundSelector: string;\n  @Input() minHeightCss = '500px';\n  @Input() loadingOffset = '200px';\n\n  @Input() debugging = false;\n\n  _dataList: Immutable.List<RowItem>;\n  _dataCount: number;\n  _dataTotalCount: number;\n  _previousKey: string;\n  _nextKey: string;\n  _previousPageIndex: number;\n  _initialized = false;\n  _isLoading = false;\n  _getPlaybackListSubscription: Subscription;\n  _getPlaybackListSubject: Subject<PlaybackListRequest> = new Subject();\n  _exportPlaybackListSubscription: Subscription;\n  _exportPlaybackListSubject: Subject<any> = new Subject();\n  _playbackSubscriptionTokens: string[] = [];\n  _playbackList: PlaybackList = {\n    get: (rowId: string, callback: (err, item) => void) => {\n      const rowIndex = this._dataList.findIndex((value: any) => {\n        return value.get('rowId') === rowId;\n      });\n\n      if (rowIndex > -1) {\n        const data = this._dataList.get(rowIndex);\n        if (data) {\n          callback(null, (data as any).toJS());\n        } else {\n          callback(null, {});\n        }\n      } else {\n        callback(new Error(`Row with rowId: ${rowIndex} does not exist`), null);\n      }\n    },\n    add: (\n      rowId: string,\n      revision: number,\n      data: any,\n      meta: any,\n      callback: (err?: any) => void\n    ) => {\n      // const newEntry = {\n      //   rowId: rowId,\n      //   revision: revision,\n      //   data: data,\n      //   meta: meta,\n      // };\n      // this.dataList = this.dataList.push(Immutable.fromJS(newEntry));\n      // this.changeDetectorRef.detectChanges();\n      // Do refresh trigger\n      const newItem = {\n        rowId,\n        revision,\n        data,\n        meta\n      };\n      this.newItemNotifyEmitter.emit(newItem);\n      callback();\n    },\n    update: (\n      rowId: string,\n      revision: number,\n      oldData: any,\n      newData: any,\n      meta: any,\n      callback: (err?) => void\n    ) => {\n      const rowIndex = this._dataList.findIndex((value: any) => {\n        return value.get('rowId') === rowId;\n      });\n\n      // oldData is Immutable\n      const newEntry = Immutable.fromJS({\n        rowId: rowId,\n        revision: revision,\n        data: {\n          ...oldData,\n          ...newData,\n        },\n        meta: meta,\n      });\n\n      if (this.debugging) {\n        console.log(newEntry);\n      }\n\n      if (rowIndex > -1) {\n        if (this.debugging) {\n          console.log(rowIndex);\n          console.log(newEntry);\n\n          console.log(this._dataList.toJS());\n        }\n        this._dataList = this._dataList.set(rowIndex, newEntry);\n\n        if (this.debugging) {\n          console.log(this._dataList.toJS());\n        }\n        this.changeDetectorRef.detectChanges();\n        callback();\n      } else {\n        callback(new Error(`Row with rowId: ${rowIndex} does not exist`));\n      }\n    },\n    delete: (rowId: string, callback: (error?: any) => void) => {\n      const rowIndex = this._dataList.findIndex((value: any) => {\n        return value.get('rowId') === rowId;\n      });\n\n      if (rowIndex > -1) {\n        // this._dataList = this._dataList.remove(rowIndex);\n        this.removedItemNotifyEmitter.emit(rowId);\n        callback(null);\n      } else {\n        callback(new Error(`Row with rowId: ${rowIndex} does not exist`));\n      }\n    },\n  };\n\n  _id: string = Helpers.generateToken();\n\n  _stateFunctions = {\n    getState: (id: string) => {\n      const index = this._dataList.findIndex((row: any) => {\n        return row.get('rowId') === id;\n      });\n      if (index > 0) {\n        return (this._dataList.get(index) as any).toJS();\n      }\n\n      return {};\n    },\n    setState: (id: string, data: any) => {\n      const index = this._dataList.findIndex((row: any) => {\n        return row.get('rowId') === id;\n      });\n      this._dataList = this._dataList.set(index, Immutable.fromJS(data));\n      this.changeDetectorRef.markForCheck();\n    },\n  };\n\n  constructor(\n    @Inject(JQ_TOKEN) public $: any,\n    private changeDetectorRef: ChangeDetectorRef,\n    private scriptService: ScriptService,\n    private playbackService: PlaybackService,\n    private playbackListService: PlaybackListService\n  ) {}\n\n  async ngOnInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const self = this;\n\n    if (!self._initialized) {\n      this._initialized = true;\n      this._loadScripts().then(() => {\n        this._initializeRequests();\n        this.playbackService.init(this.socketUrl);\n        const changesKeys = Object.keys(changes);\n        changesKeys.forEach((key) => {\n          self[key] = changes[key].currentValue;\n          switch (key) {\n            case 'pageIndex':\n            case 'filters':\n            case 'sort': {\n              this.requestPlaybackList();\n              break;\n            }\n          }\n        });\n\n      });\n    } else {\n      const changesKeys = Object.keys(changes);\n      changesKeys.forEach((key) => {\n        if (key === 'pageIndex') {\n          self._previousPageIndex = changes[key].previousValue;\n        }\n        self[key] = changes[key].currentValue;\n        switch (key) {\n          case 'pageIndex':\n          case 'filters':\n          case 'sort':\n          case 'playbackListName': {\n            this.requestPlaybackList();\n            break;\n          }\n        }\n      });\n    }\n  }\n\n\n  ngOnDestroy() {\n    this._resetSubscriptions();\n    this.playbackService.resetCustomPlaybacks();\n    this._initialized = false;\n  }\n\n  trackByFn(index: number, item: any) {\n    return item.get('rowId');\n  }\n\n  private _initializeRequests(): void {\n    const self = this;\n    self._getPlaybackListSubscription = self._getPlaybackListSubject\n      .pipe(\n        debounceTime(100),\n        switchMap((params) => {\n          return self.playbackListService.getPlaybackList(\n            self.playbackListBaseUrl,\n            params.playbackListName,\n            params.startIndex,\n            params.limit,\n            params.filters,\n            params.sort,\n            params.previousKey,\n            params.nextKey\n          );\n        })\n      )\n      .subscribe((res: any) => {\n        self._dataList = Immutable.fromJS(res.rows);\n        self._dataCount = res.rows.length;\n        self._dataTotalCount = res.count;\n        self._previousKey = res.previousKey;\n        self._nextKey = res.nextKey;\n\n        self._resetSubscriptions();\n        self._initSubscriptions();\n        self._initCustomPlaybackConfigurations();\n\n        self.changeDetectorRef.detectChanges();\n\n        self.playbackListLoadedEmitter.emit({\n          totalItems: self._dataTotalCount,\n          dataCount: self._dataCount,\n        });\n\n        if (self.enableLoadingOverlay) {\n          self.hideLoadingOverlay();\n        }\n        self._isLoading = false;\n      }, (error: any) => {\n        self.getPlaybackLIstErrorEmitter.emit(error);\n        if (self.enableLoadingOverlay) {\n          self.hideLoadingOverlay();\n        }\n        self._isLoading = false;\n      });\n\n    self._exportPlaybackListSubscription = self._exportPlaybackListSubject\n    .pipe(\n      debounceTime(100),\n      switchMap((params) => {\n        const playbackListRequest = params.playbackListRequest;\n        return self.playbackListService.getPlaybackListCsv(\n          self.playbackListBaseUrl,\n          playbackListRequest.playbackListName,\n          playbackListRequest.startIndex,\n          playbackListRequest.limit,\n          playbackListRequest.filters,\n          playbackListRequest.sort,\n          playbackListRequest.type\n        ).pipe(\n          rxMap((response: PlaybackListResponse) => {\n            return [response, params.fileNameOverride];\n          })\n        );\n      })\n    )\n    .subscribe(([result, fileNameOverride]) => {\n      const csv = new Blob([result], { type: 'text/csv' });\n      const moment = moment_;\n      const now = moment();\n      const fileName = `${fileNameOverride || this.csvFileName || this.playbackListName}-${now.format('YYYY-MM-DD_HHmmss')}.csv`;\n      saveAs(csv, fileName);\n    });\n  }\n\n  _getPlaybackList(\n    playbackListName: string,\n    startIndex: number,\n    limit: number,\n    filters?: Filter[],\n    sort?: Sort[],\n    previousKey?: string,\n    nextKey?: string\n  ) {\n    const playbackListRequestParams: PlaybackListRequest = {\n      playbackListName: playbackListName,\n      startIndex: startIndex,\n      limit: limit,\n      filters: filters,\n      sort: sort,\n      previousKey: previousKey,\n      nextKey: nextKey\n    };\n    this._isLoading = true;\n    if (this.enableLoadingOverlay) {\n      this.showLoadingOverlay();\n    }\n    this._getPlaybackListSubject.next(playbackListRequestParams);\n  }\n\n  requestPlaybackList() {\n    let startIndex;\n    if (this.pageIndex === 1) {\n      this._previousPageIndex = null;\n      this._previousKey = null;\n      this._nextKey = null;\n      startIndex = 0;\n      this._getPlaybackList(\n        this.playbackListName,\n        startIndex,\n        this.itemsPerPage,\n        this.filters,\n        this.sort,\n        null,\n        null\n      );\n    } else if (this._previousKey && this._nextKey) {\n      if (this._dataTotalCount - (this.pageIndex * this.itemsPerPage) <= 0) {\n        startIndex = 0;\n        this._getPlaybackList(\n          this.playbackListName,\n          startIndex,\n          this.itemsPerPage,\n          this.filters,\n          this.sort,\n          null,\n          '__LAST'\n        );\n      } else {\n        let pageDelta = this.pageIndex - this._previousPageIndex;\n        if (pageDelta < 0) {\n          pageDelta *= -1;\n          startIndex = this.itemsPerPage * (pageDelta - 1);\n          this._getPlaybackList(\n            this.playbackListName,\n            startIndex,\n            this.itemsPerPage,\n            this.filters,\n            this.sort,\n            this._previousKey,\n            null\n          );\n        } else {\n          startIndex = this.itemsPerPage * (pageDelta - 1);\n          this._getPlaybackList(\n            this.playbackListName,\n            startIndex,\n            this.itemsPerPage,\n            this.filters,\n            this.sort,\n            null,\n            this._nextKey\n          );\n        }\n      }\n    } else {\n      startIndex = this.itemsPerPage * (this.pageIndex - 1);\n      this._getPlaybackList(\n        this.playbackListName,\n        startIndex,\n        this.itemsPerPage,\n        this.filters,\n        this.sort,\n        null,\n        null\n      );\n    }\n  }\n\n  private async _loadScripts() {\n    if (this.scriptStore) {\n      await this.scriptService.init(this.scriptStore);\n    }\n  }\n\n  private async _initSubscriptions() {\n    const self = this;\n    // Per row subscriptions\n    (self.itemSubscriptionConfigurations || []).forEach((itemSubscriptionConfiguration: SubscriptionConfiguration) => {\n      if (itemSubscriptionConfiguration) {\n        self._dataList.forEach(async (row: any) => {\n          const streamRevisionFunction = itemSubscriptionConfiguration.streamRevisionFunction ?\n            itemSubscriptionConfiguration.streamRevisionFunction : () => +row.get('revision') + 1;\n\n\n          const aggregateId = itemSubscriptionConfiguration.rowIdFunction ?\n              itemSubscriptionConfiguration.rowIdFunction(row.toJS()) : row.get('rowId');\n\n          const query: Query = _clone(itemSubscriptionConfiguration.query);\n          query.aggregateId = query.aggregateId.replace(\n            /{{rowId}}/g,\n            aggregateId\n          );\n\n          const playbackSubscriptionToken = await self.playbackService.registerForPlayback(\n            self,\n            itemSubscriptionConfiguration.playbackScriptName,\n            query,\n            self._stateFunctions,\n            self._playbackList,\n            streamRevisionFunction,\n            row.get('rowId'),\n            itemSubscriptionConfiguration.condition,\n            itemSubscriptionConfiguration.rowIdFunction\n          );\n          this._playbackSubscriptionTokens.push(playbackSubscriptionToken);\n        });\n      }\n    });\n\n    if (self.listSubscriptionConfiguration) {\n      // List subscription\n      this._playbackSubscriptionTokens.push(\n        await self.playbackService.registerForPlayback(\n          self,\n          self.listSubscriptionConfiguration.playbackScriptName,\n          self.listSubscriptionConfiguration.query,\n          self._stateFunctions,\n          self._playbackList,\n          () => 0\n        )\n      );\n    }\n  }\n\n  private _initCustomPlaybackConfigurations() {\n    if (!_isEmpty(this.customPlaybackConfigurations)) {\n      this.playbackService.registerCustomPlaybacks(this.customPlaybackConfigurations);\n    }\n  }\n\n  _resetSubscriptions() {\n    this.playbackService.unregisterForPlayback(this._playbackSubscriptionTokens);\n    this._playbackSubscriptionTokens = [];\n  }\n\n  _onUpdate(payload: any) {\n    this.updateEmitter.emit(payload);\n  }\n\n  _onGetLookups(payload: any) {\n    this.getLookupsEmitter.emit(payload);\n  }\n\n  _onShowModal(payload: any) {\n    this.showModalEmitter.emit(payload);\n  }\n\n  _onDelete(payload: any) {\n    this.deleteEmitter.emit(payload);\n  }\n\n  exportCSV(overrideParams?: PlaybackListRequest, fileNameOverride?: string) {\n    if (overrideParams) {\n      this._exportPlaybackListSubject.next({ playbackListRequest: overrideParams, fileNameOverride: fileNameOverride });\n    } else {\n      const startIndex = this.itemsPerPage * (this.pageIndex - 1);\n      const exportPlaybackListRequestParams: PlaybackListRequest = {\n        playbackListName: this.playbackListName,\n        startIndex: startIndex,\n        limit: 1000000,\n        filters: this.filters,\n        sort: this.sort\n      };\n\n      this._exportPlaybackListSubject.next({ playbackListRequest: exportPlaybackListRequestParams, fileNameOverride: fileNameOverride });\n    }\n  }\n\n  // Loading Overlay Functions\n  hideLoadingOverlay() {\n    const $ = this.$;\n    $('body').css('overflow', '');\n    $('body').removeClass('loading-body');\n    $(`#ng-eventstore-listing-overlay-${this._id}`).hide();\n  }\n\n  showLoadingOverlay() {\n    const $ = this.$;\n    $(`#ng-eventstore-listing-overlay-${this._id}`).show();\n    if (this.loadingTopBoundSelector ? true : false) {\n      this._fixLoadingOverlayPosition();\n    }\n  }\n\n  _fixLoadingOverlayPosition() {\n    const $ = this.$;\n    const windowY = window.pageYOffset;\n    const pageHeaderSectionHeight = 53;\n    const pageHeaderSectionBottomY = $(this.loadingTopBoundSelector).offset().top + pageHeaderSectionHeight;\n    $('body').css('overflow', 'hidden');\n    $('body').addClass('loading-body');\n    if (windowY < pageHeaderSectionBottomY) {\n      $(`#ng-eventstore-listing-overlay-${this._id}`).css('position', 'absolute');\n      $(`#ng-eventstore-listing-overlay-${this._id}`).css('height', `${window.innerHeight}px`);\n      $(`#ng-eventstore-listing-overlay-${this._id}`).css('width', '100%');\n      const pageHeaderHeight = pageHeaderSectionHeight;\n      $(`#ng-eventstore-listing-overlay-${this._id}`).css('margin-top', `${pageHeaderHeight}px`);\n    } else {\n      $(`#ng-eventstore-listing-overlay-${this._id}`).css('position', 'fixed');\n      $(`#ng-eventstore-listing-overlay-${this._id}`).css('height', '100%');\n      $(`#ng-eventstore-listing-overlay-${this._id}`).css('margin-top', '0px');\n    }\n  }\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[libTemplateDirective]'\n})\nexport class TemplateDirective {\n  constructor(public viewContainerRef: ViewContainerRef) { }\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  ViewChild,\n  ComponentFactoryResolver,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ComponentRef,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n  AfterViewInit,\n} from '@angular/core';\nimport { ItemTemplateComponent } from '../template-components/index';\nimport { TemplateDirective } from '../../directives/template.directive';\n\n@Component({\n  selector: 'lib-item-template-holder',\n  templateUrl: './item-template-holder.component.html',\n  styleUrls: ['./item-template-holder.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ItemTemplateHolderComponent\n  implements OnInit, OnChanges, AfterViewInit {\n  @Input() itemComponentClass: any;\n  @Input() data: any = {};\n  @Input() lookups: any = {};\n  @Output() updateEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() getLookupsEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() showModalEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() deleteEmitter: EventEmitter<any> = new EventEmitter();\n\n  componentRef: ComponentRef<any>;\n  initialChanges: SimpleChanges;\n  @ViewChild(TemplateDirective) itemHost: TemplateDirective;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {}\n\n  ngOnInit(): void {\n    // this.loadComponent();\n  }\n\n  ngAfterViewInit(): void {\n    this.loadComponent();\n    if (this.initialChanges) {\n      this.ngOnChanges(this.initialChanges);\n      this.initialChanges = undefined;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const self = this;\n    if (self.componentRef) {\n      const changesKeys = Object.keys(changes);\n      changesKeys.forEach((key) => {\n        (self.componentRef.instance as ItemTemplateComponent)[key] =\n          changes[key].currentValue;\n      });\n      (self.componentRef.instance as ItemTemplateComponent).ngOnChanges(\n        changes\n      );\n    } else {\n      this.initialChanges = changes;\n    }\n  }\n\n  loadComponent(): void {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\n      this.itemComponentClass\n    );\n    const viewContainerRef = this.itemHost.viewContainerRef;\n    viewContainerRef.clear();\n\n    this.componentRef = viewContainerRef.createComponent(componentFactory);\n    (this.componentRef.instance as ItemTemplateComponent).data = this.data;\n    (this.componentRef\n      .instance as ItemTemplateComponent).onUpdateEmitter = this.updateEmitter;\n    (this.componentRef\n      .instance as ItemTemplateComponent).onGetLookupsEmitter = this.getLookupsEmitter;\n    (this.componentRef\n      .instance as ItemTemplateComponent).onShowModalEmitter = this.showModalEmitter;\n    (this.componentRef\n      .instance as ItemTemplateComponent).onDeleteEmitter = this.deleteEmitter;\n    // (this.componentRef.instance as ItemTemplateComponent).idPropertyName = this.idPropertyName;\n    (this.componentRef\n      .instance as ItemTemplateComponent).lookups = this.lookups;\n    (this.componentRef.instance as ItemTemplateComponent).ngOnInit();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client';\n\n@Injectable()\nexport class SocketIoService {\n  // sockets = {};\n  constructor() { }\n  getSocketInstance(socketUrl) {\n    return io.connect(`${socketUrl}/events`);\n  //   if (!this.sockets[socketUrl]) {\n  //     this.sockets[socketUrl] = io.connect(`${socketUrl}/events`);\n  //   }\n  //   return this.sockets[socketUrl];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgEventstoreListingComponent } from './ng-eventstore-listing.component';\nimport { ItemTemplateHolderComponent } from './components/item-template-holder/item-template-holder.component';\n\nimport { CommonModule } from '@angular/common';\nimport { TemplateDirective } from './directives/template.directive';\n// import { IO_TOKEN, SocketIoService } from './services/socket.io.service';\n\n// import * as io from 'socket.io-client';\nimport { ScriptService } from './services/script.service';\nimport { PlaybackService } from './services/playback.service';\nimport { PlaybackListService } from './services/playback-list.service';\nimport { PushService } from './services/push.service';\nimport { SocketIoService } from './services/socket.io.service';\nimport { jQueryFactory, JQ_TOKEN } from './services/jquery.service';\n\n@NgModule({\n  declarations: [\n    NgEventstoreListingComponent,\n    ItemTemplateHolderComponent,\n    TemplateDirective,\n\n  ],\n  imports: [CommonModule],\n  exports: [\n    NgEventstoreListingComponent\n  ],\n  providers: [\n    ScriptService,\n    PlaybackService,\n    PlaybackListService,\n    PushService,\n    SocketIoService,\n    { provide: JQ_TOKEN, useFactory: jQueryFactory }\n    // ,\n    // { provide: IO_TOKEN, useValue: io }\n  ]\n})\nexport class NgEventstoreListingModule {}\n","import {\n  EventEmitter,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectorRef,\n} from '@angular/core';\n\nimport {\n  FormGroup, Validators, FormControl\n} from '@angular/forms';\n\nexport abstract class ItemTemplateComponent implements OnInit, OnChanges {\n  // Event Emitters\n  onUpdateEmitter: EventEmitter<any> = new EventEmitter();\n  onGetLookupsEmitter: EventEmitter<any> = new EventEmitter();\n  onShowModalEmitter: EventEmitter<any> = new EventEmitter();\n  onDeleteEmitter: EventEmitter<any> = new EventEmitter();\n\n  idPropertyName: string;\n  data: any; // Immutable item\n  lookups: any;\n  private _formGroup: FormGroup = new FormGroup({});\n  private _formGroupKeys: string[] = [];\n\n  _changeFn: (changes) => void;\n\n  constructor(protected changeDetectorRef?: ChangeDetectorRef) {}\n\n  ngOnInit(): void {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this._changeFn) {\n      this._changeFn(changes);\n    }\n\n    const dataChanges = changes.data ? changes.data.currentValue : null;\n    if (dataChanges && !changes.data.isFirstChange()) {\n      const dataObj = (dataChanges as any).toJS();\n\n      this._formGroupKeys.forEach((key) => {\n        const newValue = dataObj.data[key];\n        const oldValue = this._formGroup.get(key).value;\n\n        if (newValue !== oldValue) {\n          this._formGroup.get(key).setValue(newValue, { emit: false, onlySelf: true });\n        }\n      });\n\n    }\n\n\n    if (this.changeDetectorRef) {\n      this.changeDetectorRef.detectChanges();\n    }\n  }\n\n  registerChangeFunction = (changeFn: (changes) => void) => {\n    this._changeFn = changeFn;\n  }\n\n  onUpdate = (propertyName: string, actionData: any) => {\n    const actionEventEmitterData = {\n      propertyName: propertyName,\n      id: this.data.get(this.idPropertyName),\n      data: actionData,\n    };\n    this.onUpdateEmitter.emit(actionEventEmitterData);\n  }\n\n  onGetLookups = (lookupName: string, callback: (payload: any) => void) => {\n    const actionEventEmitterData = {\n      lookupName: lookupName,\n      callback: callback\n    };\n    this.onGetLookupsEmitter.emit(actionEventEmitterData);\n  }\n\n  onShowModal = (modalName, data) => {\n    const actionEventEmitterData = {\n      modalName: modalName,\n      id: this.data.get(this.idPropertyName),\n      data: data,\n    };\n    this.onShowModalEmitter.emit(actionEventEmitterData);\n  }\n\n  onDelete = (actionData?: any) => {\n    const actionEventEmitterData = {\n      id: this.data.get(this.idPropertyName),\n      data: actionData,\n    };\n    this.onDeleteEmitter.emit(actionEventEmitterData);\n  }\n\n  // registerFormControl(propertyName: string)\n  registerFormGroup = (formGroup: FormGroup): void => {\n    this._formGroup = formGroup;\n  }\n\n  createFormControl(propertyName: string, initialValue: any, validators: Validators): FormControl {\n    const formControl = new FormControl(initialValue, validators);\n    this._formGroup.addControl(propertyName, formControl);\n    this._formGroupKeys.push(propertyName);\n    return formControl;\n  }\n\n}\n","import { EventEmitter, OnInit, ChangeDetectorRef } from '@angular/core';\n\nexport abstract class HeaderFooterTemplateComponent implements OnInit {\n  // Event Emitters\n  actionEmitter: EventEmitter<any> = new EventEmitter();\n  pageChangedEmitter: EventEmitter<any> = new EventEmitter();\n  filterEmitter: EventEmitter<any> = new EventEmitter();\n\n  // Pager\n  totalItemCount: number;\n  pageStart: number;\n  pageEnd: number;\n  pageIndex: number;\n  maxSize: number;\n  itemsPerPage: number;\n  actualItemCount: number;\n\n  data: any; // Immutable item\n  lookups: any;\n\n  invalidSearch: boolean;\n\n  constructor(private changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngOnInit(): void { }\n\n  updatePageValues(): void {\n    this.pageStart = ((this.pageIndex - 1) * this.itemsPerPage) + 1;\n    this.pageEnd = Math.min((((this.pageIndex - 1) * this.itemsPerPage) + this.actualItemCount), this.totalItemCount);\n    this.changeDetectorRef.detectChanges();\n  }\n\n  onPageChanged = (event) => {\n    this.pageIndex = event;\n    this.updatePageValues();\n    this.pageChangedEmitter.emit(event);\n  }\n\n  onFilter = (event) => {\n    this.filterEmitter.emit(event);\n  }\n\n  onAction = (action: string, data?: any) => {\n    const actionData = {\n      action: action,\n      data: data\n    };\n    this.actionEmitter.emit(actionData);\n  }\n}\n"]}