import { EventEmitter } from '@angular/core';
export class HeaderFooterTemplateComponent {
    constructor(changeDetectorRef) {
        this.changeDetectorRef = changeDetectorRef;
        // Event Emitters
        this.actionEmitter = new EventEmitter();
        this.pageChangedEmitter = new EventEmitter();
        this.filterEmitter = new EventEmitter();
        this.onPageChanged = (event) => {
            this.pageIndex = event;
            this.updatePageValues();
            this.pageChangedEmitter.emit(event);
        };
        this.onFilter = (event) => {
            this.filterEmitter.emit(event);
        };
        this.onAction = (action, data) => {
            const actionData = {
                action: action,
                data: data
            };
            this.actionEmitter.emit(actionData);
        };
    }
    ngOnInit() { }
    updatePageValues() {
        this.pageStart = ((this.pageIndex - 1) * this.itemsPerPage) + 1;
        this.pageEnd = Math.min((((this.pageIndex - 1) * this.itemsPerPage) + this.actualItemCount), this.totalItemCount);
        this.changeDetectorRef.detectChanges();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLWZvb3Rlci10ZW1wbGF0ZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1ldmVudHN0b3JlLWxpc3RpbmcvIiwic291cmNlcyI6WyJjb21wb25lbnRzL3RlbXBsYXRlLWNvbXBvbmVudHMvaGVhZGVyLWZvb3Rlci10ZW1wbGF0ZS9oZWFkZXItZm9vdGVyLXRlbXBsYXRlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUE2QixNQUFNLGVBQWUsQ0FBQztBQUV4RSxNQUFNLE9BQWdCLDZCQUE2QjtJQW9CakQsWUFBb0IsaUJBQW9DO1FBQXBDLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBbUI7UUFuQnhELGlCQUFpQjtRQUNqQixrQkFBYSxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ3RELHVCQUFrQixHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBQzNELGtCQUFhLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7UUEyQnRELGtCQUFhLEdBQUcsQ0FBQyxLQUFLLEVBQUUsRUFBRTtZQUN4QixJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztZQUN2QixJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztZQUN4QixJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3RDLENBQUMsQ0FBQTtRQUVELGFBQVEsR0FBRyxDQUFDLEtBQUssRUFBRSxFQUFFO1lBQ25CLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ2pDLENBQUMsQ0FBQTtRQUVELGFBQVEsR0FBRyxDQUFDLE1BQWMsRUFBRSxJQUFVLEVBQUUsRUFBRTtZQUN4QyxNQUFNLFVBQVUsR0FBRztnQkFDakIsTUFBTSxFQUFFLE1BQU07Z0JBQ2QsSUFBSSxFQUFFLElBQUk7YUFDWCxDQUFDO1lBQ0YsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDdEMsQ0FBQyxDQUFBO0lBMUJELENBQUM7SUFFRCxRQUFRLEtBQVcsQ0FBQztJQUVwQixnQkFBZ0I7UUFDZCxJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDaEUsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsRUFBRSxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDbEgsSUFBSSxDQUFDLGlCQUFpQixDQUFDLGFBQWEsRUFBRSxDQUFDO0lBQ3pDLENBQUM7Q0FtQkYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIE9uSW5pdCwgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEhlYWRlckZvb3RlclRlbXBsYXRlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgLy8gRXZlbnQgRW1pdHRlcnNcbiAgYWN0aW9uRW1pdHRlcjogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIHBhZ2VDaGFuZ2VkRW1pdHRlcjogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIGZpbHRlckVtaXR0ZXI6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIC8vIFBhZ2VyXG4gIHRvdGFsSXRlbUNvdW50OiBudW1iZXI7XG4gIHBhZ2VTdGFydDogbnVtYmVyO1xuICBwYWdlRW5kOiBudW1iZXI7XG4gIHBhZ2VJbmRleDogbnVtYmVyO1xuICBtYXhTaXplOiBudW1iZXI7XG4gIGl0ZW1zUGVyUGFnZTogbnVtYmVyO1xuICBhY3R1YWxJdGVtQ291bnQ6IG51bWJlcjtcblxuICBkYXRhOiBhbnk7IC8vIEltbXV0YWJsZSBpdGVtXG4gIGxvb2t1cHM6IGFueTtcblxuICBpbnZhbGlkU2VhcmNoOiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY2hhbmdlRGV0ZWN0b3JSZWY6IENoYW5nZURldGVjdG9yUmVmKSB7XG4gIH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHsgfVxuXG4gIHVwZGF0ZVBhZ2VWYWx1ZXMoKTogdm9pZCB7XG4gICAgdGhpcy5wYWdlU3RhcnQgPSAoKHRoaXMucGFnZUluZGV4IC0gMSkgKiB0aGlzLml0ZW1zUGVyUGFnZSkgKyAxO1xuICAgIHRoaXMucGFnZUVuZCA9IE1hdGgubWluKCgoKHRoaXMucGFnZUluZGV4IC0gMSkgKiB0aGlzLml0ZW1zUGVyUGFnZSkgKyB0aGlzLmFjdHVhbEl0ZW1Db3VudCksIHRoaXMudG90YWxJdGVtQ291bnQpO1xuICAgIHRoaXMuY2hhbmdlRGV0ZWN0b3JSZWYuZGV0ZWN0Q2hhbmdlcygpO1xuICB9XG5cbiAgb25QYWdlQ2hhbmdlZCA9IChldmVudCkgPT4ge1xuICAgIHRoaXMucGFnZUluZGV4ID0gZXZlbnQ7XG4gICAgdGhpcy51cGRhdGVQYWdlVmFsdWVzKCk7XG4gICAgdGhpcy5wYWdlQ2hhbmdlZEVtaXR0ZXIuZW1pdChldmVudCk7XG4gIH1cblxuICBvbkZpbHRlciA9IChldmVudCkgPT4ge1xuICAgIHRoaXMuZmlsdGVyRW1pdHRlci5lbWl0KGV2ZW50KTtcbiAgfVxuXG4gIG9uQWN0aW9uID0gKGFjdGlvbjogc3RyaW5nLCBkYXRhPzogYW55KSA9PiB7XG4gICAgY29uc3QgYWN0aW9uRGF0YSA9IHtcbiAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgZGF0YTogZGF0YVxuICAgIH07XG4gICAgdGhpcy5hY3Rpb25FbWl0dGVyLmVtaXQoYWN0aW9uRGF0YSk7XG4gIH1cbn1cbiJdfQ==