{
  "version": 3,
  "file": "ng-eventstore-listing.js",
  "sources": [
    "ng://ng-eventstore-listing/out/components/template-components/header-footer-template/header-footer-template.component.ts",
    "ng://ng-eventstore-listing/out/components/template-components/item-template/item-template.component.ts",
    "ng://ng-eventstore-listing/out/enums/group-boolean-operator.ts",
    "ng://ng-eventstore-listing/out/enums/sort-direction.ts",
    "ng://ng-eventstore-listing/out/enums/filter-operator.ts",
    "ng://ng-eventstore-listing/out/ng-eventstore-listing.module.ts",
    "ng://ng-eventstore-listing/out/services/socket.io.service.ts",
    "ng://ng-eventstore-listing/out/components/item-template-holder/item-template-holder.component.ts",
    "ng://ng-eventstore-listing/out/directives/template.directive.ts",
    "ng://ng-eventstore-listing/out/ng-eventstore-listing.component.ts",
    "ng://ng-eventstore-listing/out/services/playback-list.service.ts",
    "ng://ng-eventstore-listing/out/services/playback.service.ts",
    "ng://ng-eventstore-listing/out/services/push.service.ts",
    "ng://ng-eventstore-listing/out/services/script.service.ts",
    "ng://ng-eventstore-listing/out/services/jquery.service.ts",
    "ng://ng-eventstore-listing/out/utils/helpers.ts"
  ],
  "sourcesContent": [
    "import { EventEmitter, OnInit, ChangeDetectorRef } from '@angular/core';\n\nexport abstract class HeaderFooterTemplateComponent implements OnInit {\n  // Event Emitters\n  actionEmitter: EventEmitter<any> = new EventEmitter();\n  pageChangedEmitter: EventEmitter<any> = new EventEmitter();\n  filterEmitter: EventEmitter<any> = new EventEmitter();\n\n  // Pager\n  totalItemCount: number;\n  pageStart: number;\n  pageEnd: number;\n  pageIndex: number;\n  maxSize: number;\n  itemsPerPage: number;\n  actualItemCount: number;\n\n  data: any; // Immutable item\n  lookups: any;\n\n  invalidSearch: boolean;\n\n  constructor(private changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngOnInit(): void { }\n\n  updatePageValues(): void {\n    this.pageStart = ((this.pageIndex - 1) * this.itemsPerPage) + 1;\n    this.pageEnd = Math.min((((this.pageIndex - 1) * this.itemsPerPage) + this.actualItemCount), this.totalItemCount);\n    this.changeDetectorRef.detectChanges();\n  }\n\n  onPageChanged = (event) => {\n    this.pageIndex = event;\n    this.updatePageValues();\n    this.pageChangedEmitter.emit(event);\n  }\n\n  onFilter = (event) => {\n    this.filterEmitter.emit(event);\n  }\n\n  onAction = (action: string, data?: any) => {\n    const actionData = {\n      action: action,\n      data: data\n    };\n    this.actionEmitter.emit(actionData);\n  }\n}\n",
    "import {\r\n  EventEmitter,\r\n  OnInit,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ChangeDetectorRef,\r\n} from '@angular/core';\r\n\r\nimport {\r\n  FormGroup, Validators, FormControl\r\n} from '@angular/forms';\r\n\r\nexport abstract class ItemTemplateComponent implements OnInit, OnChanges {\r\n  // Event Emitters\r\n  onUpdateEmitter: EventEmitter<any> = new EventEmitter();\r\n  onGetLookupsEmitter: EventEmitter<any> = new EventEmitter();\r\n  onShowModalEmitter: EventEmitter<any> = new EventEmitter();\r\n  onDeleteEmitter: EventEmitter<any> = new EventEmitter();\r\n\r\n  idPropertyName: string;\r\n  data: any; // Immutable item\r\n  lookups: any;\r\n  private _formGroup: FormGroup = new FormGroup({});\r\n  private _formGroupKeys: string[] = [];\r\n\r\n  _changeFn: (changes) => void;\r\n\r\n  constructor(protected changeDetectorRef?: ChangeDetectorRef) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (this._changeFn) {\r\n      this._changeFn(changes);\r\n    }\r\n\r\n    const dataChanges = changes.data ? changes.data.currentValue : null;\r\n    if (dataChanges && !changes.data.isFirstChange()) {\r\n      const dataObj = (dataChanges as any).toJS();\r\n\r\n      this._formGroupKeys.forEach((key) => {\r\n        const newValue = dataObj.data[key];\r\n        const oldValue = this._formGroup.get(key).value;\r\n\r\n        if (newValue !== oldValue) {\r\n          this._formGroup.get(key).setValue(newValue, { emit: false, onlySelf: true });\r\n        }\r\n      });\r\n\r\n    }\r\n\r\n\r\n    if (this.changeDetectorRef) {\r\n      this.changeDetectorRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  registerChangeFunction = (changeFn: (changes) => void) => {\r\n    this._changeFn = changeFn;\r\n  }\r\n\r\n  onUpdate = (propertyName: string, actionData: any) => {\r\n    const actionEventEmitterData = {\r\n      propertyName: propertyName,\r\n      id: this.data.get(this.idPropertyName),\r\n      data: actionData,\r\n    };\r\n    this.onUpdateEmitter.emit(actionEventEmitterData);\r\n  }\r\n\r\n  onGetLookups = (lookupName: string, callback: (payload: any) => void) => {\r\n    const actionEventEmitterData = {\r\n      lookupName: lookupName,\r\n      callback: callback\r\n    };\r\n    this.onGetLookupsEmitter.emit(actionEventEmitterData);\r\n  }\r\n\r\n  onShowModal = (modalName, data) => {\r\n    const actionEventEmitterData = {\r\n      modalName: modalName,\r\n      id: this.data.get(this.idPropertyName),\r\n      data: data,\r\n    };\r\n    this.onShowModalEmitter.emit(actionEventEmitterData);\r\n  }\r\n\r\n  onDelete = (actionData?: any) => {\r\n    const actionEventEmitterData = {\r\n      id: this.data.get(this.idPropertyName),\r\n      data: actionData,\r\n    };\r\n    this.onDeleteEmitter.emit(actionEventEmitterData);\r\n  }\r\n\r\n  // registerFormControl(propertyName: string)\r\n  registerFormGroup = (formGroup: FormGroup): void => {\r\n    this._formGroup = formGroup;\r\n  }\r\n\r\n  createFormControl(propertyName: string, initialValue: any, validators: Validators): FormControl {\r\n    const formControl = new FormControl(initialValue, validators);\r\n    this._formGroup.addControl(propertyName, formControl);\r\n    this._formGroupKeys.push(propertyName);\r\n    return formControl;\r\n  }\r\n\r\n}\r\n",
    "export enum GroupBooleanOperator {\n  and = 'and',\n  or = 'or'\n}\n",
    "export enum SortDirection {\n  ASC = 'ASC',\n  DESC = 'DESC',\n}\n",
    "export enum FilterOperator {\r\n  range = 'range',\r\n  dateRange = 'dateRange',\r\n  is = 'is',\r\n  any = 'any',\r\n  contains = 'contains',\r\n  endsWith = 'endsWith',\r\n  startsWith = 'startsWith',\r\n  arrayContains = 'arrayContains',\r\n  exists = 'exists',\r\n  notExists = 'notExists'\r\n}\r\n",
    "import { NgModule } from '@angular/core';\r\nimport { NgEventstoreListingComponent } from './ng-eventstore-listing.component';\r\nimport { ItemTemplateHolderComponent } from './components/item-template-holder/item-template-holder.component';\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { TemplateDirective } from './directives/template.directive';\r\n// import { IO_TOKEN, SocketIoService } from './services/socket.io.service';\r\n\r\n// import * as io from 'socket.io-client';\r\nimport { ScriptService } from './services/script.service';\r\nimport { PlaybackService } from './services/playback.service';\r\nimport { PlaybackListService } from './services/playback-list.service';\r\nimport { PushService } from './services/push.service';\r\nimport { SocketIoService } from './services/socket.io.service';\r\nimport { jQueryFactory, JQ_TOKEN } from './services/jquery.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NgEventstoreListingComponent,\r\n    ItemTemplateHolderComponent,\r\n    TemplateDirective,\r\n\r\n  ],\r\n  imports: [CommonModule],\r\n  exports: [\r\n    NgEventstoreListingComponent\r\n  ],\r\n  providers: [\r\n    ScriptService,\r\n    PlaybackService,\r\n    PlaybackListService,\r\n    PushService,\r\n    SocketIoService,\r\n    { provide: JQ_TOKEN, useFactory: jQueryFactory }\r\n    // ,\r\n    // { provide: IO_TOKEN, useValue: io }\r\n  ]\r\n})\r\nexport class NgEventstoreListingModule {}\r\n",
    "import { Injectable } from '@angular/core';\r\nimport * as io from 'socket.io-client';\r\n\r\n@Injectable()\r\nexport class SocketIoService {\r\n  // sockets = {};\r\n  constructor() { }\r\n  getSocketInstance(socketUrl) {\r\n    return io.connect(`${socketUrl}/events`);\r\n  //   if (!this.sockets[socketUrl]) {\r\n  //     this.sockets[socketUrl] = io.connect(`${socketUrl}/events`);\r\n  //   }\r\n  //   return this.sockets[socketUrl];\r\n  }\r\n}\r\n",
    "import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  ViewChild,\r\n  ComponentFactoryResolver,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  ComponentRef,\r\n  SimpleChanges,\r\n  ChangeDetectionStrategy,\r\n  AfterViewInit,\r\n} from '@angular/core';\r\nimport { ItemTemplateComponent } from '../template-components/index';\r\nimport { TemplateDirective } from '../../directives/template.directive';\r\n\r\n@Component({\r\n  selector: 'lib-item-template-holder',\r\n  template: `<div class=\"row no-gutters\">\n  <div class=\"col-12\">\n    <ng-template libTemplateDirective></ng-template>\n  </div>\n</div>\n`,\r\n  styles: [``],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ItemTemplateHolderComponent\r\n  implements OnInit, OnChanges, AfterViewInit {\r\n  @Input() itemComponentClass: any;\r\n  @Input() data: any = {};\r\n  @Input() lookups: any = {};\r\n  @Output() updateEmitter: EventEmitter<any> = new EventEmitter();\r\n  @Output() getLookupsEmitter: EventEmitter<any> = new EventEmitter();\r\n  @Output() showModalEmitter: EventEmitter<any> = new EventEmitter();\r\n  @Output() deleteEmitter: EventEmitter<any> = new EventEmitter();\r\n\r\n  componentRef: ComponentRef<any>;\r\n  initialChanges: SimpleChanges;\r\n  @ViewChild(TemplateDirective) itemHost: TemplateDirective;\r\n\r\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {}\r\n\r\n  ngOnInit(): void {\r\n    // this.loadComponent();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.loadComponent();\r\n    if (this.initialChanges) {\r\n      this.ngOnChanges(this.initialChanges);\r\n      this.initialChanges = undefined;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const self = this;\r\n    if (self.componentRef) {\r\n      const changesKeys = Object.keys(changes);\r\n      changesKeys.forEach((key) => {\r\n        (self.componentRef.instance as ItemTemplateComponent)[key] =\r\n          changes[key].currentValue;\r\n      });\r\n      (self.componentRef.instance as ItemTemplateComponent).ngOnChanges(\r\n        changes\r\n      );\r\n    } else {\r\n      this.initialChanges = changes;\r\n    }\r\n  }\r\n\r\n  loadComponent(): void {\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\r\n      this.itemComponentClass\r\n    );\r\n    const viewContainerRef = this.itemHost.viewContainerRef;\r\n    viewContainerRef.clear();\r\n\r\n    this.componentRef = viewContainerRef.createComponent(componentFactory);\r\n    (this.componentRef.instance as ItemTemplateComponent).data = this.data;\r\n    (this.componentRef\r\n      .instance as ItemTemplateComponent).onUpdateEmitter = this.updateEmitter;\r\n    (this.componentRef\r\n      .instance as ItemTemplateComponent).onGetLookupsEmitter = this.getLookupsEmitter;\r\n    (this.componentRef\r\n      .instance as ItemTemplateComponent).onShowModalEmitter = this.showModalEmitter;\r\n    (this.componentRef\r\n      .instance as ItemTemplateComponent).onDeleteEmitter = this.deleteEmitter;\r\n    // (this.componentRef.instance as ItemTemplateComponent).idPropertyName = this.idPropertyName;\r\n    (this.componentRef\r\n      .instance as ItemTemplateComponent).lookups = this.lookups;\r\n    (this.componentRef.instance as ItemTemplateComponent).ngOnInit();\r\n  }\r\n}\r\n",
    "import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[libTemplateDirective]'\n})\nexport class TemplateDirective {\n  constructor(public viewContainerRef: ViewContainerRef) { }\n}\n",
    "import { Helpers } from './utils/helpers';\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  OnDestroy,\r\n  Inject\r\n} from '@angular/core';\r\n\r\nimport { switchMap, debounceTime } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { map as rxMap } from 'rxjs/operators/map';\r\nimport { JQ_TOKEN } from './services/jquery.service';\r\n\r\nimport {\r\n  SubscriptionConfiguration,\r\n  Script,\r\n  PlaybackList,\r\n  RowItem,\r\n  Filter,\r\n  Query,\r\n  Sort,\r\n  PlaybackListRequest,\r\n  CustomPlaybackConfiguration,\r\n  PlaybackListResponse\r\n} from './models';\r\n\r\n\r\nimport { ScriptService } from './services/script.service';\r\nimport { PlaybackService } from './services/playback.service';\r\nimport { PlaybackListService } from './services/playback-list.service';\r\n\r\nimport * as Immutable from 'immutable';\r\nimport _defaultsDeep from 'lodash-es/defaultsDeep';\r\nimport _isEmpty from 'lodash-es/isEmpty';\r\nimport _isEqual from 'lodash-es/isEqual';\r\nimport _cloneDeep from 'lodash-es/cloneDeep';\r\nimport _clone from 'lodash-es/clone';\r\nimport _uniq from 'lodash-es/uniq';\r\nimport _merge from 'lodash-es/defaults';\r\nimport * as moment_ from 'moment-mini-ts';\r\n\r\nimport saveAs from 'file-saver';\r\n\r\n@Component({\r\n  selector: 'lib-ng-eventstore-listing',\r\n  template: `<!-- <div *ngIf=\"listHeaderGroups && listHeaderGroups.groups && listHeaderGroups.groups.length > 0\"  [class]=\"'row ' + (listHeaderGroups && listHeaderGroups.generalRowClassName ? listHeaderGroups.generalRowClassName : '')\">\r\n  <div class=\"col-12\">\r\n    <div class=\"header bg-white p-2\">\r\n      <div [class]=\"'row ' + listHeaderGroups.generalRowClassName\">\r\n        <div *ngFor=\"let listHeaderGroup of listHeaderGroups.groups\" [class]=\"listHeaderGroup.className\">\r\n          <div [class]=\"'row ' + listHeaderGroups.generalRowClassName\">\r\n            <div *ngFor=\"let listHeader of listHeaderGroup.listHeaders\" [class]=\"listHeader.className\">\r\n              <span (click)=\"onSort(listHeader.sortProperty)\" [ngClass]=\"{ 'sort-header': listHeader.sortProperty }\">{{ listHeader.displayName }} <i *ngIf=\"sortFields[listHeader.sortProperty] && sortFields[listHeader.sortProperty].icon\" [class]=\"'sort-icon ' + sortFields[listHeader.sortProperty].icon\"></i></span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div> -->\r\n<!-- <div [class]=\"'row ' + (listHeaderGroups && listHeaderGroups.generalRowClassName) ? listHeaderGroups.generalRowClassName : ''\" *ngFor=\"let item of dataList; trackBy: trackByFn\"> -->\r\n<div class=\"row\" *ngFor=\"let item of _dataList; trackBy: trackByFn\">\r\n  <div class=\"col-12\">\r\n    <lib-item-template-holder\r\n      [data]=\"item\"\r\n      [itemComponentClass]=\"itemComponentClass\"\r\n      [lookups]=\"lookups\"\r\n      (updateEmitter)=\"_onUpdate($event)\"\r\n      (getLookupsEmitter)=\"_onGetLookups($event)\"\r\n      (showModalEmitter)=\"_onShowModal($event)\"\r\n      (deleteEmitter)=\"_onDelete($event)\">\r\n    </lib-item-template-holder>\r\n  </div>\r\n</div>\r\n<div class=\"row\" *ngIf=\"(!_dataCount || _dataCount === 0) && !_isLoading\">\r\n  <div class=\"col-12\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 no-results-container\">\r\n        <div class=\"text-center text-secondary\">\r\n          <span class=\"italic\">{{ emptyListDisplayText }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div [id]=\"'ng-eventstore-listing-overlay-' + _id\" class=\"ng-eventstore-listing-overlay\">\r\n  <div [id]=\"'ng-eventstore-listing-overlay-subject-' + _id\" class=\"ng-eventstore-listing-overlay-subject\" [ngStyle]=\"{ top:  loadingOffset }\">\r\n      <div class=\"ng-eventstore-listing-cssload-container\">\r\n        <div class=\"ng-eventstore-listing-cssload-speeding-wheel\"></div>\r\n      </div>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`.ng-eventstore-listing-overlay{position:absolute;width:100%;height:100%;top:0;left:0;right:0;bottom:0;background-color:#efefef;opacity:.7;z-index:10;display:none}.ng-eventstore-listing-overlay-subject{position:absolute;left:50%;font-size:50px;color:transparent;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);text-align:center}.ng-eventstore-listing-cssload-container{width:100%;height:49px;text-align:center}.ng-eventstore-listing-cssload-speeding-wheel{width:49px;height:49px;margin:0 auto;border:3px solid #3b356e;border-radius:50%;border-left-color:transparent;border-right-color:transparent;animation:475ms linear infinite cssload-spin;-o-animation:475ms linear infinite cssload-spin;-ms-animation:cssload-spin 475ms infinite linear;-webkit-animation:475ms linear infinite cssload-spin;-moz-animation:475ms linear infinite cssload-spin}@keyframes cssload-spin{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes cssload-spin{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}`],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class NgEventstoreListingComponent\r\n  implements OnInit, OnChanges, OnDestroy {\r\n  @Output() updateEmitter: EventEmitter<any> = new EventEmitter();\r\n  @Output() getLookupsEmitter: EventEmitter<any> = new EventEmitter();\r\n  @Output() showModalEmitter: EventEmitter<any> = new EventEmitter();\r\n  @Output() deleteEmitter: EventEmitter<any> = new EventEmitter();\r\n  @Output() playbackListLoadedEmitter: EventEmitter<any> = new EventEmitter();\r\n  @Output() newItemNotifyEmitter: EventEmitter<any> = new EventEmitter();\r\n  @Output() removedItemNotifyEmitter: EventEmitter<any> = new EventEmitter();\r\n  @Output() getPlaybackLIstErrorEmitter: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Input() itemComponentClass: any;\r\n  @Input() lookups = {};\r\n  @Input() socketUrl: string;\r\n  @Input() playbackListBaseUrl: string;\r\n  @Input() scriptStore: Script[];\r\n  @Input() itemSubscriptionConfigurations: SubscriptionConfiguration[] = [];\r\n  @Input() listSubscriptionConfiguration: SubscriptionConfiguration;\r\n  @Input() playbackListName: string;\r\n  @Input() filters: Filter[] = null;\r\n  @Input() sort: Sort[] = null;\r\n  @Input() pageIndex = 1;\r\n  @Input() itemsPerPage: number;\r\n  @Input() responseBasePath = 'data';\r\n  @Input() emptyListDisplayText = 'No Results';\r\n  @Input() csvFileName = '';\r\n  @Input() customPlaybackConfigurations: CustomPlaybackConfiguration[];\r\n  @Input() enableLoadingOverlay = true;\r\n  @Input() loadingTopBoundSelector: string;\r\n  @Input() minHeightCss = '500px';\r\n  @Input() loadingOffset = '200px';\r\n\r\n  @Input() debugging = false;\r\n\r\n  _dataList: Immutable.List<RowItem>;\r\n  _dataCount: number;\r\n  _dataTotalCount: number;\r\n  _initialized = false;\r\n  _isLoading = false;\r\n  _getPlaybackListSubscription: Subscription;\r\n  _getPlaybackListSubject: Subject<PlaybackListRequest> = new Subject();\r\n  _exportPlaybackListSubscription: Subscription;\r\n  _exportPlaybackListSubject: Subject<any> = new Subject();\r\n  _playbackSubscriptionTokens: string[] = [];\r\n  _playbackList: PlaybackList = {\r\n    get: (rowId: string, callback: (err, item) => void) => {\r\n      const rowIndex = this._dataList.findIndex((value: any) => {\r\n        return value.get('rowId') === rowId;\r\n      });\r\n\r\n      if (rowIndex > -1) {\r\n        const data = this._dataList.get(rowIndex);\r\n        if (data) {\r\n          callback(null, (data as any).toJS());\r\n        } else {\r\n          callback(null, {});\r\n        }\r\n      } else {\r\n        callback(new Error(`Row with rowId: ${rowIndex} does not exist`), null);\r\n      }\r\n    },\r\n    add: (\r\n      rowId: string,\r\n      revision: number,\r\n      data: any,\r\n      meta: any,\r\n      callback: (err?: any) => void\r\n    ) => {\r\n      // const newEntry = {\r\n      //   rowId: rowId,\r\n      //   revision: revision,\r\n      //   data: data,\r\n      //   meta: meta,\r\n      // };\r\n      // this.dataList = this.dataList.push(Immutable.fromJS(newEntry));\r\n      // this.changeDetectorRef.detectChanges();\r\n      // Do refresh trigger\r\n      const newItem = {\r\n        rowId,\r\n        revision,\r\n        data,\r\n        meta\r\n      };\r\n      this.newItemNotifyEmitter.emit(newItem);\r\n      callback();\r\n    },\r\n    update: (\r\n      rowId: string,\r\n      revision: number,\r\n      oldData: any,\r\n      newData: any,\r\n      meta: any,\r\n      callback: (err?) => void\r\n    ) => {\r\n      const rowIndex = this._dataList.findIndex((value: any) => {\r\n        return value.get('rowId') === rowId;\r\n      });\r\n\r\n      // oldData is Immutable\r\n      const newEntry = Immutable.fromJS({\r\n        rowId: rowId,\r\n        revision: revision,\r\n        data: {\r\n          ...oldData,\r\n          ...newData,\r\n        },\r\n        meta: meta,\r\n      });\r\n\r\n      if (this.debugging) {\r\n        console.log(newEntry);\r\n      }\r\n\r\n      if (rowIndex > -1) {\r\n        if (this.debugging) {\r\n          console.log(rowIndex);\r\n          console.log(newEntry);\r\n\r\n          console.log(this._dataList.toJS());\r\n        }\r\n        this._dataList = this._dataList.set(rowIndex, newEntry);\r\n\r\n        if (this.debugging) {\r\n          console.log(this._dataList.toJS());\r\n        }\r\n        this.changeDetectorRef.detectChanges();\r\n        callback();\r\n      } else {\r\n        callback(new Error(`Row with rowId: ${rowIndex} does not exist`));\r\n      }\r\n    },\r\n    delete: (rowId: string, callback: (error?: any) => void) => {\r\n      const rowIndex = this._dataList.findIndex((value: any) => {\r\n        return value.get('rowId') === rowId;\r\n      });\r\n\r\n      if (rowIndex > -1) {\r\n        // this._dataList = this._dataList.remove(rowIndex);\r\n        this.removedItemNotifyEmitter.emit(rowId);\r\n        callback(null);\r\n      } else {\r\n        callback(new Error(`Row with rowId: ${rowIndex} does not exist`));\r\n      }\r\n    },\r\n  };\r\n\r\n  _id: string = Helpers.generateToken();\r\n\r\n  _stateFunctions = {\r\n    getState: (id: string) => {\r\n      const index = this._dataList.findIndex((row: any) => {\r\n        return row.get('rowId') === id;\r\n      });\r\n      if (index > 0) {\r\n        return (this._dataList.get(index) as any).toJS();\r\n      }\r\n\r\n      return {};\r\n    },\r\n    setState: (id: string, data: any) => {\r\n      const index = this._dataList.findIndex((row: any) => {\r\n        return row.get('rowId') === id;\r\n      });\r\n      this._dataList = this._dataList.set(index, Immutable.fromJS(data));\r\n      this.changeDetectorRef.markForCheck();\r\n    },\r\n  };\r\n\r\n  constructor(\r\n    @Inject(JQ_TOKEN) public $: any,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private scriptService: ScriptService,\r\n    private playbackService: PlaybackService,\r\n    private playbackListService: PlaybackListService\r\n  ) {}\r\n\r\n  async ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const self = this;\r\n\r\n    if (!self._initialized) {\r\n      this._initialized = true;\r\n      this._loadScripts().then(() => {\r\n        this._initializeRequests();\r\n        this.playbackService.init(this.socketUrl);\r\n        const changesKeys = Object.keys(changes);\r\n        changesKeys.forEach((key) => {\r\n          self[key] = changes[key].currentValue;\r\n          switch (key) {\r\n            case 'pageIndex':\r\n            case 'filters':\r\n            case 'sort': {\r\n              this.requestPlaybackList();\r\n              break;\r\n            }\r\n          }\r\n        });\r\n\r\n      });\r\n    } else {\r\n      const changesKeys = Object.keys(changes);\r\n      changesKeys.forEach((key) => {\r\n        self[key] = changes[key].currentValue;\r\n        switch (key) {\r\n          case 'pageIndex':\r\n          case 'filters':\r\n          case 'sort':\r\n          case 'playbackListName': {\r\n            this.requestPlaybackList();\r\n            break;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    this._resetSubscriptions();\r\n    this.playbackService.resetCustomPlaybacks();\r\n    this._initialized = false;\r\n  }\r\n\r\n  trackByFn(index: number, item: any) {\r\n    return item.get('rowId');\r\n  }\r\n\r\n  private _initializeRequests(): void {\r\n    const self = this;\r\n    self._getPlaybackListSubscription = self._getPlaybackListSubject\r\n      .pipe(\r\n        debounceTime(100),\r\n        switchMap((params) => {\r\n          return self.playbackListService.getPlaybackList(\r\n            self.playbackListBaseUrl,\r\n            params.playbackListName,\r\n            params.startIndex,\r\n            params.limit,\r\n            params.filters,\r\n            params.sort\r\n          );\r\n        })\r\n      )\r\n      .subscribe((res: any) => {\r\n        self._dataList = Immutable.fromJS(res.rows);\r\n        self._dataCount = res.rows.length;\r\n        self._dataTotalCount = res.count;\r\n\r\n        self._resetSubscriptions();\r\n        self._initSubscriptions();\r\n        self._initCustomPlaybackConfigurations();\r\n\r\n        self.changeDetectorRef.detectChanges();\r\n\r\n        self.playbackListLoadedEmitter.emit({\r\n          totalItems: self._dataTotalCount,\r\n          dataCount: self._dataCount,\r\n        });\r\n\r\n        if (self.enableLoadingOverlay) {\r\n          self.hideLoadingOverlay();\r\n        }\r\n        self._isLoading = false;\r\n      }, (error: any) => {\r\n        self.getPlaybackLIstErrorEmitter.emit(error);\r\n        if (self.enableLoadingOverlay) {\r\n          self.hideLoadingOverlay();\r\n        }\r\n        self._isLoading = false;\r\n      });\r\n\r\n    self._exportPlaybackListSubscription = self._exportPlaybackListSubject\r\n    .pipe(\r\n      debounceTime(100),\r\n      switchMap((params) => {\r\n        const playbackListRequest = params.playbackListRequest;\r\n        return self.playbackListService.getPlaybackListCsv(\r\n          self.playbackListBaseUrl,\r\n          playbackListRequest.playbackListName,\r\n          playbackListRequest.startIndex,\r\n          playbackListRequest.limit,\r\n          playbackListRequest.filters,\r\n          playbackListRequest.sort,\r\n          playbackListRequest.type\r\n        ).pipe(\r\n          rxMap((response: PlaybackListResponse) => {\r\n            return [response, params.fileNameOverride];\r\n          })\r\n        );\r\n      })\r\n    )\r\n    .subscribe(([result, fileNameOverride]) => {\r\n      const csv = new Blob([result], { type: 'text/csv' });\r\n      const moment = moment_;\r\n      const now = moment();\r\n      const fileName = `${fileNameOverride || this.csvFileName || this.playbackListName}-${now.format('YYYY-MM-DD_HHmmss')}.csv`;\r\n      saveAs(csv, fileName);\r\n    });\r\n  }\r\n\r\n  _getPlaybackList(\r\n    playbackListName: string,\r\n    startIndex: number,\r\n    limit: number,\r\n    filters?: Filter[],\r\n    sort?: Sort[]\r\n  ) {\r\n    const playbackListRequestParams: PlaybackListRequest = {\r\n      playbackListName: playbackListName,\r\n      startIndex: startIndex,\r\n      limit: limit,\r\n      filters: filters,\r\n      sort: sort,\r\n    };\r\n    this._isLoading = true;\r\n    if (this.enableLoadingOverlay) {\r\n      this.showLoadingOverlay();\r\n    }\r\n    this._getPlaybackListSubject.next(playbackListRequestParams);\r\n  }\r\n\r\n  requestPlaybackList() {\r\n    const startIndex = this.itemsPerPage * (this.pageIndex - 1);\r\n    this._getPlaybackList(\r\n      this.playbackListName,\r\n      startIndex,\r\n      this.itemsPerPage,\r\n      this.filters,\r\n      this.sort\r\n    );\r\n  }\r\n\r\n  private async _loadScripts() {\r\n    if (this.scriptStore) {\r\n      await this.scriptService.init(this.scriptStore);\r\n    }\r\n  }\r\n\r\n  private async _initSubscriptions() {\r\n    const self = this;\r\n    // Per row subscriptions\r\n    (self.itemSubscriptionConfigurations || []).forEach((itemSubscriptionConfiguration: SubscriptionConfiguration) => {\r\n      if (itemSubscriptionConfiguration) {\r\n        self._dataList.forEach(async (row: any) => {\r\n          const streamRevisionFunction = itemSubscriptionConfiguration.streamRevisionFunction ?\r\n            itemSubscriptionConfiguration.streamRevisionFunction : () => +row.get('revision') + 1;\r\n\r\n\r\n          const aggregateId = itemSubscriptionConfiguration.rowIdFunction ?\r\n              itemSubscriptionConfiguration.rowIdFunction(row.toJS()) : row.get('rowId');\r\n\r\n          const query: Query = _clone(itemSubscriptionConfiguration.query);\r\n          query.aggregateId = query.aggregateId.replace(\r\n            /{{rowId}}/g,\r\n            aggregateId\r\n          );\r\n\r\n          const playbackSubscriptionToken = await self.playbackService.registerForPlayback(\r\n            self,\r\n            itemSubscriptionConfiguration.playbackScriptName,\r\n            query,\r\n            self._stateFunctions,\r\n            self._playbackList,\r\n            streamRevisionFunction,\r\n            row.get('rowId'),\r\n            itemSubscriptionConfiguration.condition,\r\n            itemSubscriptionConfiguration.rowIdFunction\r\n          );\r\n          this._playbackSubscriptionTokens.push(playbackSubscriptionToken);\r\n        });\r\n      }\r\n    });\r\n\r\n    if (self.listSubscriptionConfiguration) {\r\n      // List subscription\r\n      this._playbackSubscriptionTokens.push(\r\n        await self.playbackService.registerForPlayback(\r\n          self,\r\n          self.listSubscriptionConfiguration.playbackScriptName,\r\n          self.listSubscriptionConfiguration.query,\r\n          self._stateFunctions,\r\n          self._playbackList,\r\n          () => 0\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  private _initCustomPlaybackConfigurations() {\r\n    if (!_isEmpty(this.customPlaybackConfigurations)) {\r\n      this.playbackService.registerCustomPlaybacks(this.customPlaybackConfigurations);\r\n    }\r\n  }\r\n\r\n  _resetSubscriptions() {\r\n    this.playbackService.unregisterForPlayback(this._playbackSubscriptionTokens);\r\n    this._playbackSubscriptionTokens = [];\r\n  }\r\n\r\n  _onUpdate(payload: any) {\r\n    this.updateEmitter.emit(payload);\r\n  }\r\n\r\n  _onGetLookups(payload: any) {\r\n    this.getLookupsEmitter.emit(payload);\r\n  }\r\n\r\n  _onShowModal(payload: any) {\r\n    this.showModalEmitter.emit(payload);\r\n  }\r\n\r\n  _onDelete(payload: any) {\r\n    this.deleteEmitter.emit(payload);\r\n  }\r\n\r\n  exportCSV(overrideParams?: PlaybackListRequest, fileNameOverride?: string) {\r\n    if (overrideParams) {\r\n      this._exportPlaybackListSubject.next({ playbackListRequest: overrideParams, fileNameOverride: fileNameOverride });\r\n    } else {\r\n      const startIndex = this.itemsPerPage * (this.pageIndex - 1);\r\n      const exportPlaybackListRequestParams: PlaybackListRequest = {\r\n        playbackListName: this.playbackListName,\r\n        startIndex: startIndex,\r\n        limit: 1000000,\r\n        filters: this.filters,\r\n        sort: this.sort\r\n      };\r\n\r\n      this._exportPlaybackListSubject.next({ playbackListRequest: exportPlaybackListRequestParams, fileNameOverride: fileNameOverride });\r\n    }\r\n  }\r\n\r\n  // Loading Overlay Functions\r\n  hideLoadingOverlay() {\r\n    const $ = this.$;\r\n    $('body').css('overflow', '');\r\n    $('body').removeClass('loading-body');\r\n    $(`#ng-eventstore-listing-overlay-${this._id}`).hide();\r\n  }\r\n\r\n  showLoadingOverlay() {\r\n    const $ = this.$;\r\n    $(`#ng-eventstore-listing-overlay-${this._id}`).show();\r\n    if (this.loadingTopBoundSelector ? true : false) {\r\n      this._fixLoadingOverlayPosition();\r\n    }\r\n  }\r\n\r\n  _fixLoadingOverlayPosition() {\r\n    const $ = this.$;\r\n    const windowY = window.pageYOffset;\r\n    const pageHeaderSectionHeight = 53;\r\n    const pageHeaderSectionBottomY = $(this.loadingTopBoundSelector).offset().top + pageHeaderSectionHeight;\r\n    $('body').css('overflow', 'hidden');\r\n    $('body').addClass('loading-body');\r\n    if (windowY < pageHeaderSectionBottomY) {\r\n      $(`#ng-eventstore-listing-overlay-${this._id}`).css('position', 'absolute');\r\n      $(`#ng-eventstore-listing-overlay-${this._id}`).css('height', `${window.innerHeight}px`);\r\n      $(`#ng-eventstore-listing-overlay-${this._id}`).css('width', '100%');\r\n      const pageHeaderHeight = pageHeaderSectionHeight;\r\n      $(`#ng-eventstore-listing-overlay-${this._id}`).css('margin-top', `${pageHeaderHeight}px`);\r\n    } else {\r\n      $(`#ng-eventstore-listing-overlay-${this._id}`).css('position', 'fixed');\r\n      $(`#ng-eventstore-listing-overlay-${this._id}`).css('height', '100%');\r\n      $(`#ng-eventstore-listing-overlay-${this._id}`).css('margin-top', '0px');\r\n    }\r\n  }\r\n}\r\n",
    "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Filter, Sort, PlaybackListResponse } from '../models';\r\n\r\n@Injectable()\r\nexport class PlaybackListService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getPlaybackList(\r\n    playbackListBaseUrl: string,\r\n    playbackListName: string,\r\n    startIndex: number,\r\n    limit: number,\r\n    filters?: Filter[],\r\n    sort?: Sort[]\r\n  ): Observable<PlaybackListResponse> {\r\n    let url = `${playbackListBaseUrl}/playback-list/${playbackListName}?startIndex=${startIndex}&limit=${limit}`;\r\n\r\n    if (filters) {\r\n      url += `&filters=${encodeURIComponent(JSON.stringify(filters))}`;\r\n    }\r\n\r\n    if (sort) {\r\n      url += `&sort=${JSON.stringify(sort)}`;\r\n    }\r\n\r\n    return this.http.get<PlaybackListResponse>(url);\r\n  }\r\n\r\n  getPlaybackListCsv(\r\n    playbackListBaseUrl: string,\r\n    playbackListName: string,\r\n    startIndex: number,\r\n    limit: number,\r\n    filters?: Filter[],\r\n    sort?: Sort[],\r\n    type?: string\r\n  ): Observable<any> {\r\n    let url = `${playbackListBaseUrl}/playback-list/${playbackListName}/export?startIndex=${startIndex}&limit=${limit}`;\r\n\r\n    if (filters) {\r\n      url += `&filters=${JSON.stringify(filters)}`;\r\n    }\r\n\r\n    if (sort) {\r\n      url += `&sort=${JSON.stringify(sort)}`;\r\n    }\r\n\r\n    if (type) {\r\n      url += `&type=${type}`;\r\n    }\r\n    return this.http.get<PlaybackListResponse>(url, <any>{ responseType: 'text/csv'});\r\n  }\r\n}\r\n",
    "import _clone from 'lodash-es/clone';\r\nimport { Helpers } from './../utils/helpers';\r\nimport { Injectable } from '@angular/core';\r\nimport { PushService } from './push.service';\r\nimport {\r\n  StateFunctions,\r\n  PlaybackList,\r\n  PlaybackRegistry,\r\n  Query,\r\n  ConditionalSubscriptionRegistry,\r\n  CustomPlaybackConfiguration\r\n} from '../models';\r\nimport { CustomPlaybackRegistry } from '../models/custom-playback-registry';\r\n\r\n@Injectable()\r\nexport class PlaybackService {\r\n  _playbackRegistry: PlaybackRegistry = {};\r\n  _conditionalSubscriptionRegistry: ConditionalSubscriptionRegistry = {};\r\n  _customPlaybackRegistry: CustomPlaybackRegistry = {};\r\n\r\n  constructor(\r\n    private pushService: PushService\r\n  ) {}\r\n\r\n  init(socketUrl: string) {\r\n    this.pushService.init(socketUrl);\r\n  }\r\n\r\n  async unregisterForPlayback(playbackTokens: string[]) {\r\n    // unregister from playback registry\r\n    const pushTokens = playbackTokens.map((playbackToken) => {\r\n      return this._playbackRegistry[playbackToken].pushSubscriptionId;\r\n    });\r\n\r\n    playbackTokens.forEach(async (token) => {\r\n      const rowId = this._playbackRegistry[token].rowId;\r\n\r\n      // console.log('BEFORE');\r\n      // console.log(this._conditionalSubscriptionRegistry);\r\n\r\n      if (rowId) {\r\n        delete this._conditionalSubscriptionRegistry[rowId];\r\n      }\r\n\r\n      // console.log('AFTER');\r\n      // console.log(this._conditionalSubscriptionRegistry);\r\n\r\n      // unsubscribe from push\r\n      delete this._playbackRegistry[token];\r\n    });\r\n\r\n    await this.pushService.unsubscribe(pushTokens);\r\n  }\r\n\r\n  async registerForPlayback(\r\n    owner: object,\r\n    scriptName: string,\r\n    query: Query,\r\n    stateFunctions: StateFunctions,\r\n    playbackList: PlaybackList,\r\n    streamRevisionFunction: (item: any) => number = (item) => 0,\r\n    rowId?: string,\r\n    conditionFunction?: (item: any) => boolean,\r\n    rowIdFunction?: (item: any) => string\r\n  ) {\r\n    const playbackSubscriptionId = Helpers.generateToken();\r\n\r\n    let rowData;\r\n    if (rowId) {\r\n      const aggregateId = rowId ? rowId : query.aggregateId;\r\n      rowData = await new Promise((resolve, reject) => {\r\n        playbackList.get(aggregateId, (error, item) => {\r\n          if (error) {\r\n            reject(error);\r\n          }\r\n          resolve(item);\r\n        });\r\n      });\r\n    }\r\n\r\n    let streamRevision;\r\n    let isConditionTrue;\r\n\r\n    if (rowData) {\r\n      streamRevision = streamRevisionFunction(rowData);\r\n      isConditionTrue = conditionFunction ? (conditionFunction(rowData) ? true : false) : undefined;\r\n    }\r\n\r\n    let pushSubscriptionId;\r\n    if (isConditionTrue === true || conditionFunction === undefined) {\r\n      pushSubscriptionId = await this.pushService.subscribe(\r\n        query,\r\n        streamRevision,\r\n        this,\r\n        async (err, eventObj, owner2) => {\r\n          // owner is playbackservice\r\n          const self = owner2 as PlaybackService;\r\n\r\n          // console.log(self._playbackRegistry);\r\n\r\n          const registration = self._playbackRegistry[playbackSubscriptionId];\r\n\r\n          if (registration) {\r\n            if (eventObj.aggregate === 'states') {\r\n              const thisScriptName = registration.scriptName;\r\n              const fromEvent = eventObj.payload._meta.fromEvent;\r\n              const eventName = fromEvent.payload.name;\r\n              const thisPlaybackScript = window[thisScriptName];\r\n              const playbackFunction = thisPlaybackScript.playbackInterface[eventName];\r\n\r\n              if (playbackFunction) {\r\n                if (registration.rowId) {\r\n                  eventObj.aggregateId = registration.rowId;\r\n                }\r\n                const state = eventObj.payload;\r\n                const funcs = {\r\n                  emit: (targetQuery, payload, done) => {\r\n                    done();\r\n                  },\r\n                  getPlaybackList: (\r\n                    playbackListName: string,\r\n                    callback: (err, playbackList: PlaybackList) => void\r\n                  ) => {\r\n                    if (registration.playbackList) {\r\n                      callback(null, registration.playbackList);\r\n                    } else {\r\n                      callback(\r\n                        new Error(\r\n                          'PlaybackList does not exist in this registration'\r\n                        ),\r\n                        null\r\n                      );\r\n                    }\r\n                  },\r\n                };\r\n\r\n                const doneCallback = () => {\r\n                  registration.playbackList.get(eventObj.aggregateId, (error, item) => {\r\n                    self._updateConditionalSubscriptions(eventObj.aggregateId, item);\r\n                  });\r\n                };\r\n\r\n                playbackFunction(state, fromEvent, funcs, doneCallback);\r\n\r\n                // Run custom playbackEvents if they exist\r\n                if (this._customPlaybackRegistry[eventName]) {\r\n                  this._customPlaybackRegistry[eventName].forEach((customPlaybackConfiguration: CustomPlaybackConfiguration) => {\r\n                    customPlaybackConfiguration.playbackFunction(fromEvent);\r\n                  });\r\n                }\r\n              }\r\n            } else {\r\n              const thisScriptName = registration.scriptName;\r\n              const thisPlaybackScript = window[thisScriptName];\r\n              const playbackFunction = thisPlaybackScript.playbackInterface[eventObj.payload.name];\r\n\r\n              if (playbackFunction) {\r\n                // Override aggregateId to handle other subscriptions\r\n                if (registration.rowId) {\r\n                  eventObj.aggregateId = registration.rowId;\r\n                }\r\n                const row = stateFunctions.getState(eventObj.aggregateId);\r\n                const state = row.data;\r\n                const funcs = {\r\n                  emit: (targetQuery, payload, done) => {\r\n                    done();\r\n                  },\r\n                  getPlaybackList: (\r\n                    playbackListName: string,\r\n                    callback: (err, playbackList: PlaybackList) => void\r\n                  ) => {\r\n                    if (registration.playbackList) {\r\n                      callback(null, registration.playbackList);\r\n                    } else {\r\n                      callback(\r\n                        new Error(\r\n                          'PlaybackList does not exist in this registration'\r\n                        ),\r\n                        null\r\n                      );\r\n                    }\r\n                  },\r\n                };\r\n\r\n                const doneCallback = () => {\r\n                  registration.playbackList.get(eventObj.aggregateId, (error, item) => {\r\n                    self._updateConditionalSubscriptions(eventObj.aggregateId, item);\r\n                  });\r\n                };\r\n\r\n                playbackFunction(state, eventObj, funcs, doneCallback);\r\n                // Run custom playbackEvents if they exist\r\n                if (this._customPlaybackRegistry[eventObj.payload.name]) {\r\n                  this._customPlaybackRegistry[eventObj.payload.name].forEach(\r\n                    (customPlaybackConfiguration: CustomPlaybackConfiguration) => {\r\n                      customPlaybackConfiguration.playbackFunction(eventObj);\r\n                    });\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      );\r\n    }\r\n\r\n    // If condition exists, register in conditional registry\r\n    if (conditionFunction) {\r\n      if (this._conditionalSubscriptionRegistry[rowId] && Array.isArray(this._conditionalSubscriptionRegistry[rowId])) {\r\n        this._conditionalSubscriptionRegistry[rowId].push({\r\n          playbackList: playbackList,\r\n          scriptName: scriptName,\r\n          owner: owner,\r\n          stateFunctions: stateFunctions,\r\n          query: query,\r\n          streamRevisionFunction: streamRevisionFunction,\r\n          conditionFunction: conditionFunction,\r\n          pushSubscriptionId: pushSubscriptionId,\r\n          playbackSubscriptionId: playbackSubscriptionId,\r\n          rowIdFunction: rowIdFunction\r\n        });\r\n      } else {\r\n        this._conditionalSubscriptionRegistry[rowId] = [{\r\n          playbackList: playbackList,\r\n          scriptName: scriptName,\r\n          owner: owner,\r\n          stateFunctions: stateFunctions,\r\n          query: query,\r\n          streamRevisionFunction: streamRevisionFunction,\r\n          conditionFunction: conditionFunction,\r\n          pushSubscriptionId: pushSubscriptionId,\r\n          playbackSubscriptionId: playbackSubscriptionId,\r\n          rowIdFunction: rowIdFunction\r\n        }];\r\n      }\r\n    }\r\n\r\n    this._playbackRegistry[playbackSubscriptionId] = {\r\n      owner: owner,\r\n      pushSubscriptionId: pushSubscriptionId,\r\n      playbackList: playbackList,\r\n      scriptName: scriptName,\r\n      rowId: rowId\r\n    };\r\n\r\n    return playbackSubscriptionId;\r\n  }\r\n\r\n  registerCustomPlaybacks(customPlaybackConfigurations: CustomPlaybackConfiguration[]) {\r\n    customPlaybackConfigurations.forEach((customPlaybackConfiguration: CustomPlaybackConfiguration) => {\r\n      if (!this._customPlaybackRegistry[customPlaybackConfiguration.eventName]) {\r\n        this._customPlaybackRegistry[customPlaybackConfiguration.eventName] = [];\r\n      }\r\n      this._customPlaybackRegistry[customPlaybackConfiguration.eventName].push(customPlaybackConfiguration);\r\n    });\r\n  }\r\n\r\n  resetCustomPlaybacks() {\r\n    this._customPlaybackRegistry = {};\r\n  }\r\n\r\n  _updateConditionalSubscriptions(rowId, rowData) {\r\n    const conditionalSubscriptions = this._conditionalSubscriptionRegistry[rowId] || [];\r\n    conditionalSubscriptions.forEach(async (conditionalSubscription) => {\r\n      if (!conditionalSubscription.pushSubscriptionId && conditionalSubscription.conditionFunction(rowData)) {\r\n        const offset = conditionalSubscription.streamRevisionFunction(rowData);\r\n\r\n        const subQuery = _clone(conditionalSubscription.query);\r\n\r\n        if (conditionalSubscription.rowIdFunction) {\r\n          subQuery.aggregateId = conditionalSubscription.rowIdFunction(rowData);\r\n        }\r\n\r\n        const pushSubscriptionId = this.pushService.subscribe(\r\n          subQuery,\r\n          offset,\r\n          this,\r\n          async (err, eventObj, owner2) => {\r\n            // owner is playbackservice\r\n            const self = owner2 as PlaybackService;\r\n            const registration = self._playbackRegistry[conditionalSubscription.playbackSubscriptionId];\r\n\r\n            if (eventObj.aggregate === 'states') {\r\n              const thisScriptName = registration.scriptName;\r\n              const fromEvent = eventObj.payload._meta.fromEvent;\r\n              const eventName = fromEvent.payload.name;\r\n              const thisPlaybackScript = window[thisScriptName];\r\n              const playbackFunction = thisPlaybackScript.playbackInterface[eventName];\r\n\r\n              if (playbackFunction) {\r\n                const state = eventObj.payload;\r\n                const funcs = {\r\n                  emit: (targetQuery, payload, done) => {\r\n                    done();\r\n                  },\r\n                  getPlaybackList: (\r\n                    playbackListName: string,\r\n                    callback: (err, playbackList: PlaybackList) => void\r\n                  ) => {\r\n                    if (registration.playbackList) {\r\n                      callback(null, registration.playbackList);\r\n                    } else {\r\n                      callback(\r\n                        new Error(\r\n                          'PlaybackList does not exist in this registration'\r\n                        ),\r\n                        null\r\n                      );\r\n                    }\r\n                  },\r\n                };\r\n\r\n                const doneCallback = () => {\r\n                };\r\n                playbackFunction(state, fromEvent, funcs, doneCallback);\r\n              }\r\n            } else {\r\n\r\n              const thisScriptName = registration.scriptName;\r\n              const thisPlaybackScript = window[thisScriptName];\r\n              const playbackFunction = thisPlaybackScript.playbackInterface[eventObj.payload.name];\r\n\r\n              if (playbackFunction) {\r\n                // Override aggregateId to handle other subscriptions\r\n                if (registration.rowId) {\r\n                  eventObj.aggregateId = registration.rowId;\r\n                }\r\n                const row = conditionalSubscription.stateFunctions.getState(eventObj.aggregateId);\r\n                const state = row.data;\r\n                const funcs = {\r\n                  emit: (targetQuery, payload, done) => {\r\n                    done();\r\n                  },\r\n                  getPlaybackList: (\r\n                    playbackListName: string,\r\n                    callback: (err, playbackList: PlaybackList) => void\r\n                  ) => {\r\n                    if (registration.playbackList) {\r\n                      callback(null, registration.playbackList);\r\n                    } else {\r\n                      callback(\r\n                        new Error(\r\n                          'PlaybackList does not exist in this registration'\r\n                        ),\r\n                        null\r\n                      );\r\n                    }\r\n                  },\r\n                };\r\n\r\n                const doneCallback = () => {\r\n                  // stateFunctions.setState(row.rowId, row);\r\n                };\r\n\r\n                playbackFunction(state, eventObj, funcs, doneCallback);\r\n              }\r\n            }\r\n          }\r\n        );\r\n\r\n        // just use the subscriptionId to map the push subscription to the playback\r\n        this._playbackRegistry[conditionalSubscription.playbackSubscriptionId] = {\r\n          owner: conditionalSubscription.owner,\r\n          pushSubscriptionId: pushSubscriptionId,\r\n          playbackList: conditionalSubscription.playbackList,\r\n          scriptName: conditionalSubscription.scriptName,\r\n          rowId: rowId\r\n        };\r\n\r\n        conditionalSubscription.pushSubscriptionId = pushSubscriptionId;\r\n\r\n        // console.log('subscribed to playback: ', pushSubscriptionId, conditionalSubscription.query);\r\n        return pushSubscriptionId;\r\n      } else if (!conditionalSubscription.conditionFunction(rowData) && conditionalSubscription.pushSubscriptionId) {\r\n        this.pushService.unsubscribe([conditionalSubscription.pushSubscriptionId]).then(() => {\r\n          delete this._playbackRegistry[conditionalSubscription.playbackSubscriptionId];\r\n          conditionalSubscription.pushSubscriptionId = undefined;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n",
    "import { Injectable } from '@angular/core';\r\nimport { Helpers } from '../utils/helpers.js';\r\nimport _forOwn from 'lodash-es/forOwn';\r\nimport _clone from 'lodash-es/clone';\r\nimport * as io from 'socket.io-client';\r\n\r\n@Injectable()\r\nexport class PushService {\r\n  private ioPush: any;\r\n  private subscriptions: any = {};\r\n  constructor() { }\r\n\r\n  init(socketUrl: string) {\r\n    if (!this.ioPush) {\r\n      this.ioPush = io.connect(`${socketUrl}/events`);\r\n\r\n      this.ioPush.on('message', (eventObj) => {\r\n        this._processEvent(eventObj);\r\n      });\r\n\r\n      this.ioPush.on('reconnect', () => {\r\n        // console.log('TEST RECONNECTION');\r\n        // this.ioPush.emit('resubscribe', () => {\r\n          // console.log(this.subscriptions);\r\n          _forOwn(this.subscriptions, (sub) => {\r\n            const subscriptionQuery = Object.assign(sub.query, {\r\n              offset: sub.offset,\r\n            });\r\n\r\n            this.ioPush.emit('subscribe', subscriptionQuery, (token: string) => {\r\n              if (token) {\r\n                // console.log('Reconnected:', token, subscriptionQuery);\r\n                sub.token = token;\r\n              } else {\r\n                console.error('Reconnect error for query', subscriptionQuery);\r\n              }\r\n            });\r\n          });\r\n        // });\r\n      });\r\n    }\r\n  }\r\n\r\n  _processEvent(eventObj: any) {\r\n    const self = this;\r\n    // console.log('got message from push server: ', eventObj);\r\n    const queryKey = `${eventObj.context}.${eventObj.aggregate}.${eventObj.aggregateId}`;\r\n    const clientTokens = Object.keys(self.subscriptions);\r\n    // redirect to mapped subscription/token callback\r\n    clientTokens.forEach((clientToken) => {\r\n      const sub = self.subscriptions[clientToken];\r\n      if (sub) {\r\n        const subQueryKey = `${sub.query.context}.${sub.query.aggregate}.${sub.query.aggregateId}`;\r\n        if (subQueryKey === queryKey) {\r\n          // update next offset (from stream revision) for this subscription, so for reconnecting\r\n          if (!isNaN(eventObj.streamRevision)) {\r\n            sub.offset = eventObj.streamRevision + 1;\r\n          }\r\n          if (typeof sub.cb === 'function') {\r\n            sub.cb(undefined, eventObj, sub.owner, clientToken);\r\n          }\r\n\r\n          // iterate on monitors meta tags\r\n          const tags = Object.keys(sub.monitorTags);\r\n          tags.forEach((tag) => {\r\n            // check for state/eventSource._meta or event._meta\r\n            if (eventObj._meta && eventObj._meta.tag === tag) {\r\n              let reason = 'N/A';\r\n              if (typeof eventObj.eventType === 'string') {\r\n                reason = eventObj.eventType;\r\n              } else if (typeof eventObj.stateType === 'string') {\r\n                reason = eventObj.stateType;\r\n                if (\r\n                  eventObj.eventSource &&\r\n                  typeof eventObj.eventSource.eventType === 'string'\r\n                ) {\r\n                  reason += ` <- ${eventObj.eventSource.eventType}`;\r\n                }\r\n              }\r\n              // iterate on the monitors\r\n              const monitors = sub.monitorTags[tag];\r\n              monitors.forEach((monitor) => {\r\n                monitor.callback(reason, eventObj._meta);\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  subscribe(query, offset, owner, cb) {\r\n    // await this.waitForSocketConnection();\r\n    const pushToken = Helpers.generateToken();\r\n    // map new subscription, then try to subscribe to server asap\r\n    this.subscriptions[pushToken] = {\r\n      query: query,\r\n      offset: offset,\r\n      owner: owner,\r\n      cb: cb,\r\n      monitorTags: {},\r\n    };\r\n\r\n    const sub = this.subscriptions[pushToken];\r\n    if (sub && !sub.token) {\r\n      // build up proper subscribe request query\r\n      const subscriptionQuery = Object.assign(sub.query, {\r\n        offset: sub.offset,\r\n      });\r\n\r\n      this.ioPush.emit('subscribe', subscriptionQuery, ({ subscriptionToken, catchUpEvents }) => {\r\n        if (subscriptionToken) {\r\n          // console.log('Server Subscribed:', token, subscriptionQuery);\r\n          sub.token = subscriptionToken;\r\n        } else {\r\n          console.error('Subscribe error for query', subscriptionQuery);\r\n        }\r\n\r\n        if (catchUpEvents && catchUpEvents.length > 0) {\r\n          catchUpEvents.forEach((event) => {\r\n            cb(undefined, event, owner, pushToken);\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    return pushToken;\r\n  }\r\n\r\n  unsubscribe(pushTokens: string[]): Promise<void> {\r\n    const socketTokens = [];\r\n\r\n    pushTokens.forEach((pushToken) => {\r\n      if (this.subscriptions[pushToken]) {\r\n        const clientSubscription = _clone(this.subscriptions[pushToken]);\r\n        delete this.subscriptions[pushToken];\r\n\r\n        const sub = clientSubscription;\r\n        if (sub && sub.token) {\r\n          socketTokens.push(sub.token);\r\n        }\r\n      }\r\n    });\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.ioPush.emit('unsubscribe', socketTokens, () => {\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n}\r\n",
    "import { Injectable } from '@angular/core';\r\nimport { Script } from '../models';\r\n\r\ndeclare var document: any;\r\n\r\n@Injectable()\r\nexport class ScriptService {\r\n  private scripts: any = {};\r\n\r\n  constructor() {}\r\n\r\n  async init(scriptStore: Script[]) {\r\n    const promises = [];\r\n    scriptStore.forEach((script: Script) => {\r\n      // console.log('SCRIPT STORE LOGGING');\r\n      this.scripts[script.name] = {\r\n        loaded: false,\r\n        src: script.src,\r\n        meta: script.meta,\r\n      };\r\n      promises.push(this.load(script.name));\r\n    });\r\n\r\n    return await Promise.all(promises);\r\n  }\r\n\r\n  async load(...scripts: string[]): Promise<any> {\r\n    const promises: any[] = [];\r\n    scripts.forEach((script) => promises.push(this.loadScript(script)));\r\n    return await Promise.all(promises);\r\n  }\r\n\r\n  loadScript(name: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      // resolve if already loaded\r\n      if (this.scripts[name].loaded) {\r\n        // console.log('LOADED');\r\n        resolve({\r\n          script: name,\r\n          loaded: true,\r\n          status: 'Already Loaded',\r\n          meta: this.scripts[name].meta,\r\n        });\r\n      } else {\r\n        const existingScript = document.querySelectorAll(`head script[src=\"${this.scripts[name].src}\"]`);\r\n        if (existingScript.length === 0) {\r\n          // load script\r\n          const script = document.createElement('script');\r\n          script.type = 'text/javascript';\r\n          script.src = this.scripts[name].src;\r\n          if (script.readyState) {\r\n            // IE\r\n            script.onreadystatechange = () => {\r\n              // console.log('ON READYSTATECHANGE');\r\n              if (\r\n                script.readyState === 'loaded' ||\r\n                script.readyState === 'complete'\r\n              ) {\r\n                script.onreadystatechange = null;\r\n                this.scripts[name].loaded = true;\r\n                resolve({\r\n                  script: name,\r\n                  loaded: true,\r\n                  status: 'Loaded',\r\n                  meta: this.scripts[name].meta,\r\n                });\r\n              }\r\n            };\r\n          } else {\r\n            // Others\r\n            // console.log('ONLOAD');\r\n            script.onload = () => {\r\n              this.scripts[name].loaded = true;\r\n              resolve({\r\n                script: name,\r\n                loaded: true,\r\n                status: 'Loaded',\r\n                meta: this.scripts[name].meta,\r\n              });\r\n            };\r\n          }\r\n          script.onerror = (error: any) =>\r\n          console.log('ON ERROR', error);\r\n            resolve({\r\n              script: name,\r\n              loaded: false,\r\n              status: 'Loaded',\r\n              meta: this.scripts[name].meta,\r\n            });\r\n          document.getElementsByTagName('head')[0].appendChild(script);\r\n        } else {\r\n          // console.log('Script already exists');\r\n          resolve();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getScript(scriptName: string) {\r\n    return this.scripts[scriptName];\r\n  }\r\n}\r\n",
    "import { InjectionToken } from '@angular/core';\r\n\r\nexport let JQ_TOKEN = new InjectionToken('jQuery');\r\n\r\ndeclare let jQuery: Object;\r\nexport function jQueryFactory() {\r\n  return jQuery;\r\n}\r\n\r\n",
    "export const Helpers = {\r\n  generateToken: () => {\r\n    return Math.random().toString(36).substr(2, 9) + '-' + Date.now().toString();\r\n  }\r\n};\r\n"
  ],
  "names": [
    "io.connect",
    "tslib_1.__awaiter",
    "rxMap",
    "Immutable.fromJS"
  ],
  "mappings": "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"
}
