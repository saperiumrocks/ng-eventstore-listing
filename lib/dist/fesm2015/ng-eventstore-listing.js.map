{"version":3,"file":"ng-eventstore-listing.js","sources":["ng://ng-eventstore-listing/utils/helpers.ts","ng://ng-eventstore-listing/services/jquery.service.ts","ng://ng-eventstore-listing/services/script.service.ts","ng://ng-eventstore-listing/services/push.service.ts","ng://ng-eventstore-listing/services/playback.service.ts","ng://ng-eventstore-listing/services/playback-list.service.ts","ng://ng-eventstore-listing/ng-eventstore-listing.component.ts","ng://ng-eventstore-listing/directives/template.directive.ts","ng://ng-eventstore-listing/components/item-template-holder/item-template-holder.component.ts","ng://ng-eventstore-listing/services/socket.io.service.ts","ng://ng-eventstore-listing/ng-eventstore-listing.module.ts","ng://ng-eventstore-listing/enums/filter-operator.ts","ng://ng-eventstore-listing/enums/sort-direction.ts","ng://ng-eventstore-listing/enums/group-boolean-operator.ts","ng://ng-eventstore-listing/components/template-components/item-template/item-template.component.ts"],"sourcesContent":["export const Helpers = {\n  generateToken: () => {\n    return Math.random().toString(36).substr(2, 9) + '-' + Date.now().toString();\n  }\n};\n","import { InjectionToken } from '@angular/core';\n\nexport let JQ_TOKEN = new InjectionToken('jQuery');\n\ndeclare let jQuery: Object;\nexport function jQueryFactory() {\n  return jQuery;\n}\n\n","import { Injectable } from '@angular/core';\nimport { Script } from '../models';\n\ndeclare var document: any;\n\n@Injectable()\nexport class ScriptService {\n  private scripts: any = {};\n\n  constructor() {}\n\n  async init(scriptStore: Script[]) {\n    const promises = [];\n    scriptStore.forEach((script: Script) => {\n      // console.log('SCRIPT STORE LOGGING');\n      this.scripts[script.name] = {\n        loaded: false,\n        src: script.src,\n        meta: script.meta,\n      };\n      promises.push(this.load(script.name));\n    });\n\n    return await Promise.all(promises);\n  }\n\n  async load(...scripts: string[]): Promise<any> {\n    const promises: any[] = [];\n    scripts.forEach((script) => promises.push(this.loadScript(script)));\n    return await Promise.all(promises);\n  }\n\n  loadScript(name: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      // resolve if already loaded\n      if (this.scripts[name].loaded) {\n        // console.log('LOADED');\n        resolve({\n          script: name,\n          loaded: true,\n          status: 'Already Loaded',\n          meta: this.scripts[name].meta,\n        });\n      } else {\n        const existingScript = document.querySelectorAll(`head script[src=\"${this.scripts[name].src}\"]`);\n        if (existingScript.length === 0) {\n          // load script\n          const script = document.createElement('script');\n          script.type = 'text/javascript';\n          script.src = this.scripts[name].src;\n          if (script.readyState) {\n            // IE\n            script.onreadystatechange = () => {\n              // console.log('ON READYSTATECHANGE');\n              if (\n                script.readyState === 'loaded' ||\n                script.readyState === 'complete'\n              ) {\n                script.onreadystatechange = null;\n                this.scripts[name].loaded = true;\n                resolve({\n                  script: name,\n                  loaded: true,\n                  status: 'Loaded',\n                  meta: this.scripts[name].meta,\n                });\n              }\n            };\n          } else {\n            // Others\n            // console.log('ONLOAD');\n            script.onload = () => {\n              this.scripts[name].loaded = true;\n              resolve({\n                script: name,\n                loaded: true,\n                status: 'Loaded',\n                meta: this.scripts[name].meta,\n              });\n            };\n          }\n          script.onerror = (error: any) =>\n          console.log('ON ERROR', error);\n            resolve({\n              script: name,\n              loaded: false,\n              status: 'Loaded',\n              meta: this.scripts[name].meta,\n            });\n          document.getElementsByTagName('head')[0].appendChild(script);\n        } else {\n          // console.log('Script already exists');\n          resolve();\n        }\n      }\n    });\n  }\n\n  getScript(scriptName: string) {\n    return this.scripts[scriptName];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Helpers } from '../utils/helpers.js';\nimport _forOwn from 'lodash-es/forOwn';\nimport _clone from 'lodash-es/clone';\nimport * as io from 'socket.io-client';\n\n@Injectable()\nexport class PushService {\n  private ioPush: any;\n  private subscriptions: any = {};\n  constructor() { }\n\n  init(socketUrl: string) {\n    if (!this.ioPush) {\n      this.ioPush = io.connect(`${socketUrl}/events`);\n\n      this.ioPush.on('message', (eventObj) => {\n        this._processEvent(eventObj);\n      });\n\n      this.ioPush.on('reconnect', () => {\n        // console.log('TEST RECONNECTION');\n        // this.ioPush.emit('resubscribe', () => {\n          // console.log(this.subscriptions);\n          _forOwn(this.subscriptions, (sub) => {\n            const subscriptionQuery = Object.assign(sub.query, {\n              offset: sub.offset,\n            });\n\n            this.ioPush.emit('subscribe', subscriptionQuery, (token: string) => {\n              if (token) {\n                // console.log('Reconnected:', token, subscriptionQuery);\n                sub.token = token;\n              } else {\n                console.error('Reconnect error for query', subscriptionQuery);\n              }\n            });\n          });\n        // });\n      });\n    }\n  }\n\n  _processEvent(eventObj: any) {\n    const self = this;\n    // console.log('got message from push server: ', eventObj);\n    const queryKey = `${eventObj.context}.${eventObj.aggregate}.${eventObj.aggregateId}`;\n    const clientTokens = Object.keys(self.subscriptions);\n    // redirect to mapped subscription/token callback\n    clientTokens.forEach((clientToken) => {\n      const sub = self.subscriptions[clientToken];\n      if (sub) {\n        const subQueryKey = `${sub.query.context}.${sub.query.aggregate}.${sub.query.aggregateId}`;\n        if (subQueryKey === queryKey) {\n          // update next offset (from stream revision) for this subscription, so for reconnecting\n          if (!isNaN(eventObj.streamRevision)) {\n            sub.offset = eventObj.streamRevision + 1;\n          }\n          if (typeof sub.cb === 'function') {\n            sub.cb(undefined, eventObj, sub.owner, clientToken);\n          }\n\n          // iterate on monitors meta tags\n          const tags = Object.keys(sub.monitorTags);\n          tags.forEach((tag) => {\n            // check for state/eventSource._meta or event._meta\n            if (eventObj._meta && eventObj._meta.tag === tag) {\n              let reason = 'N/A';\n              if (typeof eventObj.eventType === 'string') {\n                reason = eventObj.eventType;\n              } else if (typeof eventObj.stateType === 'string') {\n                reason = eventObj.stateType;\n                if (\n                  eventObj.eventSource &&\n                  typeof eventObj.eventSource.eventType === 'string'\n                ) {\n                  reason += ` <- ${eventObj.eventSource.eventType}`;\n                }\n              }\n              // iterate on the monitors\n              const monitors = sub.monitorTags[tag];\n              monitors.forEach((monitor) => {\n                monitor.callback(reason, eventObj._meta);\n              });\n            }\n          });\n        }\n      }\n    });\n  }\n\n  subscribe(query, offset, owner, cb) {\n    // await this.waitForSocketConnection();\n    const pushToken = Helpers.generateToken();\n    // map new subscription, then try to subscribe to server asap\n    this.subscriptions[pushToken] = {\n      query: query,\n      offset: offset,\n      owner: owner,\n      cb: cb,\n      monitorTags: {},\n    };\n\n    const sub = this.subscriptions[pushToken];\n    if (sub && !sub.token) {\n      // build up proper subscribe request query\n      const subscriptionQuery = Object.assign(sub.query, {\n        offset: sub.offset,\n      });\n\n      this.ioPush.emit('subscribe', subscriptionQuery, ({ subscriptionToken, catchUpEvents }) => {\n        if (subscriptionToken) {\n          // console.log('Server Subscribed:', token, subscriptionQuery);\n          sub.token = subscriptionToken;\n        } else {\n          console.error('Subscribe error for query', subscriptionQuery);\n        }\n\n        if (catchUpEvents && catchUpEvents.length > 0) {\n          catchUpEvents.forEach((event) => {\n            cb(undefined, event, owner, pushToken);\n          });\n        }\n      });\n    }\n\n    return pushToken;\n  }\n\n  unsubscribe(pushTokens: string[]): Promise<void> {\n    const socketTokens = [];\n\n    pushTokens.forEach((pushToken) => {\n      if (this.subscriptions[pushToken]) {\n        const clientSubscription = _clone(this.subscriptions[pushToken]);\n        delete this.subscriptions[pushToken];\n\n        const sub = clientSubscription;\n        if (sub && sub.token) {\n          socketTokens.push(sub.token);\n        }\n      }\n    });\n\n    return new Promise((resolve, reject) => {\n      this.ioPush.emit('unsubscribe', socketTokens, () => {\n        resolve();\n      });\n    });\n  }\n}\n","import _clone from 'lodash-es/clone';\nimport { Helpers } from './../utils/helpers';\nimport { Injectable } from '@angular/core';\nimport { PushService } from './push.service';\nimport {\n  StateFunctions,\n  PlaybackList,\n  PlaybackRegistry,\n  Query,\n  ConditionalSubscriptionRegistry,\n  CustomPlaybackConfiguration\n} from '../models';\nimport { CustomPlaybackRegistry } from '../models/custom-playback-registry';\n\n@Injectable()\nexport class PlaybackService {\n  _playbackRegistry: PlaybackRegistry = {};\n  _conditionalSubscriptionRegistry: ConditionalSubscriptionRegistry = {};\n  _customPlaybackRegistry: CustomPlaybackRegistry = {};\n\n  constructor(\n    private pushService: PushService\n  ) {}\n\n  init(socketUrl: string) {\n    this.pushService.init(socketUrl);\n  }\n\n  async unregisterForPlayback(playbackTokens: string[]) {\n    // unregister from playback registry\n    const pushTokens = playbackTokens.map((playbackToken) => {\n      return this._playbackRegistry[playbackToken].pushSubscriptionId;\n    });\n\n    playbackTokens.forEach(async (token) => {\n      const rowId = this._playbackRegistry[token].rowId;\n\n      // console.log('BEFORE');\n      // console.log(this._conditionalSubscriptionRegistry);\n\n      if (rowId) {\n        delete this._conditionalSubscriptionRegistry[rowId];\n      }\n\n      // console.log('AFTER');\n      // console.log(this._conditionalSubscriptionRegistry);\n\n      // unsubscribe from push\n      delete this._playbackRegistry[token];\n    });\n\n    await this.pushService.unsubscribe(pushTokens);\n  }\n\n  async registerForPlayback(\n    owner: object,\n    scriptName: string,\n    query: Query,\n    stateFunctions: StateFunctions,\n    playbackList: PlaybackList,\n    streamRevisionFunction: (item: any) => number = (item) => 0,\n    rowId?: string,\n    conditionFunction?: (item: any) => boolean,\n    rowIdFunction?: (item: any) => string\n  ) {\n    const playbackSubscriptionId = Helpers.generateToken();\n\n    let rowData;\n    if (rowId) {\n      const aggregateId = rowId ? rowId : query.aggregateId;\n      rowData = await new Promise((resolve, reject) => {\n        playbackList.get(aggregateId, (error, item) => {\n          if (error) {\n            reject(error);\n          }\n          resolve(item);\n        });\n      });\n    }\n\n    let streamRevision;\n    let isConditionTrue;\n\n    if (rowData) {\n      streamRevision = streamRevisionFunction(rowData);\n      isConditionTrue = conditionFunction ? (conditionFunction(rowData) ? true : false) : undefined;\n    }\n\n    let pushSubscriptionId;\n    if (isConditionTrue === true || conditionFunction === undefined) {\n      pushSubscriptionId = await this.pushService.subscribe(\n        query,\n        streamRevision,\n        this,\n        async (err, eventObj, owner2) => {\n          // owner is playbackservice\n          const self = owner2 as PlaybackService;\n\n          // console.log(self._playbackRegistry);\n\n          const registration = self._playbackRegistry[playbackSubscriptionId];\n\n          if (registration) {\n            if (eventObj.aggregate === 'states') {\n              const thisScriptName = registration.scriptName;\n              const fromEvent = eventObj.payload._meta.fromEvent;\n              const eventName = fromEvent.payload.name;\n              const thisPlaybackScript = window[thisScriptName];\n              const playbackFunction = thisPlaybackScript.playbackInterface[eventName];\n\n              if (playbackFunction) {\n                if (registration.rowId) {\n                  eventObj.aggregateId = registration.rowId;\n                }\n                const state = eventObj.payload;\n                const funcs = {\n                  emit: (targetQuery, payload, done) => {\n                    done();\n                  },\n                  getPlaybackList: (\n                    playbackListName: string,\n                    callback: (err, playbackList: PlaybackList) => void\n                  ) => {\n                    if (registration.playbackList) {\n                      callback(null, registration.playbackList);\n                    } else {\n                      callback(\n                        new Error(\n                          'PlaybackList does not exist in this registration'\n                        ),\n                        null\n                      );\n                    }\n                  },\n                };\n\n                const doneCallback = () => {\n                  registration.playbackList.get(eventObj.aggregateId, (error, item) => {\n                    self._updateConditionalSubscriptions(eventObj.aggregateId, item);\n                  });\n                };\n\n                playbackFunction(state, fromEvent, funcs, doneCallback);\n\n                // Run custom playbackEvents if they exist\n                if (this._customPlaybackRegistry[eventName]) {\n                  this._customPlaybackRegistry[eventName].forEach((customPlaybackConfiguration: CustomPlaybackConfiguration) => {\n                    customPlaybackConfiguration.playbackFunction(fromEvent);\n                  });\n                }\n              }\n            } else {\n              const thisScriptName = registration.scriptName;\n              const thisPlaybackScript = window[thisScriptName];\n              const playbackFunction = thisPlaybackScript.playbackInterface[eventObj.payload.name];\n\n              if (playbackFunction) {\n                // Override aggregateId to handle other subscriptions\n                if (registration.rowId) {\n                  eventObj.aggregateId = registration.rowId;\n                }\n                const row = stateFunctions.getState(eventObj.aggregateId);\n                const state = row.data;\n                const funcs = {\n                  emit: (targetQuery, payload, done) => {\n                    done();\n                  },\n                  getPlaybackList: (\n                    playbackListName: string,\n                    callback: (err, playbackList: PlaybackList) => void\n                  ) => {\n                    if (registration.playbackList) {\n                      callback(null, registration.playbackList);\n                    } else {\n                      callback(\n                        new Error(\n                          'PlaybackList does not exist in this registration'\n                        ),\n                        null\n                      );\n                    }\n                  },\n                };\n\n                const doneCallback = () => {\n                  registration.playbackList.get(eventObj.aggregateId, (error, item) => {\n                    self._updateConditionalSubscriptions(eventObj.aggregateId, item);\n                  });\n                };\n\n                playbackFunction(state, eventObj, funcs, doneCallback);\n                // Run custom playbackEvents if they exist\n                if (this._customPlaybackRegistry[eventObj.payload.name]) {\n                  this._customPlaybackRegistry[eventObj.payload.name].forEach(\n                    (customPlaybackConfiguration: CustomPlaybackConfiguration) => {\n                      customPlaybackConfiguration.playbackFunction(eventObj);\n                    });\n                }\n              }\n            }\n          }\n        }\n      );\n    }\n\n    // If condition exists, register in conditional registry\n    if (conditionFunction) {\n      if (this._conditionalSubscriptionRegistry[rowId] && Array.isArray(this._conditionalSubscriptionRegistry[rowId])) {\n        this._conditionalSubscriptionRegistry[rowId].push({\n          playbackList: playbackList,\n          scriptName: scriptName,\n          owner: owner,\n          stateFunctions: stateFunctions,\n          query: query,\n          streamRevisionFunction: streamRevisionFunction,\n          conditionFunction: conditionFunction,\n          pushSubscriptionId: pushSubscriptionId,\n          playbackSubscriptionId: playbackSubscriptionId,\n          rowIdFunction: rowIdFunction\n        });\n      } else {\n        this._conditionalSubscriptionRegistry[rowId] = [{\n          playbackList: playbackList,\n          scriptName: scriptName,\n          owner: owner,\n          stateFunctions: stateFunctions,\n          query: query,\n          streamRevisionFunction: streamRevisionFunction,\n          conditionFunction: conditionFunction,\n          pushSubscriptionId: pushSubscriptionId,\n          playbackSubscriptionId: playbackSubscriptionId,\n          rowIdFunction: rowIdFunction\n        }];\n      }\n    }\n\n    this._playbackRegistry[playbackSubscriptionId] = {\n      owner: owner,\n      pushSubscriptionId: pushSubscriptionId,\n      playbackList: playbackList,\n      scriptName: scriptName,\n      rowId: rowId\n    };\n\n    return playbackSubscriptionId;\n  }\n\n  registerCustomPlaybacks(customPlaybackConfigurations: CustomPlaybackConfiguration[]) {\n    customPlaybackConfigurations.forEach((customPlaybackConfiguration: CustomPlaybackConfiguration) => {\n      if (!this._customPlaybackRegistry[customPlaybackConfiguration.eventName]) {\n        this._customPlaybackRegistry[customPlaybackConfiguration.eventName] = [];\n      }\n      this._customPlaybackRegistry[customPlaybackConfiguration.eventName].push(customPlaybackConfiguration);\n    });\n  }\n\n  resetCustomPlaybacks() {\n    this._customPlaybackRegistry = {};\n  }\n\n  _updateConditionalSubscriptions(rowId, rowData) {\n    const conditionalSubscriptions = this._conditionalSubscriptionRegistry[rowId] || [];\n    conditionalSubscriptions.forEach(async (conditionalSubscription) => {\n      if (!conditionalSubscription.pushSubscriptionId && conditionalSubscription.conditionFunction(rowData)) {\n        const offset = conditionalSubscription.streamRevisionFunction(rowData);\n\n        const subQuery = _clone(conditionalSubscription.query);\n\n        if (conditionalSubscription.rowIdFunction) {\n          subQuery.aggregateId = conditionalSubscription.rowIdFunction(rowData);\n        }\n\n        const pushSubscriptionId = this.pushService.subscribe(\n          subQuery,\n          offset,\n          this,\n          async (err, eventObj, owner2) => {\n            // owner is playbackservice\n            const self = owner2 as PlaybackService;\n            const registration = self._playbackRegistry[conditionalSubscription.playbackSubscriptionId];\n\n            if (eventObj.aggregate === 'states') {\n              const thisScriptName = registration.scriptName;\n              const fromEvent = eventObj.payload._meta.fromEvent;\n              const eventName = fromEvent.payload.name;\n              const thisPlaybackScript = window[thisScriptName];\n              const playbackFunction = thisPlaybackScript.playbackInterface[eventName];\n\n              if (playbackFunction) {\n                const state = eventObj.payload;\n                const funcs = {\n                  emit: (targetQuery, payload, done) => {\n                    done();\n                  },\n                  getPlaybackList: (\n                    playbackListName: string,\n                    callback: (err, playbackList: PlaybackList) => void\n                  ) => {\n                    if (registration.playbackList) {\n                      callback(null, registration.playbackList);\n                    } else {\n                      callback(\n                        new Error(\n                          'PlaybackList does not exist in this registration'\n                        ),\n                        null\n                      );\n                    }\n                  },\n                };\n\n                const doneCallback = () => {\n                };\n                playbackFunction(state, fromEvent, funcs, doneCallback);\n              }\n            } else {\n\n              const thisScriptName = registration.scriptName;\n              const thisPlaybackScript = window[thisScriptName];\n              const playbackFunction = thisPlaybackScript.playbackInterface[eventObj.payload.name];\n\n              if (playbackFunction) {\n                // Override aggregateId to handle other subscriptions\n                if (registration.rowId) {\n                  eventObj.aggregateId = registration.rowId;\n                }\n                const row = conditionalSubscription.stateFunctions.getState(eventObj.aggregateId);\n                const state = row.data;\n                const funcs = {\n                  emit: (targetQuery, payload, done) => {\n                    done();\n                  },\n                  getPlaybackList: (\n                    playbackListName: string,\n                    callback: (err, playbackList: PlaybackList) => void\n                  ) => {\n                    if (registration.playbackList) {\n                      callback(null, registration.playbackList);\n                    } else {\n                      callback(\n                        new Error(\n                          'PlaybackList does not exist in this registration'\n                        ),\n                        null\n                      );\n                    }\n                  },\n                };\n\n                const doneCallback = () => {\n                  // stateFunctions.setState(row.rowId, row);\n                };\n\n                playbackFunction(state, eventObj, funcs, doneCallback);\n              }\n            }\n          }\n        );\n\n        // just use the subscriptionId to map the push subscription to the playback\n        this._playbackRegistry[conditionalSubscription.playbackSubscriptionId] = {\n          owner: conditionalSubscription.owner,\n          pushSubscriptionId: pushSubscriptionId,\n          playbackList: conditionalSubscription.playbackList,\n          scriptName: conditionalSubscription.scriptName,\n          rowId: rowId\n        };\n\n        conditionalSubscription.pushSubscriptionId = pushSubscriptionId;\n\n        // console.log('subscribed to playback: ', pushSubscriptionId, conditionalSubscription.query);\n        return pushSubscriptionId;\n      } else if (!conditionalSubscription.conditionFunction(rowData) && conditionalSubscription.pushSubscriptionId) {\n        this.pushService.unsubscribe([conditionalSubscription.pushSubscriptionId]).then(() => {\n          delete this._playbackRegistry[conditionalSubscription.playbackSubscriptionId];\n          conditionalSubscription.pushSubscriptionId = undefined;\n        });\n      }\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Filter, Sort, PlaybackListResponse } from '../models';\n\n@Injectable()\nexport class PlaybackListService {\n  constructor(private http: HttpClient) {}\n\n  getPlaybackList(\n    playbackListBaseUrl: string,\n    playbackListName: string,\n    startIndex: number,\n    limit: number,\n    filters?: Filter[],\n    sort?: Sort[],\n    previousKey?: string,\n    nextKey?: string\n  ): Observable<PlaybackListResponse> {\n    let url = `${playbackListBaseUrl}/playback-list/${playbackListName}?startIndex=${startIndex}&limit=${limit}`;\n\n    if (filters) {\n      url += `&filters=${encodeURIComponent(JSON.stringify(filters))}`;\n    }\n\n    if (sort) {\n      url += `&sort=${JSON.stringify(sort)}`;\n    }\n\n    if (previousKey) {\n      url += '&previousKey=' + previousKey;\n    }\n\n    if (nextKey) {\n        url += '&nextKey=' + nextKey;\n    }\n\n    return this.http.get<PlaybackListResponse>(url);\n  }\n\n  getPlaybackListCsv(\n    playbackListBaseUrl: string,\n    playbackListName: string,\n    startIndex: number,\n    limit: number,\n    filters?: Filter[],\n    sort?: Sort[],\n    type?: string\n  ): Observable<any> {\n    let url = `${playbackListBaseUrl}/playback-list/${playbackListName}/export?startIndex=${startIndex}&limit=${limit}`;\n\n    if (filters) {\n      url += `&filters=${JSON.stringify(filters)}`;\n    }\n\n    if (sort) {\n      url += `&sort=${JSON.stringify(sort)}`;\n    }\n\n    if (type) {\n      url += `&type=${type}`;\n    }\n    return this.http.get<PlaybackListResponse>(url, <any>{ responseType: 'text/csv'});\n  }\n}\n","import { Helpers } from './utils/helpers';\nimport {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  OnDestroy,\n  Inject\n} from '@angular/core';\n\nimport { switchMap, debounceTime ,  map as rxMap } from 'rxjs/operators';\nimport { Subscription ,  Subject } from 'rxjs';\nimport { JQ_TOKEN } from './services/jquery.service';\n\nimport {\n  SubscriptionConfiguration,\n  Script,\n  PlaybackList,\n  RowItem,\n  Filter,\n  Query,\n  Sort,\n  PlaybackListRequest,\n  CustomPlaybackConfiguration,\n  PlaybackListResponse\n} from './models';\n\n\nimport { ScriptService } from './services/script.service';\nimport { PlaybackService } from './services/playback.service';\nimport { PlaybackListService } from './services/playback-list.service';\n\nimport * as Immutable from 'immutable';\nimport _defaultsDeep from 'lodash-es/defaultsDeep';\nimport _isEmpty from 'lodash-es/isEmpty';\nimport _isEqual from 'lodash-es/isEqual';\nimport _cloneDeep from 'lodash-es/cloneDeep';\nimport _clone from 'lodash-es/clone';\nimport _uniq from 'lodash-es/uniq';\nimport _merge from 'lodash-es/defaults';\nimport * as moment_ from 'moment-mini-ts';\n\nimport saveAs from 'file-saver';\n\n@Component({\n  selector: 'lib-ng-eventstore-listing',\n  templateUrl: './ng-eventstore-listing.component.html',\n  styleUrls: [\n    './ng-eventstore-listing.component.css'\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgEventstoreListingComponent\n  implements OnInit, OnChanges, OnDestroy {\n  @Output() updateEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() getLookupsEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() showModalEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() deleteEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() playbackListLoadedEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() newItemNotifyEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() removedItemNotifyEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() getPlaybackLIstErrorEmitter: EventEmitter<any> = new EventEmitter();\n\n  @Input() itemComponentClass: any;\n  @Input() lookups = {};\n  @Input() socketUrl: string;\n  @Input() playbackListBaseUrl: string;\n  @Input() scriptStore: Script[];\n  @Input() itemSubscriptionConfigurations: SubscriptionConfiguration[] = [];\n  @Input() listSubscriptionConfiguration: SubscriptionConfiguration;\n  @Input() playbackListName: string;\n  @Input() filters: Filter[] = null;\n  @Input() sort: Sort[] = null;\n  @Input() pageIndex = 1;\n  @Input() itemsPerPage: number;\n  @Input() responseBasePath = 'data';\n  @Input() emptyListDisplayText = 'No Results';\n  @Input() csvFileName = '';\n  @Input() customPlaybackConfigurations: CustomPlaybackConfiguration[];\n  @Input() enableLoadingOverlay = true;\n  @Input() loadingTopBoundSelector: string;\n  @Input() minHeightCss = '500px';\n  @Input() loadingOffset = '200px';\n\n  @Input() debugging = false;\n\n  _dataList: Immutable.List<RowItem>;\n  _dataCount: number;\n  _dataTotalCount: number;\n  _previousKey: string;\n  _nextKey: string;\n  _previousPageIndex: number;\n  _initialized = false;\n  _isLoading = false;\n  _getPlaybackListSubscription: Subscription;\n  _getPlaybackListSubject: Subject<PlaybackListRequest> = new Subject();\n  _exportPlaybackListSubscription: Subscription;\n  _exportPlaybackListSubject: Subject<any> = new Subject();\n  _playbackSubscriptionTokens: string[] = [];\n  _playbackList: PlaybackList = {\n    get: (rowId: string, callback: (err, item) => void) => {\n      const rowIndex = this._dataList.findIndex((value: any) => {\n        return value.get('rowId') === rowId;\n      });\n\n      if (rowIndex > -1) {\n        const data = this._dataList.get(rowIndex);\n        if (data) {\n          callback(null, (data as any).toJS());\n        } else {\n          callback(null, {});\n        }\n      } else {\n        callback(new Error(`Row with rowId: ${rowIndex} does not exist`), null);\n      }\n    },\n    add: (\n      rowId: string,\n      revision: number,\n      data: any,\n      meta: any,\n      callback: (err?: any) => void\n    ) => {\n      // const newEntry = {\n      //   rowId: rowId,\n      //   revision: revision,\n      //   data: data,\n      //   meta: meta,\n      // };\n      // this.dataList = this.dataList.push(Immutable.fromJS(newEntry));\n      // this.changeDetectorRef.detectChanges();\n      // Do refresh trigger\n      const newItem = {\n        rowId,\n        revision,\n        data,\n        meta\n      };\n      this.newItemNotifyEmitter.emit(newItem);\n      callback();\n    },\n    update: (\n      rowId: string,\n      revision: number,\n      oldData: any,\n      newData: any,\n      meta: any,\n      callback: (err?) => void\n    ) => {\n      const rowIndex = this._dataList.findIndex((value: any) => {\n        return value.get('rowId') === rowId;\n      });\n\n      // oldData is Immutable\n      const newEntry = Immutable.fromJS({\n        rowId: rowId,\n        revision: revision,\n        data: {\n          ...oldData,\n          ...newData,\n        },\n        meta: meta,\n      });\n\n      if (this.debugging) {\n        console.log(newEntry);\n      }\n\n      if (rowIndex > -1) {\n        if (this.debugging) {\n          console.log(rowIndex);\n          console.log(newEntry);\n\n          console.log(this._dataList.toJS());\n        }\n        this._dataList = this._dataList.set(rowIndex, newEntry);\n\n        if (this.debugging) {\n          console.log(this._dataList.toJS());\n        }\n        this.changeDetectorRef.detectChanges();\n        callback();\n      } else {\n        callback(new Error(`Row with rowId: ${rowIndex} does not exist`));\n      }\n    },\n    delete: (rowId: string, callback: (error?: any) => void) => {\n      const rowIndex = this._dataList.findIndex((value: any) => {\n        return value.get('rowId') === rowId;\n      });\n\n      if (rowIndex > -1) {\n        // this._dataList = this._dataList.remove(rowIndex);\n        this.removedItemNotifyEmitter.emit(rowId);\n        callback(null);\n      } else {\n        callback(new Error(`Row with rowId: ${rowIndex} does not exist`));\n      }\n    },\n  };\n\n  _id: string = Helpers.generateToken();\n\n  _stateFunctions = {\n    getState: (id: string) => {\n      const index = this._dataList.findIndex((row: any) => {\n        return row.get('rowId') === id;\n      });\n      if (index > 0) {\n        return (this._dataList.get(index) as any).toJS();\n      }\n\n      return {};\n    },\n    setState: (id: string, data: any) => {\n      const index = this._dataList.findIndex((row: any) => {\n        return row.get('rowId') === id;\n      });\n      this._dataList = this._dataList.set(index, Immutable.fromJS(data));\n      this.changeDetectorRef.markForCheck();\n    },\n  };\n\n  constructor(\n    @Inject(JQ_TOKEN) public $: any,\n    private changeDetectorRef: ChangeDetectorRef,\n    private scriptService: ScriptService,\n    private playbackService: PlaybackService,\n    private playbackListService: PlaybackListService\n  ) {}\n\n  async ngOnInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const self = this;\n\n    if (!self._initialized) {\n      this._initialized = true;\n      this._loadScripts().then(() => {\n        this._initializeRequests();\n        this.playbackService.init(this.socketUrl);\n        const changesKeys = Object.keys(changes);\n        changesKeys.forEach((key) => {\n          self[key] = changes[key].currentValue;\n          switch (key) {\n            case 'pageIndex':\n            case 'filters':\n            case 'sort': {\n              this.requestPlaybackList();\n              break;\n            }\n          }\n        });\n\n      });\n    } else {\n      const changesKeys = Object.keys(changes);\n      changesKeys.forEach((key) => {\n        if (key === 'pageIndex') {\n          self._previousPageIndex = changes[key].previousValue;\n        }\n        self[key] = changes[key].currentValue;\n        switch (key) {\n          case 'pageIndex':\n          case 'filters':\n          case 'sort':\n          case 'playbackListName': {\n            this.requestPlaybackList();\n            break;\n          }\n        }\n      });\n    }\n  }\n\n\n  ngOnDestroy() {\n    this._resetSubscriptions();\n    this.playbackService.resetCustomPlaybacks();\n    this._initialized = false;\n  }\n\n  trackByFn(index: number, item: any) {\n    return item.get('rowId');\n  }\n\n  private _initializeRequests(): void {\n    const self = this;\n    self._getPlaybackListSubscription = self._getPlaybackListSubject\n      .pipe(\n        debounceTime(100),\n        switchMap((params) => {\n          return self.playbackListService.getPlaybackList(\n            self.playbackListBaseUrl,\n            params.playbackListName,\n            params.startIndex,\n            params.limit,\n            params.filters,\n            params.sort,\n            params.previousKey,\n            params.nextKey\n          );\n        })\n      )\n      .subscribe((res: any) => {\n        self._dataList = Immutable.fromJS(res.rows);\n        self._dataCount = res.rows.length;\n        self._dataTotalCount = res.count;\n        self._previousKey = res.previousKey;\n        self._nextKey = res.nextKey;\n\n        self._resetSubscriptions();\n        self._initSubscriptions();\n        self._initCustomPlaybackConfigurations();\n\n        self.changeDetectorRef.detectChanges();\n\n        self.playbackListLoadedEmitter.emit({\n          totalItems: self._dataTotalCount,\n          dataCount: self._dataCount,\n        });\n\n        if (self.enableLoadingOverlay) {\n          self.hideLoadingOverlay();\n        }\n        self._isLoading = false;\n      }, (error: any) => {\n        self.getPlaybackLIstErrorEmitter.emit(error);\n        if (self.enableLoadingOverlay) {\n          self.hideLoadingOverlay();\n        }\n        self._isLoading = false;\n      });\n\n    self._exportPlaybackListSubscription = self._exportPlaybackListSubject\n    .pipe(\n      debounceTime(100),\n      switchMap((params) => {\n        const playbackListRequest = params.playbackListRequest;\n        return self.playbackListService.getPlaybackListCsv(\n          self.playbackListBaseUrl,\n          playbackListRequest.playbackListName,\n          playbackListRequest.startIndex,\n          playbackListRequest.limit,\n          playbackListRequest.filters,\n          playbackListRequest.sort,\n          playbackListRequest.type\n        ).pipe(\n          rxMap((response: PlaybackListResponse) => {\n            return [response, params.fileNameOverride];\n          })\n        );\n      })\n    )\n    .subscribe(([result, fileNameOverride]) => {\n      const csv = new Blob([result], { type: 'text/csv' });\n      const moment = moment_;\n      const now = moment();\n      const fileName = `${fileNameOverride || this.csvFileName || this.playbackListName}-${now.format('YYYY-MM-DD_HHmmss')}.csv`;\n      saveAs(csv, fileName);\n    });\n  }\n\n  _getPlaybackList(\n    playbackListName: string,\n    startIndex: number,\n    limit: number,\n    filters?: Filter[],\n    sort?: Sort[],\n    previousKey?: string,\n    nextKey?: string\n  ) {\n    const playbackListRequestParams: PlaybackListRequest = {\n      playbackListName: playbackListName,\n      startIndex: startIndex,\n      limit: limit,\n      filters: filters,\n      sort: sort,\n      previousKey: previousKey,\n      nextKey: nextKey\n    };\n    this._isLoading = true;\n    if (this.enableLoadingOverlay) {\n      this.showLoadingOverlay();\n    }\n    this._getPlaybackListSubject.next(playbackListRequestParams);\n  }\n\n  requestPlaybackList() {\n    let startIndex;\n    if (this.pageIndex === 1) {\n      this._previousPageIndex = null;\n      this._previousKey = null;\n      this._nextKey = null;\n      startIndex = 0;\n      this._getPlaybackList(\n        this.playbackListName,\n        startIndex,\n        this.itemsPerPage,\n        this.filters,\n        this.sort,\n        null,\n        null\n      );\n    } else if (this._previousKey && this._nextKey) {\n      if (this._dataTotalCount - (this.pageIndex * this.itemsPerPage) <= 0) {\n        startIndex = 0;\n        this._getPlaybackList(\n          this.playbackListName,\n          startIndex,\n          this.itemsPerPage,\n          this.filters,\n          this.sort,\n          null,\n          '__LAST'\n        );\n      } else {\n        let pageDelta = this.pageIndex - this._previousPageIndex;\n        if (pageDelta < 0) {\n          pageDelta *= -1;\n          startIndex = this.itemsPerPage * (pageDelta - 1);\n          this._getPlaybackList(\n            this.playbackListName,\n            startIndex,\n            this.itemsPerPage,\n            this.filters,\n            this.sort,\n            this._previousKey,\n            null\n          );\n        } else {\n          startIndex = this.itemsPerPage * (pageDelta - 1);\n          this._getPlaybackList(\n            this.playbackListName,\n            startIndex,\n            this.itemsPerPage,\n            this.filters,\n            this.sort,\n            null,\n            this._nextKey\n          );\n        }\n      }\n    } else {\n      startIndex = this.itemsPerPage * (this.pageIndex - 1);\n      this._getPlaybackList(\n        this.playbackListName,\n        startIndex,\n        this.itemsPerPage,\n        this.filters,\n        this.sort,\n        null,\n        null\n      );\n    }\n  }\n\n  private async _loadScripts() {\n    if (this.scriptStore) {\n      await this.scriptService.init(this.scriptStore);\n    }\n  }\n\n  private async _initSubscriptions() {\n    const self = this;\n    // Per row subscriptions\n    (self.itemSubscriptionConfigurations || []).forEach((itemSubscriptionConfiguration: SubscriptionConfiguration) => {\n      if (itemSubscriptionConfiguration) {\n        self._dataList.forEach(async (row: any) => {\n          const streamRevisionFunction = itemSubscriptionConfiguration.streamRevisionFunction ?\n            itemSubscriptionConfiguration.streamRevisionFunction : () => +row.get('revision') + 1;\n\n\n          const aggregateId = itemSubscriptionConfiguration.rowIdFunction ?\n              itemSubscriptionConfiguration.rowIdFunction(row.toJS()) : row.get('rowId');\n\n          const query: Query = _clone(itemSubscriptionConfiguration.query);\n          query.aggregateId = query.aggregateId.replace(\n            /{{rowId}}/g,\n            aggregateId\n          );\n\n          const playbackSubscriptionToken = await self.playbackService.registerForPlayback(\n            self,\n            itemSubscriptionConfiguration.playbackScriptName,\n            query,\n            self._stateFunctions,\n            self._playbackList,\n            streamRevisionFunction,\n            row.get('rowId'),\n            itemSubscriptionConfiguration.condition,\n            itemSubscriptionConfiguration.rowIdFunction\n          );\n          this._playbackSubscriptionTokens.push(playbackSubscriptionToken);\n        });\n      }\n    });\n\n    if (self.listSubscriptionConfiguration) {\n      // List subscription\n      this._playbackSubscriptionTokens.push(\n        await self.playbackService.registerForPlayback(\n          self,\n          self.listSubscriptionConfiguration.playbackScriptName,\n          self.listSubscriptionConfiguration.query,\n          self._stateFunctions,\n          self._playbackList,\n          () => 0\n        )\n      );\n    }\n  }\n\n  private _initCustomPlaybackConfigurations() {\n    if (!_isEmpty(this.customPlaybackConfigurations)) {\n      this.playbackService.registerCustomPlaybacks(this.customPlaybackConfigurations);\n    }\n  }\n\n  _resetSubscriptions() {\n    this.playbackService.unregisterForPlayback(this._playbackSubscriptionTokens);\n    this._playbackSubscriptionTokens = [];\n  }\n\n  _onUpdate(payload: any) {\n    this.updateEmitter.emit(payload);\n  }\n\n  _onGetLookups(payload: any) {\n    this.getLookupsEmitter.emit(payload);\n  }\n\n  _onShowModal(payload: any) {\n    this.showModalEmitter.emit(payload);\n  }\n\n  _onDelete(payload: any) {\n    this.deleteEmitter.emit(payload);\n  }\n\n  exportCSV(overrideParams?: PlaybackListRequest, fileNameOverride?: string) {\n    if (overrideParams) {\n      this._exportPlaybackListSubject.next({ playbackListRequest: overrideParams, fileNameOverride: fileNameOverride });\n    } else {\n      const startIndex = this.itemsPerPage * (this.pageIndex - 1);\n      const exportPlaybackListRequestParams: PlaybackListRequest = {\n        playbackListName: this.playbackListName,\n        startIndex: startIndex,\n        limit: 1000000,\n        filters: this.filters,\n        sort: this.sort\n      };\n\n      this._exportPlaybackListSubject.next({ playbackListRequest: exportPlaybackListRequestParams, fileNameOverride: fileNameOverride });\n    }\n  }\n\n  // Loading Overlay Functions\n  hideLoadingOverlay() {\n    const $ = this.$;\n    $('body').css('overflow', '');\n    $('body').removeClass('loading-body');\n    $(`#ng-eventstore-listing-overlay-${this._id}`).hide();\n  }\n\n  showLoadingOverlay() {\n    const $ = this.$;\n    $(`#ng-eventstore-listing-overlay-${this._id}`).show();\n    if (this.loadingTopBoundSelector ? true : false) {\n      this._fixLoadingOverlayPosition();\n    }\n  }\n\n  _fixLoadingOverlayPosition() {\n    const $ = this.$;\n    const windowY = window.pageYOffset;\n    const pageHeaderSectionHeight = 53;\n    const pageHeaderSectionBottomY = $(this.loadingTopBoundSelector).offset().top + pageHeaderSectionHeight;\n    $('body').css('overflow', 'hidden');\n    $('body').addClass('loading-body');\n    if (windowY < pageHeaderSectionBottomY) {\n      $(`#ng-eventstore-listing-overlay-${this._id}`).css('position', 'absolute');\n      $(`#ng-eventstore-listing-overlay-${this._id}`).css('height', `${window.innerHeight}px`);\n      $(`#ng-eventstore-listing-overlay-${this._id}`).css('width', '100%');\n      const pageHeaderHeight = pageHeaderSectionHeight;\n      $(`#ng-eventstore-listing-overlay-${this._id}`).css('margin-top', `${pageHeaderHeight}px`);\n    } else {\n      $(`#ng-eventstore-listing-overlay-${this._id}`).css('position', 'fixed');\n      $(`#ng-eventstore-listing-overlay-${this._id}`).css('height', '100%');\n      $(`#ng-eventstore-listing-overlay-${this._id}`).css('margin-top', '0px');\n    }\n  }\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[libTemplateDirective]'\n})\nexport class TemplateDirective {\n  constructor(public viewContainerRef: ViewContainerRef) { }\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  ViewChild,\n  ComponentFactoryResolver,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ComponentRef,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n  AfterViewInit,\n} from '@angular/core';\nimport { ItemTemplateComponent } from '../template-components/index';\nimport { TemplateDirective } from '../../directives/template.directive';\n\n@Component({\n  selector: 'lib-item-template-holder',\n  templateUrl: './item-template-holder.component.html',\n  styleUrls: ['./item-template-holder.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ItemTemplateHolderComponent\n  implements OnInit, OnChanges, AfterViewInit {\n  @Input() itemComponentClass: any;\n  @Input() data: any = {};\n  @Input() lookups: any = {};\n  @Output() updateEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() getLookupsEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() showModalEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() deleteEmitter: EventEmitter<any> = new EventEmitter();\n\n  componentRef: ComponentRef<any>;\n  initialChanges: SimpleChanges;\n  @ViewChild(TemplateDirective, { static: false }) itemHost: TemplateDirective;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {}\n\n  ngOnInit(): void {\n    // this.loadComponent();\n  }\n\n  ngAfterViewInit(): void {\n    this.loadComponent();\n    if (this.initialChanges) {\n      this.ngOnChanges(this.initialChanges);\n      this.initialChanges = undefined;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const self = this;\n    if (self.componentRef) {\n      const changesKeys = Object.keys(changes);\n      changesKeys.forEach((key) => {\n        (self.componentRef.instance as ItemTemplateComponent)[key] =\n          changes[key].currentValue;\n      });\n      (self.componentRef.instance as ItemTemplateComponent).ngOnChanges(\n        changes\n      );\n    } else {\n      this.initialChanges = changes;\n    }\n  }\n\n  loadComponent(): void {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\n      this.itemComponentClass\n    );\n    const viewContainerRef = this.itemHost.viewContainerRef;\n    viewContainerRef.clear();\n\n    this.componentRef = viewContainerRef.createComponent(componentFactory);\n    (this.componentRef.instance as ItemTemplateComponent).data = this.data;\n    (this.componentRef\n      .instance as ItemTemplateComponent).onUpdateEmitter = this.updateEmitter;\n    (this.componentRef\n      .instance as ItemTemplateComponent).onGetLookupsEmitter = this.getLookupsEmitter;\n    (this.componentRef\n      .instance as ItemTemplateComponent).onShowModalEmitter = this.showModalEmitter;\n    (this.componentRef\n      .instance as ItemTemplateComponent).onDeleteEmitter = this.deleteEmitter;\n    // (this.componentRef.instance as ItemTemplateComponent).idPropertyName = this.idPropertyName;\n    (this.componentRef\n      .instance as ItemTemplateComponent).lookups = this.lookups;\n    (this.componentRef.instance as ItemTemplateComponent).ngOnInit();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client';\n\n@Injectable()\nexport class SocketIoService {\n  // sockets = {};\n  constructor() { }\n  getSocketInstance(socketUrl) {\n    return io.connect(`${socketUrl}/events`);\n  //   if (!this.sockets[socketUrl]) {\n  //     this.sockets[socketUrl] = io.connect(`${socketUrl}/events`);\n  //   }\n  //   return this.sockets[socketUrl];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgEventstoreListingComponent } from './ng-eventstore-listing.component';\nimport { ItemTemplateHolderComponent } from './components/item-template-holder/item-template-holder.component';\n\nimport { CommonModule } from '@angular/common';\nimport { TemplateDirective } from './directives/template.directive';\n// import { IO_TOKEN, SocketIoService } from './services/socket.io.service';\n\n// import * as io from 'socket.io-client';\nimport { ScriptService } from './services/script.service';\nimport { PlaybackService } from './services/playback.service';\nimport { PlaybackListService } from './services/playback-list.service';\nimport { PushService } from './services/push.service';\nimport { SocketIoService } from './services/socket.io.service';\nimport { jQueryFactory, JQ_TOKEN } from './services/jquery.service';\n\n@NgModule({\n  declarations: [\n    NgEventstoreListingComponent,\n    ItemTemplateHolderComponent,\n    TemplateDirective,\n\n  ],\n  imports: [CommonModule],\n  exports: [\n    NgEventstoreListingComponent\n  ],\n  providers: [\n    ScriptService,\n    PlaybackService,\n    PlaybackListService,\n    PushService,\n    SocketIoService,\n    { provide: JQ_TOKEN, useFactory: jQueryFactory }\n    // ,\n    // { provide: IO_TOKEN, useValue: io }\n  ]\n})\nexport class NgEventstoreListingModule {}\n","export enum FilterOperator {\n  range = 'range',\n  dateRange = 'dateRange',\n  is = 'is',\n  any = 'any',\n  contains = 'contains',\n  endsWith = 'endsWith',\n  startsWith = 'startsWith',\n  arrayContains = 'arrayContains',\n  exists = 'exists',\n  notExists = 'notExists'\n}\n","export enum SortDirection {\n  ASC = 'ASC',\n  DESC = 'DESC',\n}\n","export enum GroupBooleanOperator {\n  and = 'and',\n  or = 'or'\n}\n","import {\n  EventEmitter,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectorRef,\n} from '@angular/core';\n\nimport {\n  FormGroup, Validators, FormControl\n} from '@angular/forms';\n\nexport abstract class ItemTemplateComponent implements OnInit, OnChanges {\n  // Event Emitters\n  onUpdateEmitter: EventEmitter<any> = new EventEmitter();\n  onGetLookupsEmitter: EventEmitter<any> = new EventEmitter();\n  onShowModalEmitter: EventEmitter<any> = new EventEmitter();\n  onDeleteEmitter: EventEmitter<any> = new EventEmitter();\n\n  idPropertyName: string;\n  data: any; // Immutable item\n  lookups: any;\n  private _formGroup: FormGroup = new FormGroup({});\n  private _formGroupKeys: string[] = [];\n\n  _changeFn: (changes) => void;\n\n  constructor(protected changeDetectorRef?: ChangeDetectorRef) {}\n\n  ngOnInit(): void {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this._changeFn) {\n      this._changeFn(changes);\n    }\n\n    const dataChanges = changes.data ? changes.data.currentValue : null;\n    if (dataChanges && !changes.data.isFirstChange()) {\n      const dataObj = (dataChanges as any).toJS();\n\n      this._formGroupKeys.forEach((key) => {\n        const newValue = dataObj.data[key];\n        const oldValue = this._formGroup.get(key).value;\n\n        if (newValue !== oldValue) {\n          this._formGroup.get(key).setValue(newValue, { emit: false, onlySelf: true });\n        }\n      });\n\n    }\n\n\n    if (this.changeDetectorRef) {\n      this.changeDetectorRef.detectChanges();\n    }\n  }\n\n  registerChangeFunction = (changeFn: (changes) => void) => {\n    this._changeFn = changeFn;\n  }\n\n  onUpdate = (propertyName: string, actionData: any) => {\n    const actionEventEmitterData = {\n      propertyName: propertyName,\n      id: this.data.get(this.idPropertyName),\n      data: actionData,\n    };\n    this.onUpdateEmitter.emit(actionEventEmitterData);\n  }\n\n  onGetLookups = (lookupName: string, callback: (payload: any) => void) => {\n    const actionEventEmitterData = {\n      lookupName: lookupName,\n      callback: callback\n    };\n    this.onGetLookupsEmitter.emit(actionEventEmitterData);\n  }\n\n  onShowModal = (modalName, data) => {\n    const actionEventEmitterData = {\n      modalName: modalName,\n      id: this.data.get(this.idPropertyName),\n      data: data,\n    };\n    this.onShowModalEmitter.emit(actionEventEmitterData);\n  }\n\n  onDelete = (actionData?: any) => {\n    const actionEventEmitterData = {\n      id: this.data.get(this.idPropertyName),\n      data: actionData,\n    };\n    this.onDeleteEmitter.emit(actionEventEmitterData);\n  }\n\n  // registerFormControl(propertyName: string)\n  registerFormGroup = (formGroup: FormGroup): void => {\n    this._formGroup = formGroup;\n  }\n\n  createFormControl(propertyName: string, initialValue: any, validators: Validators): FormControl {\n    const formControl = new FormControl(initialValue, validators);\n    this._formGroup.addControl(propertyName, formControl);\n    this._formGroupKeys.push(propertyName);\n    return formControl;\n  }\n\n}\n"],"names":["io.connect","Immutable.fromJS","rxMap","tslib_1.__decorate","tslib_1.__param"],"mappings":"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"}