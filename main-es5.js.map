{"version":3,"sources":["webpack:///ng-eventstore-listing/src/environments/environment.ts","webpack:///ng-eventstore-listing/src/lib/components/item-template-holder/item-template-holder.component.ts","webpack:///ng-eventstore-listing/src/lib/components/item-template-holder/item-template-holder.component.html","webpack:///ng-eventstore-listing/src/lib/components/ng-header-footer-template-holder/ng-header-footer-template-holder.component.ts","webpack:///ng-eventstore-listing/src/lib/components/ng-header-footer-template-holder/ng-header-footer-template-holder.component.html","webpack:///ng-eventstore-listing/src/lib/components/template-components/header-footer-template/header-footer-template.component.ts","webpack:///ng-eventstore-listing/src/lib/components/template-components/index.ts","webpack:///ng-eventstore-listing/src/lib/components/template-components/item-template/item-template.component.ts","webpack:///ng-eventstore-listing/src/lib/directives/template.directive.ts","webpack:///ng-eventstore-listing/src/lib/enums/filter-types.ts","webpack:///ng-eventstore-listing/src/lib/enums/sort-direction.ts","webpack:///ng-eventstore-listing/src/lib/ng-eventstore-listing.component.html","webpack:///ng-eventstore-listing/src/lib/ng-eventstore-listing.component.ts","webpack:///ng-eventstore-listing/src/lib/ng-eventstore-listing.module.ts","webpack:///ng-eventstore-listing/src/lib/services/playback-list.service.ts","webpack:///ng-eventstore-listing/src/lib/services/playback.service.ts","webpack:///ng-eventstore-listing/src/lib/services/push.service.ts","webpack:///ng-eventstore-listing/src/lib/services/script.service.ts","webpack:///ng-eventstore-listing/src/lib/services/socket.io.service.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/script.store.ts","webpack:///src/app/test-footer/test-footer.component.ts","webpack:///src/app/test-footer/test-footer.component.html","webpack:///src/app/test-row/test-row.component.ts","webpack:///src/app/test-row/test-row.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["environment","production","pushHost","vehicleHost","ItemTemplateHolderComponent","componentFactoryResolver","data","lookups","updateEmitter","updateLookupsEmitter","showModalEmitter","deleteEmitter","loadComponent","initialChanges","ngOnChanges","undefined","changes","self","componentRef","changesKeys","Object","keys","forEach","key","instance","currentValue","componentFactory","resolveComponentFactory","itemComponentClass","viewContainerRef","itemHost","clear","createComponent","onUpdateEmitter","onUpdateLookupsEmitter","onShowModalEmitter","onDeleteEmitter","ngOnInit","selector","templateUrl","styleUrls","changeDetection","OnPush","NgHeaderFooterTemplateHolderComponent","headerData","maxSize","actionEmitter","pageChangedEmitter","filterEmitter","updatePageValues","componentClass","pageIndex","itemsPerPage","totalItemCount","actualItemCount","HeaderFooterTemplateComponent","changeDetectorRef","onPageChanged","event","emit","onFilter","onAction","action","actionData","pageStart","pageEnd","Math","min","detectChanges","ItemTemplateComponent","registerChangeFunction","changeFn","_changeFn","onUpdate","propertyName","actionEventEmitterData","id","get","idPropertyName","onUpdateLookups","lookup","onShowModal","modalName","onDelete","TemplateDirective","FilterOperator","SortDirection","NgEventstoreListingComponent","scriptService","playbackService","playbackListService","playbackListLoadedEmitter","filters","sort","initialized","getPlaybackListSubject","subscriptionTokens","playbackList","rowId","callback","rowIndex","dataList","findIndex","value","Error","add","revision","meta","newEntry","markForCheck","push","update","oldData","newData","set","remove","stateFunctions","getState","index","row","toJS","setState","_initializeRequests","_loadScripts","requestPlaybackList","_resetSubscriptions","item","getPlaybackListSubscription","pipe","params","getPlaybackList","playbackListBaseUrl","playbackListName","startIndex","limit","subscribe","res","rows","dataCount","length","dataTotalCount","count","_initSubscriptions","totalItems","playbackListRequestParams","next","scriptStore","init","query","itemSubscriptionConfiguration","aggregateId","replace","registerForPlayback","playbackScriptName","listSubscriptionConfiguration","subscriptionToken","unRegisterForPlayback","payload","styles","NgEventstoreListingModule","provide","useValue","declarations","imports","exports","providers","PlaybackListService","http","url","JSON","stringify","console","log","providedIn","PlaybackService","pushService","playbackRegistry","token","unsubscribe","scriptName","owner","offset","load","script","playbackScript","window","objectName","err","eventObj","owner2","registration","context","playbackFunction","playbackInterface","name","state","funcs","targetQuery","done","doneCallback","subscriptionId","registrationId","PushService","io","subscriptions","ioPush","on","clientTokens","clientToken","sub","isNaN","streamRevision","cb","tags","monitorTags","tag","_meta","reason","eventType","stateType","eventSource","monitors","monitor","random","toString","substr","Date","now","subscribeStreams","connected","assign","error","Promise","resolve","reject","ack","ScriptService","scripts","loaded","src","promises","loadScript","all","status","document","createElement","type","readyState","onreadystatechange","onload","onerror","getElementsByTagName","appendChild","IO_TOKEN","webpackEmptyAsyncContext","req","then","e","code","module","routes","AppRoutingModule","forRoot","AppComponent","rowComponentClass","dealershipFilterFormControl","sortFormControl","socketUrl","aggregate","sortOptions","field","sortDirection","ASC","label","DESC","valueChanges","newFilter","operator","is","pageEvent","page","playbackListLoaded","AppModule","bootstrap","ScriptStore","scriptUrl","TestFooterComponent","pagesArray","cdr","numberOfPages","ceil","i","TestRowComponent","onChanges","playbackListUrl","bootstrapModule"],"mappings":"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;;AACE;;AAAM;;AAAiB;;AACzB;;AACA;;AACE;;AAAwB;;AAA+C;;AACzE;;AACF;;AACA;;AACE;;AACE;;AAAM;;AAAY;;AACpB;;AACA;;AAGF;;AACA;;AACE;;AACE;;AAAM;;AAAW;;AACnB;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA0C;;AAAc;;AAC1D;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AAAM;;AAAc;;AACtB;;AACA;;AACE;;AAAwB;;AAAyC;;AACnE;;AACF;;AACA;;AACE;;AACE;;AAAM;;AAAe;;AACvB;;AACA;;AAGF;;AACA;;AACE;;AACE;;AAAM;;AAAiB;;AACzB;;AACA;;AAGF;;AACA;;AACE;;AACE;;AAAM;;AAAa;;AACrB;;AACA;;AAEF;;AACA;;AACE;;AACE;;AACA;;AAAO;;AAA4B;;AACrC;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAiD;;AAAC;;AACpD;;AACA;;AACE;;AAAiD;;AAAU;;AAC7D;;AACA;;AACE;;AAAM;;AAAU;;AAChB;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA0C;;AAAW;;AACvD;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AAAO;;AAAO;;AAChB;;AACA;;AACF;;AACA;;AACE;;AACE;;AAAO;;AAAY;;AACrB;;AACA;;AACE;;AAAwB;;AAAgD;;AAC1E;;AACF;;AACA;;AACE;;AACE;;AAAO;;AAAiB;;AAC1B;;AACA;;AACE;;AAAwB;;AAAmD;;AAC7E;;AACF;;AACA;;AACE;;AACE;;AAAO;;AAAW;;AACpB;;AACA;;AACF;;AACA;;AACE;;AACE;;AAAO;;AAAgB;;AACzB;;AACA;;AACF;;AACA;;AACE;;AACE;;AAAO;;AAAiB;;AAC1B;;AACA;;AACF;;AACA;;AACE;;AACE;;AAAO;;AAAkB;;AAC3B;;AACA;;AACF;;AAEA;;AACE;;AACE;;AAA0C;;AAAgB;;AAC5D;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AAAuC;;AAAI;;AAC7C;;AACA;;AACE;;AAAiD;;;;AAA0E;;AAC7H;;AACF;;AACA;;AACE;;AACE;;AAA+B;;AAAgB;;AACjD;;AACA;;AACE;;AAAyC;;;;AAA0E;;AACrH;;AACF;;AAEA;;AACE;;AACE;;AAA+B;;AAAW;;AAC5C;;AACA;;AACE;;AAAyC;;;;AAAuD;;AAClG;;AACF;;AAEA;;AACE;;AACE;;AAA+B;;AAAgB;;AACjD;;AACA;;AACE;;AAAwB;;AAA2C;;AACrE;;AACF;;AAEA;;AACE;;AACE;;AACA;;AAAO;;AAAiC;;AAC1C;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAA0C;;AAAa;;AACzD;;AACF;;AAEA;;AACE;;AACE;;AAA0C;;AAAY;;AACxD;;AACA;;AACE;;AAA0C;;AAAO;;AACnD;;AACF;;AACF;;AACF;;AAGF;;AACF;;;;AAhPuC;;AAAA;;AACA;;AAAA;;AAGC;;AAAA;;AAoBJ;;AAAA;;AAQA;;AAAA;;AAkCJ;;AAAA;;AAmEA;;AAAA;;AAQA;;AAAA;;AAyCyB;;AAAA;;AAQR;;AAAA;;AASA;;AAAA;;AASjB;;AAAA;;;;;;;;;sED9MnBA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACT9P,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;AER7B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMxC,WAAW,GAAG;AACzBC,gBAAU,EAAE,KADa;AAEzB0Q,eAAS,EAAE,8BAFc;AAGzB2B,qBAAe,EAAE,wBAHQ;AAIzBT,eAAS,EAAE;AAJc,KAApB;AAOP;;;;;;;AAOA;;;;;;;;;;;;;;;;;AClBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAY5R,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBsS,eAAzB,CAAyC,yDAAzC,WACS,UAAA5G,GAAG;AAAA,aAAIhB,OAAO,CAAC4D,KAAR,CAAc5C,GAAd,CAAJ;AAAA,KADZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n// NOTE: get the environments from process.env of docker-compose. currently hardcoded per environment.ts\n\nexport const environment = {\n  production: false,\n  pushHost: 'http://localhost:3000',\n  // profileHost: 'http://localhost:3002',\n  vehicleHost: 'http://localhost:3000',\n  // auctionHost: 'http://localhost:3004'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {\n  Component,\n  OnInit,\n  Input,\n  ViewChild,\n  ComponentFactoryResolver,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ComponentRef,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n  AfterViewInit,\n} from '@angular/core';\nimport { ItemTemplateComponent } from '../template-components/index';\nimport { TemplateDirective } from '../../directives/template.directive';\n\n@Component({\n  selector: 'lib-item-template-holder',\n  templateUrl: './item-template-holder.component.html',\n  styleUrls: ['./item-template-holder.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ItemTemplateHolderComponent\n  implements OnInit, OnChanges, AfterViewInit {\n  @Input() itemComponentClass: any;\n  @Input() data: any = {};\n  @Input() lookups: any = {};\n  @Output() updateEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() updateLookupsEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() showModalEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() deleteEmitter: EventEmitter<any> = new EventEmitter();\n\n  componentRef: ComponentRef<any>;\n  initialChanges: SimpleChanges;\n  @ViewChild(TemplateDirective) itemHost: TemplateDirective;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {}\n\n  ngOnInit(): void {\n    // this.loadComponent();\n  }\n\n  ngAfterViewInit(): void {\n    this.loadComponent();\n    if (this.initialChanges) {\n      this.ngOnChanges(this.initialChanges);\n      this.initialChanges = undefined;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const self = this;\n    if (self.componentRef) {\n      const changesKeys = Object.keys(changes);\n      changesKeys.forEach((key) => {\n        (self.componentRef.instance as ItemTemplateComponent)[key] =\n          changes[key].currentValue;\n      });\n      (self.componentRef.instance as ItemTemplateComponent).ngOnChanges(\n        changes\n      );\n    } else {\n      this.initialChanges = changes;\n    }\n  }\n\n  loadComponent(): void {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\n      this.itemComponentClass\n    );\n    const viewContainerRef = this.itemHost.viewContainerRef;\n    viewContainerRef.clear();\n\n    this.componentRef = viewContainerRef.createComponent(componentFactory);\n    (this.componentRef.instance as ItemTemplateComponent).data = this.data;\n    (this.componentRef\n      .instance as ItemTemplateComponent).onUpdateEmitter = this.updateEmitter;\n    (this.componentRef\n      .instance as ItemTemplateComponent).onUpdateLookupsEmitter = this.updateLookupsEmitter;\n    (this.componentRef\n      .instance as ItemTemplateComponent).onShowModalEmitter = this.showModalEmitter;\n    (this.componentRef\n      .instance as ItemTemplateComponent).onDeleteEmitter = this.deleteEmitter;\n    // (this.componentRef.instance as ItemTemplateComponent).idPropertyName = this.idPropertyName;\n    (this.componentRef\n      .instance as ItemTemplateComponent).lookups = this.lookups;\n    (this.componentRef.instance as ItemTemplateComponent).ngOnInit();\n  }\n}\n","<div class=\"row no-gutters\">\n  <div class=\"col-12\">\n    <ng-template libTemplateDirective></ng-template>\n  </div>\n</div>\n","import { Component, OnInit, ComponentFactoryResolver, Input, Output, EventEmitter, ViewChild, OnChanges, ComponentRef, SimpleChanges, AfterViewInit } from '@angular/core';\nimport { HeaderFooterTemplateComponent } from '../template-components/index';\nimport { TemplateDirective } from '../../directives/template.directive';\n\n@Component({\n  selector: 'lib-ng-header-footer-template-holder',\n  templateUrl: './ng-header-footer-template-holder.component.html',\n  styleUrls: ['./ng-header-footer-template-holder.component.css']\n})\nexport class NgHeaderFooterTemplateHolderComponent implements OnInit, OnChanges, AfterViewInit {\n  @Input() componentClass: any;\n  @Input() headerData: any = {};\n\n  @Input() pageIndex: number;\n  @Input() itemsPerPage: number;\n  @Input() actualItemCount: number;\n  @Input() totalItemCount: number;\n  @Input() maxSize = 5;\n\n  @Output() actionEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() pageChangedEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() filterEmitter: EventEmitter<any> = new EventEmitter();\n\n  componentRef: ComponentRef<any>;\n  @ViewChild(TemplateDirective) itemHost: TemplateDirective;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) { }\n\n  ngOnInit() {\n    // this.loadComponent();\n  }\n\n  ngAfterViewInit(): void {\n    this.loadComponent();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const self = this;\n    if (self.componentRef) {\n      const changesKeys = Object.keys(changes);\n      changesKeys.forEach((key) => {\n        (self.componentRef.instance as HeaderFooterTemplateComponent)[key] = changes[key].currentValue;\n      });\n      (self.componentRef.instance as HeaderFooterTemplateComponent).updatePageValues();\n    }\n  }\n\n  loadComponent() {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.componentClass);\n\n    const viewContainerRef = this.itemHost.viewContainerRef;\n    viewContainerRef.clear();\n\n    this.componentRef = viewContainerRef.createComponent(componentFactory);\n    (this.componentRef.instance as HeaderFooterTemplateComponent).data = this.headerData;\n    (this.componentRef.instance as HeaderFooterTemplateComponent).pageIndex = this.pageIndex;\n    (this.componentRef.instance as HeaderFooterTemplateComponent).itemsPerPage = this.itemsPerPage;\n    (this.componentRef.instance as HeaderFooterTemplateComponent).totalItemCount = this.totalItemCount;\n    (this.componentRef.instance as HeaderFooterTemplateComponent).actualItemCount = this.actualItemCount;\n    (this.componentRef.instance as HeaderFooterTemplateComponent).maxSize = this.maxSize;\n\n    (this.componentRef.instance as HeaderFooterTemplateComponent).actionEmitter = this.actionEmitter;\n    (this.componentRef.instance as HeaderFooterTemplateComponent).pageChangedEmitter = this.pageChangedEmitter;\n    (this.componentRef.instance as HeaderFooterTemplateComponent).filterEmitter = this.filterEmitter;\n\n    (this.componentRef.instance as HeaderFooterTemplateComponent).ngOnInit();\n    (this.componentRef.instance as HeaderFooterTemplateComponent).updatePageValues();\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <ng-template libTemplateDirective></ng-template>\n  </div>\n</div>\n","import { EventEmitter, OnInit, ChangeDetectorRef } from '@angular/core';\n\nexport abstract class HeaderFooterTemplateComponent implements OnInit {\n  // Event Emitters\n  actionEmitter: EventEmitter<any> = new EventEmitter();\n  pageChangedEmitter: EventEmitter<any> = new EventEmitter();\n  filterEmitter: EventEmitter<any> = new EventEmitter();\n\n  // Pager\n  totalItemCount: number;\n  pageStart: number;\n  pageEnd: number;\n  pageIndex: number;\n  maxSize: number;\n  itemsPerPage: number;\n  actualItemCount: number;\n\n  data: any; // Immutable item\n  lookups: any;\n\n  invalidSearch: boolean;\n\n  constructor(private changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngOnInit(): void { }\n\n  updatePageValues(): void {\n    this.pageStart = ((this.pageIndex - 1) * this.itemsPerPage) + 1;\n    this.pageEnd = Math.min((((this.pageIndex - 1) * this.itemsPerPage) + this.actualItemCount), this.totalItemCount);\n    this.changeDetectorRef.detectChanges();\n  }\n\n  onPageChanged = (event) => {\n    this.pageIndex = event;\n    this.updatePageValues();\n    this.pageChangedEmitter.emit(event);\n  }\n\n  onFilter = (event) => {\n    this.filterEmitter.emit(event);\n  }\n\n  onAction = (action: string, data?: any) => {\n    const actionData = {\n      action: action,\n      data: data\n    };\n    this.actionEmitter.emit(actionData);\n  }\n}\n","export { ItemTemplateComponent } from './item-template/item-template.component';\nexport { HeaderFooterTemplateComponent } from './header-footer-template/header-footer-template.component';\n","import {\n  EventEmitter,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectorRef,\n} from '@angular/core';\n\nexport abstract class ItemTemplateComponent implements OnInit, OnChanges {\n  // Event Emitters\n  onUpdateEmitter: EventEmitter<any> = new EventEmitter();\n  onUpdateLookupsEmitter: EventEmitter<any> = new EventEmitter();\n  onShowModalEmitter: EventEmitter<any> = new EventEmitter();\n  onDeleteEmitter: EventEmitter<any> = new EventEmitter();\n\n  idPropertyName: string;\n  data: any; // Immutable item\n  lookups: any;\n\n  _changeFn: (changes) => void;\n\n  constructor(protected changeDetectorRef?: ChangeDetectorRef) {}\n\n  ngOnInit(): void {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this._changeFn) {\n      this._changeFn(changes);\n    }\n\n    if (this.changeDetectorRef) {\n      this.changeDetectorRef.detectChanges();\n    }\n  }\n\n  registerChangeFunction = (changeFn: (changes) => void) => {\n    this._changeFn = changeFn;\n  }\n\n  onUpdate = (propertyName: string, actionData: any) => {\n    const actionEventEmitterData = {\n      propertyName: propertyName,\n      id: this.data.get(this.idPropertyName),\n      data: actionData,\n    };\n    this.onUpdateEmitter.emit(actionEventEmitterData);\n  }\n\n  onUpdateLookups = (lookup) => {\n    const actionEventEmitterData = {\n      lookup: lookup,\n    };\n    this.onUpdateLookupsEmitter.emit(actionEventEmitterData);\n  }\n\n  onShowModal = (modalName, data) => {\n    const actionEventEmitterData = {\n      modalName: modalName,\n      id: this.data.get(this.idPropertyName),\n      data: data,\n    };\n    this.onShowModalEmitter.emit(actionEventEmitterData);\n  }\n\n  onDelete = (actionData?: any) => {\n    const actionEventEmitterData = {\n      id: this.data.get(this.idPropertyName),\n      data: actionData,\n    };\n    this.onDeleteEmitter.emit(actionEventEmitterData);\n  }\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[libTemplateDirective]'\n})\nexport class TemplateDirective {\n  constructor(public viewContainerRef: ViewContainerRef) { }\n}\n","export enum FilterOperator {\n  range = 'range',\n  is = 'is',\n}\n","export enum SortDirection {\n  ASC = 'ASC',\n  DESC = 'DESC',\n}\n","<!-- <div *ngIf=\"listHeaderGroups && listHeaderGroups.groups && listHeaderGroups.groups.length > 0\"  [class]=\"'row ' + (listHeaderGroups && listHeaderGroups.generalRowClassName ? listHeaderGroups.generalRowClassName : '')\">\n  <div class=\"col-12\">\n    <div class=\"header bg-white p-2\">\n      <div [class]=\"'row ' + listHeaderGroups.generalRowClassName\">\n        <div *ngFor=\"let listHeaderGroup of listHeaderGroups.groups\" [class]=\"listHeaderGroup.className\">\n          <div [class]=\"'row ' + listHeaderGroups.generalRowClassName\">\n            <div *ngFor=\"let listHeader of listHeaderGroup.listHeaders\" [class]=\"listHeader.className\">\n              <span (click)=\"onSort(listHeader.sortProperty)\" [ngClass]=\"{ 'sort-header': listHeader.sortProperty }\">{{ listHeader.displayName }} <i *ngIf=\"sortFields[listHeader.sortProperty] && sortFields[listHeader.sortProperty].icon\" [class]=\"'sort-icon ' + sortFields[listHeader.sortProperty].icon\"></i></span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div> -->\n<!-- <div [class]=\"'row ' + (listHeaderGroups && listHeaderGroups.generalRowClassName) ? listHeaderGroups.generalRowClassName : ''\" *ngFor=\"let item of dataList; trackBy: trackByFn\"> -->\n<div class=\"row\" *ngFor=\"let item of dataList; trackBy: trackByFn\">\n  <div class=\"col-12\">\n    <lib-item-template-holder\n      [data]=\"item\"\n      [itemComponentClass]=\"itemComponentClass\"\n      [lookups]=\"lookups\"\n      (updateEmitter)=\"onUpdate($event)\"\n      (updateLookupsEmitter)=\"onUpdateLookups($event)\"\n      (showModalEmitter)=\"onShowModal($event)\"\n      (deleteEmitter)=\"onDelete($event)\">\n    </lib-item-template-holder>\n  </div>\n</div>\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  OnDestroy,\n} from '@angular/core';\n\nimport { switchMap, debounceTime } from 'rxjs/operators';\n\nimport {\n  SubscriptionConfiguration,\n  ListHeaderGroups,\n  Script,\n  PlaybackListResponse,\n  PlaybackList,\n  RowItem,\n  Filter,\n  Query,\n  Sort,\n  PlaybackListRequest,\n} from './models';\n\nimport { ScriptService } from './services/script.service';\nimport { PlaybackService } from './services/playback.service';\nimport { PlaybackListService } from './services/playback-list.service';\n\nimport * as Immutable from 'immutable';\nimport _defaultsDeep from 'lodash-es/defaultsDeep';\nimport _isEmpty from 'lodash-es/isEmpty';\nimport _isEqual from 'lodash-es/isEqual';\nimport _cloneDeep from 'lodash-es/cloneDeep';\nimport _clone from 'lodash-es/clone';\nimport _uniq from 'lodash-es/uniq';\nimport _merge from 'lodash-es/defaults';\nimport { Subscription, Subject } from 'rxjs';\n\n@Component({\n  selector: 'lib-ng-eventstore-listing',\n  templateUrl: './ng-eventstore-listing.component.html',\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NgEventstoreListingComponent\n  implements OnInit, OnChanges, OnDestroy {\n  @Output() updateEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() updateLookupsEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() showModalEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() deleteEmitter: EventEmitter<any> = new EventEmitter();\n  @Output() playbackListLoadedEmitter: EventEmitter<any> = new EventEmitter();\n\n  @Input() itemComponentClass: any;\n  @Input() lookups = {};\n  @Input() socketUrl: string;\n  @Input() playbackListBaseUrl: string;\n  @Input() scriptStore: Script[];\n  @Input() itemSubscriptionConfiguration: SubscriptionConfiguration;\n  @Input() listSubscriptionConfiguration: SubscriptionConfiguration;\n  @Input() playbackListName: string;\n  @Input() filters: Filter[] = null;\n  @Input() sort: Sort = null;\n  @Input() pageIndex = 1;\n  @Input() itemsPerPage: number;\n\n  dataList: Immutable.List<RowItem>;\n  dataCount: number;\n  dataTotalCount: number;\n  initialized = false;\n  getPlaybackListSubscription: Subscription;\n  getPlaybackListSubject: Subject<PlaybackListRequest> = new Subject();\n  subscriptionTokens: string[] = [];\n  playbackList: PlaybackList = {\n    get: (rowId: string, callback: (err, item) => void) => {\n      const rowIndex = this.dataList.findIndex((value: any) => {\n        return value.get('rowId') === rowId;\n      });\n\n      if (rowIndex > -1) {\n        callback(null, this.dataList.get(rowIndex));\n      } else {\n        callback(new Error(`Row with rowId: ${rowIndex} does not exist`), null);\n      }\n    },\n    add: (\n      rowId: string,\n      revision: number,\n      data: any,\n      meta: any,\n      callback: (err?: any) => void\n    ) => {\n      const newEntry = {\n        rowId: rowId,\n        revision: revision,\n        data: data,\n        meta: meta,\n      };\n\n      this.changeDetectorRef.markForCheck();\n      this.dataList = this.dataList.push(Immutable.fromJS(newEntry));\n      callback();\n    },\n    update: (\n      rowId: string,\n      revision: number,\n      oldData: any,\n      newData: any,\n      meta: any,\n      callback: (err?) => void\n    ) => {\n      const rowIndex = this.dataList.findIndex((value: any) => {\n        return value.get('rowId') === rowId;\n      });\n\n      const newEntry = Immutable.fromJS({\n        rowId: rowId,\n        revision: revision,\n        data: {\n          ...oldData,\n          ...newData,\n        },\n        meta: meta,\n      });\n\n      if (rowIndex > -1) {\n        this.dataList = this.dataList.set(rowIndex, newEntry);\n        callback();\n      } else {\n        callback(new Error(`Row with rowId: ${rowIndex} does not exist`));\n      }\n    },\n    delete: (rowId: string, callback: (error?: any) => void) => {\n      const rowIndex = this.dataList.findIndex((value: any) => {\n        return value.get('rowId') === rowId;\n      });\n\n      if (rowIndex > -1) {\n        this.dataList = this.dataList.remove(rowIndex);\n        callback(null);\n      } else {\n        callback(new Error(`Row with rowId: ${rowIndex} does not exist`));\n      }\n    },\n  };\n\n  stateFunctions = {\n    getState: (id: string) => {\n      const index = this.dataList.findIndex((row: any) => {\n        return row.get('rowId') === id;\n      });\n      return (this.dataList.get(index) as any).toJS();\n    },\n    setState: (id: string, data: any) => {\n      const index = this.dataList.findIndex((row: any) => {\n        return row.get('rowId') === id;\n      });\n      this.dataList = this.dataList.set(index, Immutable.fromJS(data));\n      this.changeDetectorRef.markForCheck();\n    },\n  };\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    private scriptService: ScriptService,\n    private playbackService: PlaybackService,\n    private playbackListService: PlaybackListService\n  ) {}\n\n  ngOnInit() {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const self = this;\n    if (!this.initialized) {\n      this._initializeRequests();\n      this._loadScripts();\n      this.initialized = true;\n    }\n\n    const changesKeys = Object.keys(changes);\n    changesKeys.forEach((key) => {\n      self[key] = changes[key].currentValue;\n      switch (key) {\n        case 'pageIndex':\n        case 'filters':\n        case 'sort': {\n          this.requestPlaybackList();\n          break;\n        }\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this._resetSubscriptions();\n  }\n\n  trackByFn(index: number, item: any) {\n    return item.get('rowId');\n  }\n\n  private _initializeRequests(): void {\n    this.getPlaybackListSubscription = this.getPlaybackListSubject\n      .pipe(\n        debounceTime(100),\n        switchMap((params) => {\n          return this.playbackListService.getPlaybackList(\n            this.playbackListBaseUrl,\n            params.playbackListName,\n            params.startIndex,\n            params.limit,\n            params.filters,\n            params.sort\n          );\n        })\n      )\n      .subscribe((res: PlaybackListResponse) => {\n        this.dataList = Immutable.fromJS(res.rows);\n        this.dataCount = res.rows.length;\n        this.dataTotalCount = res.count;\n\n        this._resetSubscriptions();\n        this._initSubscriptions();\n\n        this.changeDetectorRef.markForCheck();\n\n        this.playbackListLoadedEmitter.emit({\n          totalItems: this.dataTotalCount,\n          dataCount: this.dataCount,\n        });\n      });\n  }\n\n  getPlaybackList(\n    playbackListName: string,\n    startIndex: number,\n    limit: number,\n    filters?: Filter[],\n    sort?: Sort\n  ) {\n    const playbackListRequestParams: PlaybackListRequest = {\n      playbackListName: playbackListName,\n      startIndex: startIndex,\n      limit: limit,\n      filters: filters,\n      sort: sort,\n    };\n    this.getPlaybackListSubject.next(playbackListRequestParams);\n  }\n\n  requestPlaybackList() {\n    const startIndex = this.itemsPerPage * (this.pageIndex - 1);\n    this.getPlaybackList(\n      this.playbackListName,\n      startIndex,\n      this.itemsPerPage,\n      this.filters,\n      this.sort\n    );\n  }\n\n  private _loadScripts() {\n    if (this.scriptStore) {\n      this.scriptService.init(this.scriptStore);\n    }\n  }\n\n  private async _initSubscriptions() {\n    const self = this;\n    // Per row subscriptions\n    self.dataList.forEach(async (row: any) => {\n      const query: Query = _clone(self.itemSubscriptionConfiguration.query);\n      query.aggregateId = query.aggregateId.replace(\n        /{{rowId}}/g,\n        row.get('rowId')\n      );\n      this.subscriptionTokens.push(\n        await self.playbackService.registerForPlayback(\n          self.itemSubscriptionConfiguration.playbackScriptName,\n          self,\n          query,\n          self.stateFunctions,\n          row.get('revision') + 1,\n          self.playbackList\n        )\n      );\n    });\n\n    // List subscription\n    this.subscriptionTokens.push(\n      await self.playbackService.registerForPlayback(\n        self.listSubscriptionConfiguration.playbackScriptName,\n        self,\n        self.listSubscriptionConfiguration.query,\n        self.stateFunctions,\n        // TODO: Revision response from getPlaybackList\n        0,\n        self.playbackList\n      )\n    );\n  }\n\n  private _resetSubscriptions() {\n    this.subscriptionTokens.forEach((subscriptionToken) => {\n      this.playbackService.unRegisterForPlayback(subscriptionToken);\n    });\n    this.subscriptionTokens = [];\n  }\n\n  onUpdate(payload: any) {\n    this.updateEmitter.emit(payload);\n  }\n\n  onUpdateLookups(payload: any) {\n    this.updateLookupsEmitter.emit(payload);\n  }\n\n  onShowModal(payload: any) {\n    this.showModalEmitter.emit(payload);\n  }\n\n  onDelete(payload: any) {\n    this.deleteEmitter.emit(payload);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgEventstoreListingComponent } from './ng-eventstore-listing.component';\nimport { ItemTemplateHolderComponent } from './components/item-template-holder/item-template-holder.component';\nimport { NgHeaderFooterTemplateHolderComponent } from './components/ng-header-footer-template-holder/ng-header-footer-template-holder.component';\n\nimport { CommonModule } from '@angular/common';\nimport { TemplateDirective } from './directives/template.directive';\nimport { IO_TOKEN } from './services/socket.io.service';\n\nimport * as io from 'socket.io-client';\n\n@NgModule({\n  declarations: [\n    NgEventstoreListingComponent,\n    ItemTemplateHolderComponent,\n    NgHeaderFooterTemplateHolderComponent,\n    TemplateDirective,\n  ],\n  imports: [CommonModule],\n  exports: [\n    NgEventstoreListingComponent,\n    NgHeaderFooterTemplateHolderComponent,\n  ],\n  providers: [{ provide: IO_TOKEN, useValue: io }],\n})\nexport class NgEventstoreListingModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { Filter, Sort, PlaybackListResponse } from '../models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlaybackListService {\n  constructor(private http: HttpClient) {}\n\n  getPlaybackList(\n    playbackListBaseUrl: string,\n    playbackListName: string,\n    startIndex: number,\n    limit: number,\n    filters?: Filter[],\n    sort?: Sort\n  ): Observable<PlaybackListResponse> {\n    let url = `${playbackListBaseUrl}/playback-list/${playbackListName}?startIndex=${startIndex}&limit=${limit}`;\n\n    if (filters) {\n      url += `&filters=${JSON.stringify(filters)}`;\n    }\n\n    if (sort) {\n      console.log(sort);\n      url += `&sort=${JSON.stringify(sort)}`;\n    }\n\n    return this.http.get<PlaybackListResponse>(url);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ScriptService } from './script.service';\nimport { PushService } from './push.service';\nimport {\n  StateFunctions,\n  PlaybackList,\n  PlaybackRegistry,\n  Query,\n} from '../models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlaybackService {\n  private playbackRegistry: PlaybackRegistry = {};\n  constructor(\n    private scriptService: ScriptService,\n    private pushService: PushService\n  ) {}\n\n  async unRegisterForPlayback(token) {\n    // unsubscribe from push\n    await this.pushService.unsubscribe(token);\n\n    // unregister from playback registry\n    delete this.playbackRegistry[token];\n  }\n\n  async registerForPlayback(\n    scriptName: string,\n    owner: object,\n    query: Query,\n    stateFunctions: StateFunctions,\n    offset?: number,\n    playbackList?: PlaybackList\n  ) {\n    const script = await this.scriptService.load(scriptName);\n    const playbackScript = window[script[0].meta.objectName];\n\n    const subscriptionId = await this.pushService.subscribe(\n      query,\n      offset,\n      this,\n      (err, eventObj, owner2, token) => {\n        // owner is playbackservice\n        const self = owner2 as PlaybackService;\n        const registration = self.playbackRegistry[token];\n        // call the function\n        // const playbackList = self.createPlaybacklist(registration)\n\n        // if (typeof eventObj.stateType !== 'undefined' && eventObj.eventSource)\n        //   eventObj = eventObj.eventSource;\n\n        if (eventObj.context === 'states') {\n          //\n        } else {\n          const playbackFunction =\n            registration.playbackScript.playbackInterface[\n              eventObj.payload.name\n            ];\n\n          if (playbackFunction) {\n            const row = stateFunctions.getState(eventObj.aggregateId);\n            const state = row.data;\n            const funcs = {\n              emit: (targetQuery, payload, done) => {\n                done();\n              },\n              getPlaybackList: (\n                playbackListName: string,\n                callback: (err, playbackList: PlaybackList) => void\n              ) => {\n                if (registration.playbackList) {\n                  callback(null, registration.playbackList);\n                } else {\n                  callback(\n                    new Error(\n                      'PlaybackList does not exist in this registration'\n                    ),\n                    null\n                  );\n                }\n              },\n            };\n\n            const doneCallback = () => {\n              stateFunctions.setState(row.rowId, row);\n            };\n\n            playbackFunction(state, eventObj, funcs, doneCallback);\n          }\n        }\n      }\n    );\n\n    // just use the subscriptionId to map the push subscription to the playback\n    this.playbackRegistry[subscriptionId] = {\n      playbackScript: playbackScript,\n      owner: owner,\n      registrationId: subscriptionId,\n      playbackList: playbackList,\n    };\n\n    console.log('subscribed to playback: ', subscriptionId, query);\n    return subscriptionId;\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { IO_TOKEN } from './socket.io.service';\nimport { environment } from '../../environments/environment';\n\n// TODO: Make environment pluggable or derivable\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PushService {\n  private ioPush: any;\n  private subscriptions: any = {};\n  constructor(@Inject(IO_TOKEN) private io: any) {\n    this.ioPush = this.io(`${environment.pushHost}/events`);\n\n    const self = this;\n    this.ioPush.on('message', (eventObj, token) => {\n      console.log('got message from push server: ', eventObj, token);\n      const clientTokens = Object.keys(self.subscriptions);\n      // redirect to mapped subscription/token callback\n      clientTokens.forEach((clientToken) => {\n        const sub = self.subscriptions[clientToken];\n        if (sub.token === token) {\n          // update next offset (from stream revision) for this subscription, so for reconnecting\n          if (!isNaN(eventObj.streamRevision)) {\n            sub.offset = eventObj.streamRevision + 1;\n          }\n          if (typeof sub.cb === 'function') {\n            sub.cb(undefined, eventObj, sub.owner, clientToken);\n          }\n\n          // iterate on monitors meta tags\n          const tags = Object.keys(sub.monitorTags);\n          tags.forEach((tag) => {\n            // check for state/eventSource._meta or event._meta\n            if (eventObj._meta && eventObj._meta.tag === tag) {\n              let reason = 'N/A';\n              if (typeof eventObj.eventType === 'string') {\n                reason = eventObj.eventType;\n              } else if (typeof eventObj.stateType === 'string') {\n                reason = eventObj.stateType;\n                if (\n                  eventObj.eventSource &&\n                  typeof eventObj.eventSource.eventType === 'string'\n                ) {\n                  reason += ` <- ${eventObj.eventSource.eventType}`;\n                }\n              }\n              // iterate on the monitors\n              const monitors = sub.monitorTags[tag];\n              monitors.forEach((monitor) => {\n                monitor.callback(reason, eventObj._meta);\n              });\n            }\n          });\n        }\n      });\n    });\n  }\n\n  async subscribe(query, offset, owner, cb) {\n    const clientToken =\n      Math.random().toString(36).substr(2, 9) + '-' + Date.now().toString();\n    // map new subscription, then try to subscribe to server asap\n    this.subscriptions[clientToken] = {\n      query: query,\n      offset: offset,\n      owner: owner,\n      cb: cb,\n      monitorTags: {},\n    };\n\n    this.subscribeStreams();\n\n    return clientToken;\n  }\n\n  subscribeStreams() {\n    if (this.ioPush.connected) {\n      const clientTokens = Object.keys(this.subscriptions);\n      clientTokens.forEach((clientToken) => {\n        const sub = this.subscriptions[clientToken];\n        // do server subsribe for those without tokens yet\n        if (!sub.token) {\n          // build up proper subscribe request query\n          const query = Object.assign(sub.query, {\n            offset: sub.offset,\n          });\n          this.ioPush.emit('subscribe', query, (token: string) => {\n            if (token) {\n              console.log('Server Subscribed:', token, query);\n              sub.token = token;\n            } else {\n              console.error('Subscribe error for query', query);\n            }\n          });\n        }\n      });\n    }\n  }\n\n  unsubscribe(clientToken): Promise<void> {\n    return new Promise((resolve, reject) => {\n      try {\n        // just do a force server unsubscribe and removal of subscription entry\n        const sub = this.subscriptions[clientToken];\n        if (sub) {\n          if (sub.token && this.ioPush.connected) {\n            //  NOTE: need to handle unsubscribe/emit errors\n            this.ioPush.emit('unsubscribe', sub.token, (ack) => {\n              if (ack.error) {\n                console.error(ack.error);\n                reject(ack.error);\n              } else {\n                resolve();\n              }\n            });\n          }\n          delete this.subscriptions[clientToken];\n          resolve();\n          // console.log('Unsubscribed:', clientToken, subscriptions);\n        }\n        // no subscription\n        resolve();\n      } catch (error) {\n        reject(error);\n        console.error('error in unsubscribing: ', error);\n      }\n    });\n  }\n\n  // monitorMeta(clientToken, tag, timeout, cb) {\n  //   const self = this;\n  //   const sub = self.subscriptions[clientToken];\n  //   if (sub && typeof tag === 'string' && typeof cb === 'function') {\n  //     const monitorToken =\n  //       Math.random().toString(36).substr(2, 9) + '-' + Date.now().toString();\n  //     // setup monitor token/filter/callback mapping\n  //     if (!sub.monitorTags[tag]) { sub.monitorTags[tag] = []; }\n  //     sub.monitorTags[tag].push({\n  //       token: monitorToken,\n  //       callback: cb,\n  //     });\n  //     setTimeout(() => {\n  //       const sub = self.subscriptions[clientToken];\n  //       if (sub && Array.isArray(sub.monitorTags[tag])) {\n  //         const idx = sub.monitorTags[tag].findIndex(\n  //           (x) => x.token === monitorToken\n  //         );\n  //         if (idx != -1) { sub.monitorTags[tag].splice(idx, 1); }\n  //         if (sub.monitorTags[tag].length <= 0) { delete sub.monitorTags[tag]; }\n  //         // console.log('TAGS:', clientToken, sub.monitorTags);\n  //       }\n  //     }, timeout);\n  //   }\n  // }\n}\n","import { Injectable } from '@angular/core';\nimport { Script } from '../models';\n\ndeclare var document: any;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScriptService {\n  private scripts: any = {};\n\n  constructor() {}\n\n  init(scriptStore: Script[]) {\n    scriptStore.forEach((script: Script) => {\n      this.scripts[script.name] = {\n        loaded: false,\n        src: script.src,\n        meta: script.meta,\n      };\n    });\n  }\n\n  load(...scripts: string[]): Promise<any> {\n    const promises: any[] = [];\n    scripts.forEach((script) => promises.push(this.loadScript(script)));\n    return Promise.all(promises);\n  }\n\n  loadScript(name: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      // resolve if already loaded\n      if (this.scripts[name].loaded) {\n        resolve({\n          script: name,\n          loaded: true,\n          status: 'Already Loaded',\n          meta: this.scripts[name].meta,\n        });\n      } else {\n        // load script\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src = this.scripts[name].src;\n        if (script.readyState) {\n          // IE\n          script.onreadystatechange = () => {\n            if (\n              script.readyState === 'loaded' ||\n              script.readyState === 'complete'\n            ) {\n              script.onreadystatechange = null;\n              this.scripts[name].loaded = true;\n              resolve({\n                script: name,\n                loaded: true,\n                status: 'Loaded',\n                meta: this.scripts[name].meta,\n              });\n            }\n          };\n        } else {\n          // Others\n          script.onload = () => {\n            this.scripts[name].loaded = true;\n            resolve({\n              script: name,\n              loaded: true,\n              status: 'Loaded',\n              meta: this.scripts[name].meta,\n            });\n          };\n        }\n        script.onerror = (error: any) =>\n          resolve({\n            script: name,\n            loaded: false,\n            status: 'Loaded',\n            meta: this.scripts[name].meta,\n          });\n        document.getElementsByTagName('head')[0].appendChild(script);\n      }\n    });\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport let IO_TOKEN = new InjectionToken('io');\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ChangeDetectionStrategy, OnInit } from '@angular/core';\nimport { TestRowComponent } from './test-row/test-row.component';\nimport {\n  SubscriptionConfiguration,\n  Filter,\n  Sort,\n} from 'projects/ng-eventstore-listing/src/lib/models';\nimport { ScriptStore } from './script.store';\nimport { FormControl } from '@angular/forms';\nimport { FilterOperator } from 'projects/ng-eventstore-listing/src/lib/enums/filter-types';\nimport { SortDirection } from 'projects/ng-eventstore-listing/src/lib/enums/sort-direction';\nimport { environment } from '../environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent implements OnInit {\n  rowComponentClass = TestRowComponent;\n\n  dealershipFilterFormControl = new FormControl();\n  sortFormControl = new FormControl();\n\n  // FOR DEMO\n  itemsPerPage = 3; // = 25;\n  pageIndex = 1;\n  filters: Filter[];\n  sort: Sort;\n  totalItems = 0;\n\n  socketUrl = environment.socketUrl;\n\n  scriptStore = ScriptStore;\n  playbackListName = 'auction_titles_list_view';\n\n  itemSubscriptionConfiguration: SubscriptionConfiguration = {\n    query: {\n      context: 'auction',\n      aggregate: 'auction-titles-dashboard-vehicle',\n      aggregateId: `{{rowId}}`,\n    },\n    playbackScriptName: 'auction-titles-dashboard-vehicle',\n  };\n\n  listSubscriptionConfiguration: SubscriptionConfiguration = {\n    query: {\n      context: 'states',\n      aggregate: 'titles-dashboard-list-projection',\n      aggregateId: 'titles-dashboard-list-projection-result',\n    },\n    playbackScriptName: 'auction-titles-dashboard-vehicle-list',\n  };\n\n  sortOptions: any[] = [\n    {\n      field: 'soldAt',\n      sortDirection: SortDirection.ASC,\n      label: 'Sold Date (Newest First)',\n    },\n    {\n      field: 'soldAt',\n      sortDirection: SortDirection.DESC,\n      label: 'Sold Date (Oldest First)',\n    },\n  ];\n\n  constructor() {}\n\n  ngOnInit() {\n    this.dealershipFilterFormControl.valueChanges.subscribe((value) => {\n      if (value) {\n        const newFilter: Filter = {\n          operator: FilterOperator.is,\n          field: 'dealershipId',\n          value: value,\n        };\n\n        this.filters = [newFilter];\n      }\n    });\n\n    this.sortFormControl.valueChanges.subscribe((value) => {\n      const sort: Sort = {\n        field: value.field,\n        sortDirection: value.sortDirection,\n      };\n      this.sort = sort;\n    });\n  }\n\n  onPageChanged(pageEvent: any) {\n    this.pageIndex = pageEvent.page;\n  }\n\n  playbackListLoaded(data) {\n    this.totalItems = data.totalItems;\n  }\n}\n","<div class=\"container-fluid pt-4\">\n  <h3>NG Eventstore Listing Demo</h3>\n\n\n  <h5> Filters </h5>\n\n  <label for=\"dealership-filter\">Seller Dealership: </label>\n  <select [formControl]=\"dealershipFilterFormControl\" id=\"dealership-filter\">\n    <option value=\"dealership-1\">Glendale Toyota</option>\n    <option value=\"dealership-2\">Honda of Vacaville</option>\n    <option value=\"dealership-3\">Airport Marina Ford</option>\n    <!-- <option [value]=\"dealership-4\">Dealership 4</option>\n    <option [value]=\"dealership-5\">Dealership 5</option> -->\n  </select>\n\n  <label for=\"sort\">Sort By: </label>\n  <select [formControl]=\"sortFormControl\" id=\"sort\">\n    <option *ngFor=\"let sortOption of sortOptions\" [ngValue]=\"sortOption\">{{ sortOption.label }}</option>\n  </select>\n\n  <pagination [totalItems]=\"totalItems\" [itemsPerPage]=\"itemsPerPage\" (pageChanged)=\"onPageChanged($event)\"></pagination>\n\n  <lib-ng-eventstore-listing\n    (playbackListLoadedEmitter)=\"playbackListLoaded($event)\"\n    [itemComponentClass]=\"rowComponentClass\"\n    [itemSubscriptionConfiguration]=\"itemSubscriptionConfiguration\"\n    [listSubscriptionConfiguration]=\"listSubscriptionConfiguration\"\n    [socketUrl]=\"socketUrl\"\n    [scriptStore]=\"scriptStore\"\n    [playbackListName]=\"playbackListName\"\n    [pageIndex]=\"pageIndex\"\n    [itemsPerPage]=\"itemsPerPage\"\n    [filters]=\"filters\"\n    [sort]=\"sort\">\n  </lib-ng-eventstore-listing>\n\n  <pagination [totalItems]=\"totalItems\" [itemsPerPage]=\"itemsPerPage\" (pageChanged)=\"onPageChanged($event)\"></pagination>\n\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgEventstoreListingModule } from '../../../ng-eventstore-listing/src/lib/ng-eventstore-listing.module';\nimport { TestRowComponent } from './test-row/test-row.component';\nimport { TestFooterComponent } from './test-footer/test-footer.component';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\n\n@NgModule({\n  declarations: [AppComponent, TestRowComponent, TestFooterComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgEventstoreListingModule,\n    PaginationModule.forRoot(),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Script } from 'projects/ng-eventstore-listing/src/lib/models';\nimport { environment } from '../environments/environment';\n\n// TODO: Can be simplified\nexport const ScriptStore: Script[] = [\n  {\n    name: 'auction-sales-channel-instance-vehicle-list',\n    meta: { objectName: 'auction-sales-channel-instance-vehicle-list' },\n    src: `${environment.scriptUrl}/auction-sales-channel-instance-vehicle-list.projection.js`,\n  },\n  {\n    name: 'auction-titles-dashboard-vehicle-list',\n    meta: { objectName: 'auction-titles-dashboard-vehicle-list' },\n    src: `${environment.scriptUrl}/auction-titles-dashboard-list.projection.js`,\n  },\n  {\n    name: 'auction-vehicle-list',\n    meta: { objectName: 'auction-vehicle-list' },\n    src: `${environment.scriptUrl}//auction-vehicle-list.projection.js`,\n  },\n  {\n    name: 'auction-titles-dashboard-vehicle',\n    meta: { objectName: 'auction-titles-dashboard-vehicle' },\n    src: `${environment.scriptUrl}//auction-titles-dashboard-vehicle.projection.js`,\n  },\n];\n","import { Component, OnInit, ChangeDetectorRef, SimpleChanges } from '@angular/core';\nimport { HeaderFooterTemplateComponent } from '../../../../ng-eventstore-listing/src/lib/components/template-components';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test-footer.component.html',\n  styleUrls: ['./test-footer.component.css']\n})\nexport class TestFooterComponent extends HeaderFooterTemplateComponent implements OnInit {\n  cdr: ChangeDetectorRef;\n  constructor(changeDetectorRef: ChangeDetectorRef) {\n    super(changeDetectorRef);\n    this.cdr = changeDetectorRef;\n  }\n\n  pagesArray = [];\n  numberOfPages: number;\n\n  ngOnInit(): void {\n    this.pagesArray = [];\n    this.numberOfPages = Math.ceil(this.totalItemCount / this.itemsPerPage);\n    for (let i = 0; i < this.numberOfPages; i++) {\n      this.pagesArray.push(i + 1);\n    }\n\n    this.cdr.detectChanges();\n  }\n\n  onPage(page) {\n    this.onPageChanged(page);\n  }\n\n}\n","<div class=\"row mt-3\">\n  <div *ngIf=\"totalItemCount\" class=\"pager-container col-4 offset-8 text-right\">\n    <label class=\"text-sm d-lg-inline-block pr-2\">{{pageStart}}-{{pageEnd}} of {{totalItemCount}}</label>\n    <!-- <pagination class=\"d-inline-flex text-sm\" previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\"\n        [totalItems]=\"totalItemCount\" [maxSize]=\"maxSize\" [boundaryLinks]=\"true\" [rotate]=\"false\"\n        [itemsPerPage]=\"itemsPerPage\" [(ngModel)]=\"pageIndex\"\n        (pageChanged)=\"onPageChanged($event)\">\n    </pagination> -->\n    <div>\n      <span *ngFor=\"let page of pagesArray\">|<a href=\"#\" (click)=\"onPage(page)\"> {{ page }} </a>{{ +page === pagesArray.length ? '|' : '' }}</span>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ChangeDetectorRef, SimpleChanges } from '@angular/core';\nimport { ItemTemplateComponent } from 'projects/ng-eventstore-listing/src/lib/components/template-components';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test-row.component.html',\n  styleUrls: ['./test-row.component.css']\n})\nexport class TestRowComponent extends ItemTemplateComponent implements OnInit {\n  constructor(changeDetectorRef: ChangeDetectorRef) {\n    super(changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    // Bind onChanges\n    this.registerChangeFunction(this.onChanges);\n  }\n\n  onChanges(changes: SimpleChanges) { }\n\n}\n","<div class=\"row row-item\">\n  <!-- First Column -->\n  <div class=\"col-3 border-right\">\n    <!-- Vehicle Description -->\n    <div class=\"row no-gutters mb-3 mt-1\">\n      <div class=\"col-7 text-md\">\n        <span class=\"font-weight-bold\">{{ data.get('data').get('yearName') + ' ' + data.get('data').get('makeName') + ' ' +  data.get('data').get('modelName') }}</span> <br>\n        <span class=\"font-weight-bold\">{{ data.get('data').get('vin') }}</span>\n      </div>\n      <div class=\"col-4 text-md\">\n        <label class=\"font-weight-bold\">{{ data.get('data').get('mileage') | number:'0.0-0' }}mi</label>\n      </div>\n      <div class=\"col-1 text-md\">\n      </div>\n    </div>\n    <!-- Seller Information -->\n    <div class=\"row no-gutters\">\n      <div class=\"col-12\">\n        <div class=\"row mb-2\">\n          <div class=\"col-6\">\n            <span>Seller: </span>\n          </div>\n          <div class=\"col-6 text-md\">\n          </div>\n        </div>\n        <div class=\"row mb-2\">\n          <div class=\"col-6\">\n            <span>Dealership: </span>\n          </div>\n          <div class=\"col-6 text-md\">\n            <div class=\"text-right\">{{ data.get('data').get('dealershipName') }}</div>\n          </div>\n        </div>\n        <div class=\"row mb-2\">\n          <div class=\"col-6\">\n            <span>Mailing Address: </span>\n          </div>\n          <div class=\"col-6\">\n            <div class=\"text-right\">{{ data.get('data').get('dealershipAddress') }}</div>\n          </div>\n        </div>\n        <div class=\"row mb-2\">\n          <div class=\"col-6\">\n            <span>Seller Rep: </span>\n          </div>\n          <div class=\"col-6\">\n            <!-- <label class=\"font-weight-bold\">{{ data.get('data').get('mileage') | number:'0.0-0' }}mi</label> -->\n          </div>\n        </div>\n        <div class=\"row mb-4\">\n          <div class=\"col-6\">\n            <span>DMV Clerk: </span>\n          </div>\n          <div class=\"col-6 text-md\">\n            <!-- <label class=\"font-weight-bold\">{{ data.get('data').get('mileage') | number:'0.0-0' }}mi</label> -->\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row mb-2\">\n      <div class=\"col-12 bottom-align\">\n        <button class=\"btn btn-default btn-block\">Folow-up Notes</button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-3 pt-1 border-right\">\n    <div class=\"row mb-2\">\n      <div class=\"col-6\">\n        <span>Title Status: </span>\n      </div>\n      <div class=\"col-6 text-md\">\n        <div class=\"text-right\">{{ data.get('data').get('titleStatus') }}</div>\n      </div>\n    </div>\n    <div class=\"row mb-2\">\n      <div class=\"col-6\">\n        <span>Received Date: </span>\n      </div>\n      <div class=\"col-6 text-md\">\n        <!-- <label class=\"font-weight-bold\">{{ data.get('data').get('mileage') | number:'0.0-0' }}mi</label> -->\n      </div>\n    </div>\n    <div class=\"row mb-2\">\n      <div class=\"col-6\">\n        <span>Tracking Number: </span>\n      </div>\n      <div class=\"col-6 text-md\">\n        <!-- <label class=\"font-weight-bold\">{{ data.get('data').get('mileage') | number:'0.0-0' }}mi</label> -->\n      </div>\n    </div>\n    <div class=\"row mb-2\">\n      <div class=\"col-6\">\n        <span>Title Clerk: </span>\n      </div>\n      <div class=\"col-6 text-md\">\n      </div>\n    </div>\n    <div class=\"row mb-5 pb-3\">\n      <div class=\"col-12\">\n        <input class=\"checkbox\" type=\"checkbox\">\n        <label>&nbsp;&nbsp; Title Received </label>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-12 bottom-align\">\n        <div class=\"row mb-2 pb-1 no-gutters\">\n          <div class=\"col-2 pr-1\">\n            <button class=\"btn btn-default btn-block btn-sm\">^</button>\n          </div>\n          <div class=\"col-5 px-1\">\n            <button class=\"btn btn-default btn-block btn-sm\">View Title</button>\n          </div>\n          <div class=\"col-5\">\n            <span>03-02-2020</span>\n            TR\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <button class=\"btn btn-default btn-block\">Recap Notes</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- 3rd Column -->\n  <div class=\"col-3 pt-1 border-right\">\n    <div class=\"row mb-2\">\n      <div class=\"col-6\">\n        <span> Buyer: </span>\n      </div>\n      <div class=\"col-6\"></div>\n    </div>\n    <div class=\"row mb-2\">\n      <div class=\"col-6\">\n        <span> Dealership: </span>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"text-right\">{{ data.get('data').get('soldDealershipName') }}</div>\n      </div>\n    </div>\n    <div class=\"row mb-2\">\n      <div class=\"col-6\">\n        <span> Mailing Address: </span>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"text-right\">{{ data.get('data').get('soldDealershipAddress') }}</div>\n      </div>\n    </div>\n    <div class=\"row mb-2\">\n      <div class=\"col-6\">\n        <span> Buyer Rep: </span>\n      </div>\n      <div class=\"col-6\"></div>\n    </div>\n    <div class=\"row mb-2\">\n      <div class=\"col-6\">\n        <span> Title to Buyer: </span>\n      </div>\n      <div class=\"col-6\"></div>\n    </div>\n    <div class=\"row mb-2\">\n      <div class=\"col-6\">\n        <span> Tracking Number: </span>\n      </div>\n      <div class=\"col-6\"></div>\n    </div>\n    <div class=\"row mb-5 pb-2\">\n      <div class=\"col-6\">\n        <span> Collection Issue: </span>\n      </div>\n      <div class=\"col-6\"></div>\n    </div>\n    <!-- Seller Responses Button -->\n    <div class=\"row mb-2\">\n      <div class=\"col-12 bottom-align\">\n        <button class=\"btn btn-default btn-block\">Seller Responses</button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-3 pt-1\">\n    <div class=\"row mb-2\">\n      <div class=\"col-6\">\n        <span class=\"font-weight-bold text-md\">SOLD</span>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"font-weight-bold text-md text-right\">{{ data.get('data').get('soldAmount') | currency:'USD':'symbol':'0.0-0' }}</div>\n      </div>\n    </div>\n    <div class=\"row mb-2\">\n      <div class=\"col-6\">\n        <span class=\"font-weight-bold\">Current Amount: </span>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"font-weight-bold text-right\">{{ data.get('data').get('soldAmount') | currency:'USD':'symbol':'0.0-0' }}</div>\n      </div>\n    </div>\n\n    <div class=\"row mb-2\">\n      <div class=\"col-6\">\n        <span class=\"font-weight-bold\">Sold Date: </span>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"font-weight-bold text-right\">{{ data.get('data').get('soldAt') | date:'MMMM d, y' }}</div>\n      </div>\n    </div>\n\n    <div class=\"row mb-3\">\n      <div class=\"col-6\">\n        <span class=\"font-weight-bold\">Payment Method: </span>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"text-right\">{{ data.get('data').get('paymentMethod') }}</div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <input class=\"checkbox\" type=\"checkbox\">\n        <label>&nbsp;&nbsp; Pending Arbitration </label>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-12 bottom-align\">\n        <div class=\"row mb-2 no-gutters\">\n          <div class=\"col-6 pr-1\">\n            <button class=\"btn btn-default btn-block\">Buyer Invoice</button>\n          </div>\n        </div>\n    \n        <div class=\"row no-gutters\">\n          <div class=\"col-6 pr-1\">\n            <button class=\"btn btn-default btn-block\">Adjust Price</button>\n          </div>\n          <div class=\"col-6 pl-1\">\n            <button class=\"btn btn-default btn-block\">History</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n   \n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  socketUrl: 'http://localhost:3000/events',\n  playbackListUrl: 'http://localhost:3000/',\n  scriptUrl: 'http://localhost:3000/',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}